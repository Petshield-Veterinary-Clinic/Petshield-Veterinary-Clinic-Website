{"version":3,"sources":["features/modals/modalSlice.js","components/modals/ErrorModal.jsx","components/modals/LoadingModal.jsx","components/modals/SuccessModal.jsx","consts/config.js","consts/theme.js","consts/index.js","api/axios.js","api/auth.js","features/auth/authSlice.js","components/modals/ConfirmationModal.jsx","app/history.js","components/modals/LogoutModal.jsx","api/clients.js","features/modals/infoModalSlice.js","features/clients/clientsSlice.js","features/clients/clientsModals/AddClientModal/AddClientForm.jsx","features/clients/clientsModals/AddClientModal/AddClientModal.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableHeader.jsx","api/inventory.js","features/inventory/inventorySearchSlice.js","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableAddItemRow.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTable.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableContainer.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsModal.jsx","features/clients/clientsModals/VeterinarianNoteModal/VeterinarianNoteModal.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentForm.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentModal.jsx","features/clients/clientsModals/ClientAppointmentsModal/ClientAppointmentsModal.jsx","features/inventory/inventoryItems/inventoryItemsSlice.js","features/inventory/inventoryModals/InventoryAddItemModal.jsx","features/inventory/inventoryModals/InventoryManageItemModal.jsx","features/inventory/inventoryModals/InventoryModifyItemModal.jsx","features/inventory/inventoryModals/InventoryDiscountItemModal.jsx","features/inventory/inventorySales/inventorySalesSlice.js","features/modals/ModalManager.jsx","features/inventory/inventoryModals/InventoryAddItemSaleConfirmationModal.jsx","features/inventory/inventoryModals/InventoryDeleteItemSaleConfirmationModal.jsx","features/drawer/drawerSlice.js","api/notification.js","features/notifications/notificationsSlice.js","features/notifications/NotificationItem.jsx","features/notifications/NotificationsList.jsx","features/notifications/Notifications.jsx","components/CustomAppBar.jsx","assets/house.svg","assets/all_clients.svg","assets/all_items.svg","assets/appointments.svg","assets/clients.svg","assets/dashboard.svg","assets/inventory.svg","assets/item_transactions.svg","assets/payments.svg","assets/pet_queue.svg","components/CustomDrawer.jsx","components/PrivateLayout.jsx","features/auth/login/loginForm.jsx","assets/login_background.png","assets/logo.png","features/auth/login/loginPage.jsx","api/stats.js","features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice.js","features/home/homeDashboard/homeSalesStats/HomeSalesStatsDatePicker.jsx","features/home/homeDashboard/homeSalesStats/components/HomeSalesStatsTooltip.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStatsGraph.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStats.jsx","features/home/homeDashboard/HomeDashboard.jsx","assets/consultations.svg","assets/rx_icon.png","features/home/homePetQueues/ConsultationCard.jsx","features/home/homePetQueues/ConsultationsCard.jsx","assets/admitted.svg","features/home/homePetQueues/AdmittanceCard.jsx","features/home/homePetQueues/AdmittancesCard.jsx","features/home/homePetQueues/HomePetQueues.jsx","features/home/HomePage.jsx","features/clients/clientsAllClients/ClientCard.jsx","features/clients/clientsAllClients/ClientsAllClientsList.jsx","features/clients/clientsAllClients/ClientsAllClientListHeader.jsx","features/clients/clientsAllClients/ClientsAllClients.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentTooltip.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerMonthCell.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointment.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsScheduler.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer.jsx","features/clients/clientsAppointments/ClientsAppointments.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableHeader.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableAddItemRow.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTable.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableContainer.jsx","components/sales/SalesCard.jsx","components/sales/SalesDatePicker.jsx","components/sales/SalesStats.jsx","features/clients/clientsPayments/ClientPayments.jsx","features/clients/ClientsPage.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableFooter.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableHeader.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTable.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableContainer.jsx","features/inventory/inventoryItems/InventoryItems.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableHeader.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableAddItemRow.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTable.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableContainer.jsx","features/inventory/inventorySales/InventorySales.jsx","features/inventory/InventoryPage.jsx","features/modals/InfoModalManager.jsx","app/App.jsx","app/rootReducer.js","app/store.js","index.jsx"],"names":["modalsSlice","createSlice","name","initialState","modalType","modalProps","reducers","showModal","state","action","payload","hideModal","_","actions","ErrorModal","isVisible","message","duration","useState","open","setOpen","dispatch","useDispatch","Dialog","onClose","onEnter","setTimeout","TransitionProps","onExited","DialogTitle","DialogContent","DialogContentText","useStyles","makeStyles","theme","loadingIndicator","display","justifyContent","alignItems","padding","spacing","LoadingModal","classes","className","CircularProgress","color","SuccessModal","disableBackdropClick","config","API_BASE_URL","WS_BASE_URL","WS_TIMEOUT","darkTheme","responsiveFontSizes","createMuiTheme","palette","mode","primary","main","secondary","components","MuiMenu","styleOverrides","MuiCard","root","backgroundColor","MuiPaper","MuiTableCell","textAlign","disableAlign","drawerWidth","itemCategories","appointmentVaccineTypes","appointmentVaccineReoccuranceTypes","appointmentFollowUpReoccuranceTypes","appointmentFollowUpTypes","instance","axios","create","baseURL","headers","setToken","token","defaults","common","Authorization","login","credentials","a","post","response","data","Error","error","loginWithToken","get","authSlice","user","isLoading","loginStart","loginSuccess","authToken","localStorage","setItem","loginFailure","logoutStart","logoutSuccess","logoutFailure","checkAuthStart","checkAuthSuccess","checkAuthFailure","ConfirmationModal","title","handleNegativePressed","handlePositivePressed","DialogActions","Button","variant","onClick","createBrowserHistory","LogoutModal","clear","history","replace","addClient","client","branchName","updateClient","patch","ID","addClientPayment","clientId","itemId","quantity","salesDate","salesDateCateg","fetchClientPaymentHistory","fetchClientAppointments","removeAppointment","appointmentId","delete","addAppointment","appointment","updateAppointment","infoModals","showInfoModal","hideInfoModal","handleOnFailure","clientsSlice","clients","paymentHistory","appointments","clientAppointments","clientPayments","isClientsLoading","isPaymentsLoading","isAppointmentsLoading","isClientSearchingLoading","fetchClientsStart","fetchClientsSuccess","newClients","forEach","fetchClientsError","addClientStart","addClientSuccess","addClientError","updateClientStart","updateClientSuccess","updateClientsError","addClientPaymentStart","addClientPaymentSuccess","addClientPaymentError","fetchClientPaymentHistoryStart","fetchClientPaymentHistorySuccess","fetchClientPaymentHistoryError","fetchAllClientPaymentsStart","fetchAllClientPaymentsSuccess","fetchAllClientPaymentsError","addAppointmentStart","addAppointmentSuccess","addAppointmentError","updateAppointmentStart","updateAppointmentSuccess","updateAppointmentError","removeAppointmentStart","removeAppointmentSuccess","removeAppointmentError","fetchAppointmentsStart","fetchAppointmentsSuccess","fetchAppointmentsError","fetchClientAppointmentsStart","fetchClientAppointmentsSuccess","fetchClientAppointmentsError","updateClientError","fetchClients","getState","auth","getItem","WebSocket","onmessage","e","JSON","parse","metadata","apiAddClientPayment","newPayment","fetchAllClientPayments","AddClientForm","onSubmit","useForm","handleSubmit","register","errors","form","id","TextField","field","label","inputRef","required","clientName","address","fieldGroup","type","InputProps","startAdornment","InputAdornment","position","pattern","contactNumber","petName","petSpecies","petBreed","flexDirection","marginBottom","gridTemplate","gridGap","paddingBottom","breakpoints","up","width","itemCount","ClientTransactionsTableHeader","toggleAddItemSaleRow","startIcon","getItemsWithSearchTerm","searchTerm","addItem","item","parsedItem","price","Number","incentive","modifyItem","incentiveAmount","incentiveRate","discount","deleteItem","discountItem","addItemSale","itemQuantity","deleteItemSale","inventorySearchSlice","result","searchItemsStart","searchItemsSuccess","searchItemsFailure","clearItemsSearch","searchItems","items","height","quantityCell","buttonRows","gridTemplateColumns","submitButton","borderColor","cancelButton","ClientTransactionsTableAddItemRow","showAddItemSaleRow","selectedItem","setSelectedItem","setQuantity","currentDate","moment","Date","now","format","useSelector","inventorySearch","handleOnQuantityChange","value","target","parseInt","inStock","resetValues","onSubmitPressed","onCancelPressed","debouncedSearch","debounce","handleOnSearchTermChange","TableRow","TableCell","Typography","Autocomplete","loading","options","filter","getOptionLabel","option","renderInput","params","size","onChange","endAdornment","reason","sales","netSales","isIncentiveFixed","toFixed","Object","keys","length","fullWidth","salesCategory","Check","Cancel","renderItemDetails","overflow","showItemCountButtons","showItemCountField","tableHeader","pagination","paddingTop","border","borderRadius","fontWeight","itemDiscounted","blue","outOfStock","deleteButton","ClientTransactionsTable","columns","page","setPage","rowsPerPage","setRowsPerPage","useTable","useSortBy","getTableProps","headerGroups","prepareRow","rows","renderCell","cell","render","TableContainer","Table","stickyHeader","TableHead","map","headerGroup","header","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","fontSize","TableBody","container","slice","row","getRowProps","cells","index","getCellProps","itemIndex","Delete","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","event","ClientTransactionsTableContainer","stateToProps","useMemo","itemSale","col1","CreatedAt","col2","col3","col4","col5","col6","col7","incentives","col8","col9","category","Header","accessor","content","gap","AddAppointmentForm","startDate","isVaccine","clientIndex","defaultClient","pet","key","newClientName","control","defaultValue","rules","restProps","getOptionSelected","helperText","val","toDate","props","DatePicker","allowSameDateSelection","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","reoccurance","multiline","hasAppointment","white","dark","selected","CustomDay","date","selectedDate","_selectedDates","PickersDayComponentProps","adjustedDate","tz","undefined","find","isSame","isSelected","PickersDay","classnames","handleError","inventorySlice","itemSales","fetchItemsStart","fetchItemsSuccess","fetchItemsFailure","addItemStart","__","addItemSuccess","addItemFailure","modifyItemStart","modifyItemSuccess","newItem","modifyItemFailure","discountItemStart","discountItemSuccess","discountItemFailure","deleteItemStart","deleteItemSuccess","deleteItemFailure","addItemForm","addItemFormField","margin","flexGrow","incentiveFieldsWrapper","AddItemForm","setIncentiveFixed","defaultValues","remarks","noValidate","min","as","itemCategory","FormControlLabel","Checkbox","checked","disabled","max","deleteBtn","ModifyItemForm","itemDetails","DiscountItemForm","autoFocus","handleOnError","inventorySalesSlice","dailySales","fetchItemSalesStart","fetchItemSalesSuccess","fetchItemSalesError","addItemSaleStart","addItemSaleSuccess","addItemSaleFailure","deleteItemSaleStart","deleteItemSaleSuccess","deleteItemSaleFailure","fetchItemSales","inventorySales","addItemSaleToApi","newItemSale","modalComponents","ADD_ITEM_MODAL","handleOnClose","addItemToApi","ADD_SALE_CONFIRMATION_MODAL","DELETE_SALE_CONFIRMATION_MODAL","deleteItemSaleFromApi","deletedItemSale","MANAGE_ITEM_MODAL","deleteItemFromApi","MODIFY_ITEM_MODAL","updatedItem","modifyItemFromApi","DISCOUNT_ITEM_MODAL","discountItemFromApi","LOADING_MODAL","ERROR_MODAL","SUCCESS_MODAL","LOGOUT_MODAL","ADD_CLIENT_MODAL","align","parsedData","species","apiAddClient","newClient","ADD_APPOINTMENT_MODAL","setIsVaccine","useEffect","formattedDate","toISOString","apiAddAppointment","newAppointment","CLIENT_TRANSACTIONS_MODAL","apiFetchClientPaymentHistory","fullScreen","CLIENT_APPOINTMENTS_MODAL","setSelectedDate","useHistory","handleOnDateChanged","push","apiFetchClientAppointments","style","LocalizationProvider","dateAdapter","AdapterDateFns","DayPicker","disableHighlightToday","renderDay","allowKeyboardControl","CLIENT_VETERINARIAN_NOTE_MODAL","veterinarianNote","setVeterinarianNote","apiUpdateClient","updatedClient","ModalManager","modals","Modal","drawerSlice","isOpen","toggleDrawer","clearNotifications","updateNotification","notificationId","notificationsSlice","notifications","fetchNotificationsStart","fetchNotificationsSuccess","notificationsMap","n","i","fetchNotificationsError","clearNotificationsStart","clearNotificationsSuccess","clearNotificationsError","updateNotificationStart","updateNotificationSuccess","updateNotificationError","seen","opacity","NotificationItem","notif","onNotificationPressed","setSeen","ListItem","button","Divider","maxHeight","NotificationsList","onClearNotificationsPressed","List","k","Notifications","anchorEl","setAnchorEl","Boolean","handleOnNotificationPressed","notification","apiUpdateNotifications","handleOnClearNotificationsPressed","apiClearNotifications","IconButton","currentTarget","Badge","badgeContent","Menu","keepMounted","appBar","marginLeft","menuButton","marginRight","grow","appbarTitles","dashboard","payments","CustomAppBar","appbarTitle","setAppbarTitle","location","useLocation","isMenuOpen","splittedPathname","pathname","split","handleMenuClose","handleOnSignoutPressed","AppBar","Toolbar","aria-label","edge","AccountCircle","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","toolbar","mixins","drawer","flexShrink","drawerPaper","nested","paddingLeft","drawerIcon","fill","CustomDrawer","home","inventory","expandedItems","setExpandedItems","menuItems","handleOnClick","icon","HomeIcon","subItems","DashboardIcon","path","ClientsIcon","AllClientsIcon","PaymentsIcon","AppointmentsIcon","InventoryIcon","AllItemsIcon","ItemTransactionIcon","Fragment","ListItemIcon","src","beforeInjection","svg","classList","add","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","subItem","Link","to","handleDrawerToggle","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","smDown","PrivateLayout","Component","textField","LoginForm","showPassword","setShowPassword","username","password","background","top","left","backgroundImage","bg","backgroundPosition","backgroundSize","backgroundRepeat","maxWidth","placeContent","zIndex","centerItem","placeSelf","logo","LoginPage","loginUser","Paper","elevation","alt","getItemSalesStats","homeSalesStatsSlice","stats","fetchItemSalesStatsStart","fetchItemSalesStatsSuccess","fetchItemSalesStatsFailure","HomeSalesStatsDatePicker","setSalesDateCateg","setSalesDate","getItemSalesStatesFromApi","fetchItemSalesStats","views","monthly","yearly","HomeSalesStatsToolip","active","Card","filteredSales","renderData","tooltip","HomeSalesStatsGraph","homeSalesStats","lineData","setLineData","pieData","setPieData","pieColors","Grooming","default","pieMap","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","PieChart","Pie","graphWrapper","HomeSalesStats","toUpperCase","HomeDashboard","consultationInfoContainer","consultationButtonsContainer","consultationButton","petAvatar","owner","finish","rxIcon","ConsultationCard","Avatar","ButtonBase","PostAdd","Person","LibraryBooksOutlined","classNames","Event","RxIcon","subTitle","consultationList","marginTop","ConsultationsCard","CardContent","ConsultationsIcon","AdmittanceCard","admittancesList","AdmittancesCard","AdmittedIcon","HomePetQueues","HomePage","match","exact","url","infoContainer","buttonsContainer","clientMoreDetails","ClientCard","lastVisit","nextVisit","AccountBalance","EventNote","toString","email","minHeight","overflowY","overflowX","ClientsAllClientsList","ClientsAllClientsHeader","fuse","setClientResultsSearch","Search","results","search","handleSearchClientChanged","ClientsAllClients","clientsSearchResult","setClientsSearchResult","includeScore","Fuse","textCenter","commandButton","ClientAppointmentTooltipHeader","children","appointmentData","setIsEditing","isEditing","setAppointmentVisible","apiRemoveAppointment","Edit","ClientAppointmentTooltipContent","onAppointmentMetaChanged","Content","veterinarianNotes","apiUpdateAppointment","newAppointments","readOnly","MonthCell","TimeTableCell","String","ClientAppointment","ref","React","createRef","this","onAppointmentMetaChange","notificationState","setNotificationState","Array","isArray","current","parentElement","Appointment","appointmentWrapper","flexWrap","ClientAppointmentsScheduler","appointmentVisible","appointmentMeta","setAppointmentMeta","handleOnAppointmentMetaChanged","tooltipHeader","connectProps","tooltipContent","timeTableCellComponent","appointmentComponent","headerComponent","contentComponent","visible","onVisibilityChange","ClientAppointmentsSchedulerContainer","ap","endDate","ClientsAppointments","InventorySalesTableHeader","setSelectedClient","ClientPaymentsTableAddItemRow","selectedClient","ClientPaymentsTable","ClientPaymentsTableHeader","ClientPaymentsTableContainer","col10","SalesCard","picker","SalesDatePicker","onSalesDateChanged","onSalesDateCategChanged","datePickerViews","daily","selectedSalesDateCateg","setSelectedSalesDateCateg","selectedSalesDate","setSelectedSalesDate","handleOnSalesDateChanged","SalesStats","computedSales","setComputedSales","computedSalesBloodTest","setComputedSalesBloodTest","computedSalesGrooming","setComputedSalesGrooming","computedSalesVetSales","setComputedSalesVetSales","computedSalesStoreSales","setComputedSalesStoreSales","salesTitle","setSalesTitle","computeSales","useCallback","totalSales","getSalesTitle","substring","ClientPayments","ClientsPage","InventoryItemsTableFooter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","pageCount","pageSize","pageIndex","itemsCount","currPageItemCount","renderCurrPageItemCount","alignItem","InventoryItemsTableHeader","setPageSize","handleSearchItemChanged","addItemButton","endIcon","InventoryItemsTable","useFilters","usePagination","setFilter","column","discountAmount","values","cellInfo","InventoryItemsTableContainer","mapStateToProps","status","InventoryItems","inventoryItems","isSearching","InventorySalesTableAddItemRow","InventorySalesTable","InventorySalesTableContainer","InventorySales","InventoryPage","InfoModalManager","toastContainer","App","currentToken","from","rootReducer","combineReducers","inventoryItemsReducer","inventorySalesReducer","inventorySearchReducer","modalsReducer","infoModalsReducer","authReducer","drawerReducer","clientsReducer","notificationsReducer","store","configureStore","reducer","ReactDOM","StylesProvider","injectFirst","ThemeProvider","AdapterMoment","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cdd2b8c8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nlet initialState = {\r\n    modalType : null,\r\n    modalProps: {},\r\n}\r\n\r\nconst modalsSlice = createSlice({\r\n    name: \"modals\",\r\n    initialState,\r\n    reducers: {\r\n        showModal(state, action) {\r\n            state.modalType = action.payload.modalType;\r\n            state.modalProps = action.payload.modalProps;\r\n        },\r\n        hideModal(state, _) {\r\n            state.modalType = '';\r\n            state.modalProps = {};\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default modalsSlice.reducer;\r\n\r\nexport const {showModal, hideModal} = modalsSlice.actions;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nexport const ErrorModal = ({ isVisible, message, duration }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 2000\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      onEnter={handleOnEnter}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Error!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CircularProgress, Dialog, DialogContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const LoadingModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogContent className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nexport const SuccessModal = ({ isVisible, message, duration }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 2000\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      disableBackdropClick={true}\r\n      TransitionProps={{ onExited: handleOnExited, onEnter: handleOnEnter }}\r\n    >\r\n      <DialogTitle>Success!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","const prod = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-prod.herokuapp.com\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-prod.herokuapp.com`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst dev = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-dev.herokuapp.com/\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-dev.herokuapp.com/`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst localDev = {\r\n  API_BASE_URL: \"http://localhost:8000\",\r\n  WS_BASE_URL: `ws://localhost:8000`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nexport const darkTheme = responsiveFontSizes(\r\n  createMuiTheme({\r\n    palette: {\r\n      mode: \"dark\",\r\n      primary: {\r\n        main: \"#1e88e5\",\r\n      },\r\n      secondary: {\r\n        main: \"#26a69a\",\r\n      },\r\n    },\r\n    components: {\r\n      MuiMenu: {\r\n        styleOverrides: {\r\n          padding: \"1em\",\r\n        },\r\n      },\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n      MuiTableCell: {\r\n        styleOverrides: {\r\n          root: {\r\n            textAlign: \"center\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  {\r\n    disableAlign: true,\r\n  }\r\n);\r\n","export const drawerWidth = 240;\r\nexport const itemCategories = [\r\n  \"Store Sales\",\r\n  \"Vet Sales\",\r\n  \"Service\",\r\n  \"Grooming\",\r\n  \"Blood Test\",\r\n];\r\n\r\n/**\r\n-Deworming\r\n-5 in 1\r\n-6 in 1\r\n-8 in 1\r\n-Kennel Cough\r\n-ProHeart\r\n-4 in 1\r\n-Anti-Rabies\r\n- Canglob P\r\n-Canglob D\r\n\r\n */\r\n\r\nexport const appointmentVaccineTypes = [\r\n  \"Deworming\",\r\n  \"5 in 1\",\r\n  \"6 in 1\",\r\n  \"8 in 1\",\r\n  \"Kennel Cough\",\r\n  \"ProHeart\",\r\n  \"4 in 1\",\r\n  \"Anti-Rabies\",\r\n  \"Canglob P\",\r\n  \"Canglob D\",\r\n];\r\n\r\nexport const appointmentVaccineReoccuranceTypes = [\r\n  \"1 Weeks\",\r\n  \"2 Weeks\",\r\n  \"1 Year\",\r\n];\r\n\r\nexport const appointmentFollowUpReoccuranceTypes = [\r\n  \"3 Days\",\r\n  \"7 Days\",\r\n  \"14 Days\",\r\n  \"30 Days\",\r\n];\r\n\r\nexport const appointmentFollowUpTypes = [\r\n  \"Check-Up\",\r\n  \"Long Term Medication\",\r\n  \"Post Surgery\",\r\n  \"Screening\",\r\n];\r\n\r\nexport * from \"./config\";\r\nexport * from \"./theme\";\r\n","import axios from \"axios\";\r\nimport { config } from \"../consts\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: config.API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const setToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default instance;\r\n","import axios from \"./axios\";\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`/auth/login`, credentials);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n\r\nexport const loginWithToken = async () => {\r\n  const response = await axios.get(`/users/token`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login as loginUser, loginWithToken } from \"../../api/auth\";\r\nimport { setToken } from \"../../api/axios\";\r\nimport { showModal } from \"../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  user: {},\r\n  token: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    loginStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    loginSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.authToken;\r\n      setToken(action.payload.authToken);\r\n      localStorage.setItem(\"token\", action.payload.authToken);\r\n    },\r\n    loginFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logoutStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    logoutSuccess(state, _) {\r\n      state.user = {};\r\n      state.token = null;\r\n      state.isLoading = false;\r\n    },\r\n    logoutFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    checkAuthStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    checkAuthSuccess(state, action) {\r\n      state.user = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    checkAuthFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  checkAuthStart,\r\n  checkAuthSuccess,\r\n  checkAuthFailure,\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logoutFailure,\r\n  logoutStart,\r\n  logoutSuccess,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const logIn = (credentials) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginStart());\r\n    const user = await loginUser(credentials);\r\n    dispatch(loginSuccess(user));\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.message));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n  const currentToken = localStorage.getItem(\"token\");\r\n  setToken(currentToken);\r\n  try {\r\n    dispatch(checkAuthStart());\r\n    const user = await loginWithToken(currentToken);\r\n\r\n    dispatch(checkAuthSuccess(user));\r\n  } catch (error) {\r\n    dispatch(checkAuthFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.clear();\r\n  try {\r\n    dispatch(logoutStart());\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutFailure(error));\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nconst ConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  handleNegativePressed,\r\n  handlePositivePressed,\r\n}) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"text\" onClick={handleNegativePressed}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"text\" onClick={handlePositivePressed}>\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nimport { logout } from \"../../features/auth/authSlice\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport history from \"../../app/history\";\r\n\r\nexport const LogoutModal = ({ isVisible, title, message }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(logout());\r\n    history.replace(\"/auth/login\");\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LogoutModal;\r\n","import axios from \"./axios\";\r\n\r\nexport const addClient = async (client, branchName) => {\r\n  const response = await axios.post(`/clients/${branchName}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateClient = async (client) => {\r\n  const response = await axios.patch(`/clients/${client.ID}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addClientPayment = async (\r\n  clientId,\r\n  itemId,\r\n  quantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/payments/${itemId}/${quantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = async (clientId) => {\r\n  const response = await axios.get(`/clients/${clientId}/payments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = async ({\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg,\r\n}) => {\r\n  const response = await axios.get(\r\n    `/clients/${branchName}/all-payments?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientAppointments = async ({ clientId }) => {\r\n  const response = await axios.get(`/clients/${clientId}/appointments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const removeAppointment = async ({ appointmentId, branchName }) => {\r\n  const response = await axios.delete(\r\n    `/clients/${branchName}/appointments/${appointmentId}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addAppointment = async ({ clientId, appointment }) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/appointments`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateAppointment = async ({ branchName, appointment }) => {\r\n  const response = await axios.patch(\r\n    `/clients/${branchName}/appointments/${appointment.ID}`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n  modalType: null,\r\n  modalProps: {},\r\n};\r\n\r\nconst infoModals = createSlice({\r\n  name: \"infoModal\",\r\n  initialState,\r\n  reducers: {\r\n    showInfoModal(state, action) {\r\n      state.modalType = action.payload.modalType;\r\n      state.modalProps = action.payload.modalProps;\r\n    },\r\n    hideInfoModal(state, _) {\r\n      state.modalType = \"\";\r\n      state.modalProps = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport default infoModals.reducer;\r\n\r\nexport const { showInfoModal, hideInfoModal } = infoModals.actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\nimport {\r\n  addClient as apiAddClient,\r\n  addClientPayment as apiAddClientPayment,\r\n  fetchClientPaymentHistory as apiFetchClientPaymentHistory,\r\n  updateClient as apiUpdateClient,\r\n  addAppointment as apiAddAppointment,\r\n  updateAppointment as apiUpdateAppointment,\r\n  fetchClientAppointments as apiFetchClientAppointments,\r\n  removeAppointment as apiRemoveAppointment,\r\n} from \"../../api/clients\";\r\nimport { showInfoModal, hideInfoModal } from \"../modals/infoModalSlice\";\r\n\r\nconst initialState = {\r\n  clients: {},\r\n  paymentHistory: [],\r\n  appointments: [],\r\n  clientAppointments: [],\r\n  clientPayments: {},\r\n  isClientsLoading: false,\r\n  isPaymentsLoading: false,\r\n  isAppointmentsLoading: false,\r\n  isClientSearchingLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleOnFailure = (state, action) => {\r\n  state.error = action.payload;\r\n};\r\n\r\nconst clientsSlice = createSlice({\r\n  name: \"clientsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchClientsStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    fetchClientsSuccess(state, action) {\r\n      state.isClientsLoading = false;\r\n      let newClients = {};\r\n      action.payload.forEach((client) => {\r\n        newClients[client.ID] = client;\r\n      });\r\n      state.clients = newClients;\r\n    },\r\n    fetchClientsError: handleOnFailure,\r\n    addClientStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    addClientSuccess(state) {\r\n      state.isClientsLoading = false;\r\n      state.error = null;\r\n    },\r\n    addClientError: handleOnFailure,\r\n    updateClientStart(state) {\r\n      state.error = null;\r\n    },\r\n    updateClientSuccess(state, action) {\r\n      state.clients[action.payload.ID] = action.payload;\r\n      state.error = null;\r\n    },\r\n    updateClientsError: handleOnFailure,\r\n    addClientPaymentStart() {},\r\n    addClientPaymentSuccess(state, action) {\r\n      state.paymentHistory = [action.payload, ...state.paymentHistory];\r\n      state.error = false;\r\n    },\r\n    addClientPaymentError: handleOnFailure,\r\n    fetchClientPaymentHistoryStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchClientPaymentHistorySuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.paymentHistory = action.payload;\r\n      state.error = false;\r\n    },\r\n    fetchClientPaymentHistoryError: handleOnFailure,\r\n    fetchAllClientPaymentsStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchAllClientPaymentsSuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.clientPayments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAllClientPaymentsError: handleOnFailure,\r\n    addAppointmentStart(state) {\r\n      state.error = null;\r\n    },\r\n    addAppointmentSuccess(state, action) {},\r\n    addAppointmentError: handleOnFailure,\r\n    updateAppointmentStart(state) {},\r\n    updateAppointmentSuccess(state, action) {\r\n      state.appointments = [...action.payload];\r\n      state.error = null;\r\n    },\r\n    updateAppointmentError: handleOnFailure,\r\n    removeAppointmentStart() {},\r\n    removeAppointmentSuccess(state, action) {\r\n      state.appointments = action.payload;\r\n    },\r\n    removeAppointmentError: handleOnFailure,\r\n    fetchAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.appointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsError: handleOnFailure,\r\n    fetchClientAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.clientAppointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsError: handleOnFailure,\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchClientsSuccess,\r\n  fetchClientsError,\r\n  fetchClientsStart,\r\n  addClientStart,\r\n  addClientError,\r\n  addClientSuccess,\r\n  updateClientStart,\r\n  updateClientSuccess,\r\n  updateClientError,\r\n  addClientPaymentStart,\r\n  addClientPaymentSuccess,\r\n  addClientPaymentError,\r\n  fetchClientPaymentHistoryStart,\r\n  fetchClientPaymentHistorySuccess,\r\n  fetchClientPaymentHistoryError,\r\n  fetchAllClientPaymentsStart,\r\n  fetchAllClientPaymentsSuccess,\r\n  fetchAllClientPaymentsError,\r\n  addAppointmentStart,\r\n  addAppointmentSuccess,\r\n  addAppointmentError,\r\n\r\n  fetchAppointmentsError,\r\n  fetchAppointmentsStart,\r\n  fetchAppointmentsSuccess,\r\n  fetchClientAppointmentsError,\r\n  fetchClientAppointmentsStart,\r\n  fetchClientAppointmentsSuccess,\r\n  updateAppointmentError,\r\n  updateAppointmentStart,\r\n  updateAppointmentSuccess,\r\n  removeAppointmentError,\r\n  removeAppointmentSuccess,\r\n  removeAppointmentStart,\r\n} = clientsSlice.actions;\r\n\r\nexport default clientsSlice.reducer;\r\n\r\nexport const fetchClients = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchClientsStart());\r\n\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchClientsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchClientsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addClient = (client) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newClient = await apiAddClient(client, user.branchName);\r\n    dispatch(addClientSuccess(newClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(addClientError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateClient = (client) => async (dispatch) => {\r\n  try {\r\n    dispatch(updateClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const updatedClient = await apiUpdateClient(client);\r\n    dispatch(updateClientSuccess(updatedClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(updateClientError(error.message));\r\n  }\r\n};\r\nexport const addClientPayment = (clientId, itemId, quantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { metadata } = getState().clients.clientPayments;\r\n  try {\r\n    dispatch(addClientPaymentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newPayment = await apiAddClientPayment(\r\n      clientId,\r\n      itemId,\r\n      quantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(hideInfoModal());\r\n    dispatch(addClientPaymentSuccess(newPayment));\r\n  } catch (error) {\r\n    dispatch(addClientPaymentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = (clientId) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientPaymentHistoryStart());\r\n\r\n    const clientPayments = await apiFetchClientPaymentHistory(clientId);\r\n    dispatch(fetchClientPaymentHistorySuccess(clientPayments));\r\n  } catch (error) {\r\n    dispatch(fetchClientPaymentHistoryError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAllClientPaymentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/all-payments?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAllClientPaymentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAllClientPaymentsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addAppointment = ({ clientId, appointment }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(addAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    // Adjust the date of the appoinment\r\n\r\n    const newAppointment = await apiAddAppointment({ clientId, appointment });\r\n    dispatch(hideInfoModal());\r\n    dispatch(addAppointmentSuccess(newAppointment));\r\n  } catch (error) {\r\n    dispatch(addAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeAppointment = ({ appointmentId }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(removeAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const appointments = await apiRemoveAppointment({\r\n      appointmentId,\r\n      branchName: user.branchName,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(removeAppointmentSuccess(appointments));\r\n  } catch (error) {\r\n    dispatch(removeAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateAppointment = ({ appointment }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(updateAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newAppointments = await apiUpdateAppointment({\r\n      branchName: user.branchName,\r\n      appointment,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(updateAppointmentSuccess(newAppointments));\r\n  } catch (error) {\r\n    dispatch(updateAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAppointments = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAppointmentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/appointments?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAppointmentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAppointmentsError(error.message));\r\n  }\r\n};\r\nexport const fetchClientAppointments = ({ clientId }) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientAppointmentsStart());\r\n    const result = await apiFetchClientAppointments({ clientId });\r\n    dispatch(fetchClientAppointmentsSuccess(result));\r\n  } catch (error) {\r\n    dispatch(fetchClientAppointmentsError(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\nimport { MdEmail, MdPets } from \"react-icons/md\";\r\n\r\nexport const AddClientForm = ({ classes, onSubmit }) => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  return (\r\n    <form\r\n      className={classes.form}\r\n      id=\"addClientForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Full Name\"\r\n        name=\"clientName\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.clientName}\r\n      />\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.address}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MdEmail />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({})}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Contact Number\"\r\n          name=\"contactNumber\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <FaPhoneAlt />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({\r\n            pattern: /((^(\\+)(\\d){12}$)|(^\\d{11}$))/,\r\n          })}\r\n          error={!!errors.contactNumber}\r\n        />\r\n      </div>\r\n      <br></br>\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Pet Name\"\r\n        name=\"petName\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <MdPets />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.petName}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Species\"\r\n          name=\"petSpecies\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petSpecies}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Breed\"\r\n          name=\"petBreed\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petBreed}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { addClient } from \"../../clientsSlice\";\r\nimport { AddClientForm } from \"./AddClientForm\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    form: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    field: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    fieldGroup: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddClientModal = ({ isVisible }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnSubmit = (data) => {\r\n    const parsedData = {\r\n      ...data,\r\n      pet: {\r\n        petName: data.petName,\r\n        species: data.petSpecies,\r\n        petBreed: data.petBreed,\r\n      },\r\n    };\r\n\r\n    dispatch(addClient(parsedData));\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Add Client\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <AddClientForm classes={classes} onSubmit={handleOnSubmit} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addClientForm\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientTransactionsTableHeader = ({ toggleAddItemSaleRow }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          Add Transaction\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientTransactionsTableHeader;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemsWithSearchTerm = async (searchTerm, branchName) => {\r\n  const response = await axios.get(`/items/search/${branchName}/${searchTerm}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItems = async (branchName) => {\r\n  const response = await axios.get(`/items/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n  };\r\n  const response = await axios.post(`/items/${branchName}`, parsedItem);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const modifyItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentiveAmount: Number(item.incentiveAmount),\r\n    incentiveRate: Number(item.incentiveRate),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (itemId, branchName) => {\r\n  const response = await axios.delete(`/items/item/${branchName}/${itemId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const discountItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItemSales = async (branchName) => {\r\n  const response = await axios.get(`/item-sales/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  itemQuantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/item-sales/${branchName}/${itemId}/${itemQuantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.delete(\r\n    `/item-sales/${branchName}/${itemId}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemsWithSearchTerm } from \"../../api/inventory\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  result: [],\r\n  error: null,\r\n};\r\n\r\nconst inventorySearchSlice = createSlice({\r\n  name: \"inventorySearchResultSlice\",\r\n  initialState,\r\n  reducers: {\r\n    searchItemsStart(state) {\r\n      state.isLoading = true;\r\n    },\r\n    searchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.result = action.payload;\r\n      state.error = null;\r\n    },\r\n    searchItemsFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearItemsSearch(state, action) {\r\n      state.result = [];\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default inventorySearchSlice.reducer;\r\n\r\nexport const {\r\n  searchItemsFailure,\r\n  searchItemsStart,\r\n  searchItemsSuccess,\r\n  clearItemsSearch,\r\n} = inventorySearchSlice.actions;\r\n\r\nexport const searchItems = (searchTerm) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(searchItemsStart());\r\n    const items = await getItemsWithSearchTerm(searchTerm, user.branchName);\r\n    dispatch(searchItemsSuccess(items));\r\n  } catch (error) {\r\n    dispatch(searchItemsFailure(error));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment } from \"../../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  client,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(client.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.salesCategory}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{currentDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientTransactionsTableHeader from \"./ClientTransactionsTableHeader\";\r\nimport { ClientTransactionsTableAddItemRow } from \"./ClientTransactionsTableAddItemRow\";\r\nimport { showModal } from \"../../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTable = ({ data, columns, client }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClientTransactionsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientTransactionsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              client={client}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientTransactionsTable } from \"./ClientTransactionsTable\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientTransactionsTableContainer = ({ paymentHistory, client }) => {\r\n  const data = useMemo(() => {\r\n    return paymentHistory.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item.name,\r\n        col3: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col4: itemSale.quantity,\r\n        col5: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col8: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [paymentHistory]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    client,\r\n  };\r\n\r\n  return <ClientTransactionsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientTransactionsTableContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Dialog,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { fetchClientPaymentHistory } from \"../../clientsSlice\";\r\nimport ClientTransactionsTableContainer from \"./ClientTransactionsTable/ClientTransactionsTableContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients, paymentHistory, isPaymentsLoading } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[index];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientPaymentHistory(client.ID));\r\n  }, [dispatch, client]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isPaymentsLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n    return (\r\n      <ClientTransactionsTableContainer\r\n        paymentHistory={paymentHistory}\r\n        client={client}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      disableBackdropClick={true}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullScreen\r\n    >\r\n      <DialogTitle>Payment History</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        {renderContent()}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          DONE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useState, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { updateClient } from \"../../clientsSlice\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"400px\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const VeterinarianNoteModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients } = useSelector((state) => state.clients);\r\n  const client = useMemo(() => clients[index], [index, clients]);\r\n  const [veterinarianNote, setVeterinarianNote] = useState(\r\n    client.veterinarianNote ? client.veterinarianNote : \"\"\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    const newClient = { ...client, veterinarianNote: veterinarianNote };\r\n    dispatch(updateClient(newClient));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>Add Veterinarian Note</DialogTitle>\r\n      <div className={classes.content}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Note\"\r\n          multiline\r\n          rows={10}\r\n          value={veterinarianNote}\r\n          onChange={(e) => setVeterinarianNote(e.target.value)}\r\n        />\r\n      </div>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleOnSubmit}>\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Autocomplete,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport {\r\n  appointmentFollowUpReoccuranceTypes,\r\n  appointmentFollowUpTypes,\r\n  appointmentVaccineReoccuranceTypes,\r\n  appointmentVaccineTypes,\r\n} from \"../../../../consts\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\nexport const AddAppointmentForm = ({\r\n  onSubmit,\r\n  startDate,\r\n  isVaccine,\r\n  clientIndex,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const defaultClient = clientIndex\r\n    ? {\r\n        ...clients[clientIndex],\r\n        clientName: `${clients[clientIndex].clientName} - ${clients[clientIndex].pet.petName}`,\r\n      }\r\n    : null;\r\n\r\n  const data = useMemo(\r\n    () =>\r\n      Object.keys(clients).map((key) => {\r\n        const client = clients[key];\r\n        // Modify the client name to be easily distinguishable with duplicate owner names.\r\n        const newClientName = `${client.clientName} - ${client.pet.petName}`;\r\n        return { ...client, clientName: newClientName };\r\n      }),\r\n    [clients]\r\n  );\r\n\r\n  const { handleSubmit, errors, control } = useForm();\r\n\r\n  const renderTypeFields = () => {\r\n    return (\r\n      <>\r\n        <Controller\r\n          name=\"type\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-type\">{`${\r\n                isVaccine ? \"Vaccine\" : \"Follow Up\"\r\n              } Type`}</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-type\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.type}>\r\n                {!!errors.type ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"reoccurance\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-reoccurance\">Next Visit</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-reoccurance\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.reoccurance}>\r\n                {!!errors.reoccurance ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      id=\"addAppointmentForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <Controller\r\n        name=\"client\"\r\n        control={control}\r\n        defaultValue={clientIndex ? defaultClient : null}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ onChange, ...restProps }) => (\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={data}\r\n            loading={isClientsLoading}\r\n            getOptionLabel={(option) => option.clientName}\r\n            getOptionSelected={(option, value) =>\r\n              option.clientName === value.clientName\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Client Name\"\r\n                fullWidth\r\n                error={!!errors.client}\r\n                helperText={!!errors.client ? \"Enter a client\" : \"\"}\r\n              />\r\n            )}\r\n            onChange={(_, val) => {\r\n              onChange(val);\r\n            }}\r\n            {...restProps}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        id=\"appointment-date\"\r\n        name=\"date\"\r\n        control={control}\r\n        defaultValue={moment(startDate).toDate()}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={(props) => (\r\n          <DatePicker\r\n            allowSameDateSelection\r\n            renderInput={(props) => (\r\n              <TextField {...props} size=\"small\" label=\"Appointment Date\" />\r\n            )}\r\n            {...props}\r\n          />\r\n        )}\r\n      />\r\n      {renderTypeFields()}\r\n      <Controller\r\n        name=\"veterinarianNotes\"\r\n        control={control}\r\n        defaultValue={\"\"}\r\n        rules={{}}\r\n        render={(props) => (\r\n          <TextField label=\"Notes\" multiline size=\"small\" rows={5} {...props} />\r\n        )}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { AddAppointmentForm } from \"./AddAppointmentForm\";\r\nimport { fetchClients, addAppointment } from \"../../clientsSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"100%\",\r\n      alignItems: \"flex-start\",\r\n      padding: theme.spacing(2),\r\n      flexDirection: \"column\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddAppointmentModal = ({ isVisible, startDate, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isVaccine, setIsVaccine] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!clientIndex) {\r\n      dispatch(fetchClients());\r\n    }\r\n  }, [dispatch, clientIndex]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = (data) => {\r\n    // Convert date to milliseconds\r\n    const formattedDate = moment(data.date).toISOString();\r\n    dispatch(\r\n      addAppointment({\r\n        clientId: data.client.ID,\r\n        appointment: { ...data, date: formattedDate },\r\n      })\r\n    );\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Schedule Appointment</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <FormControlLabel\r\n          label=\"For Vaccine\"\r\n          control={\r\n            <Checkbox\r\n              checked={isVaccine}\r\n              onChange={(e) => setIsVaccine(e.target.checked)}\r\n            />\r\n          }\r\n        />\r\n        <AddAppointmentForm\r\n          onSubmit={handleOnSubmit}\r\n          startDate={startDate}\r\n          isVaccine={isVaccine}\r\n          clientIndex={clientIndex}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button form=\"addAppointmentForm\" variant=\"outlined\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchClientAppointments } from \"../../clientsSlice\";\r\nimport { DayPicker, LocalizationProvider, PickersDay } from \"@material-ui/lab\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport moment from \"moment-timezone\";\r\nimport classnames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    loadingIndicator: {\r\n      width: \"300px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n    },\r\n    hasAppointment: {\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n    selected: {\r\n      backgroundColor: `#424242 !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsModal = ({ isVisible, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const history = useHistory();\r\n  const { isAppointmentsLoading, clientAppointments, clients } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[clientIndex];\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnDateChanged = (value) => {\r\n    setSelectedDate(value);\r\n    const appointment = clientAppointments.find((a) =>\r\n      moment(a.date).isSame(value, \"date\")\r\n    );\r\n\r\n    if (appointment) {\r\n      setOpen(!isVisible);\r\n\r\n      history.push(\"/clients/appointments\", {\r\n        appointment,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientAppointments({ clientId: client.ID }));\r\n  }, [dispatch, client]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DayPicker\r\n          date={selectedDate}\r\n          onChange={handleOnDateChanged}\r\n          disableHighlightToday\r\n          allowSameDateSelection\r\n          renderDay={(date, _selectedDates, PickersDayComponentProps) => (\r\n            <CustomDay\r\n              classes={classes}\r\n              date={date}\r\n              selectedDate={selectedDate}\r\n              _selectedDates={_selectedDates}\r\n              PickersDayComponentProps={PickersDayComponentProps}\r\n              appointments={clientAppointments}\r\n            />\r\n          )}\r\n          allowKeyboardControl={false}\r\n        />\r\n      </LocalizationProvider>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>Appointments</DialogTitle>\r\n      <DialogContent>{renderContent()}</DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>DONE</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst CustomDay = ({\r\n  date,\r\n  classes,\r\n  _selectedDates,\r\n  selectedDate,\r\n  PickersDayComponentProps,\r\n  appointments,\r\n}) => {\r\n  const adjustedDate = moment(date).tz(\"Asia/Manila\");\r\n  // Check if the client has an appointment\r\n  const hasAppointment =\r\n    appointments.find((a) => {\r\n      const appointmentDate = moment(a.date).tz(\"Asia/Manila\");\r\n      return appointmentDate.isSame(adjustedDate, \"date\");\r\n    }) !== undefined;\r\n\r\n  const isSelected = moment(selectedDate).isSame(date, \"date\");\r\n  return (\r\n    <PickersDay\r\n      className={classnames({\r\n        [classes.hasAppointment]: hasAppointment,\r\n        [classes.selected]: isSelected,\r\n      })}\r\n      {...PickersDayComponentProps}\r\n    ></PickersDay>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  deleteItem as deleteItemFromApi,\r\n  addItem as addItemToApi,\r\n  modifyItem as modifyItemFromApi,\r\n  discountItem as discountItemFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\n\r\nimport { showModal } from \"../../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  items: [],\r\n  itemSales: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySlice = createSlice({\r\n  name: \"inventoryItems\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemsStart: handleStart,\r\n    fetchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.items = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchItemsFailure: handleError,\r\n    addItemStart(_, __) {},\r\n    addItemSuccess(state, action) {\r\n      // state.items = [...state.items, action.payload];\r\n    },\r\n    addItemFailure: handleError,\r\n    modifyItemStart() {},\r\n    modifyItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    modifyItemFailure: handleError,\r\n    discountItemStart() {},\r\n    discountItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    discountItemFailure: handleError,\r\n    deleteItemStart() {},\r\n    deleteItemSuccess(state, action) {\r\n      state.items = state.items.filter((item) => item.ID !== action.payload);\r\n    },\r\n    deleteItemFailure: handleError,\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchItemsStart,\r\n  fetchItemsSuccess,\r\n  fetchItemsFailure,\r\n  addItemStart,\r\n  addItemSuccess,\r\n  addItemFailure,\r\n  modifyItemStart,\r\n  modifyItemSuccess,\r\n  modifyItemFailure,\r\n  discountItemStart,\r\n  discountItemFailure,\r\n  discountItemSuccess,\r\n  deleteItemStart,\r\n  deleteItemSuccess,\r\n  deleteItemFailure,\r\n} = inventorySlice.actions;\r\n\r\nexport default inventorySlice.reducer;\r\n\r\nexport const fetchItems = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchItemsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/items/${user.branchName}?jwt=${token}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const addItem = (itemDetails) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await addItemToApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Added!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemSuccess());\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const modifyItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(modifyItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await modifyItemFromApi(itemDetails, user.branchName);\r\n\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Modified!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemFailure());\r\n  }\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(deleteItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await deleteItemFromApi(itemId, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Deleted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n\r\n    dispatch(deleteItemSuccess(itemId));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemFailure());\r\n  }\r\n};\r\n\r\nexport const discountItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(discountItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await discountItemFromApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Discounted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemFailure());\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { addItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { itemCategories } from \"../../../consts\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryAddItemModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const newItem = { ...data };\r\n    newItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      newItem.incentiveRate = 0;\r\n    } else {\r\n      newItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(addItem(newItem));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Add Item</DialogTitle>\r\n      <DialogContent>\r\n        <AddItemForm\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addItemForm\" type=\"submit\">\r\n          Add Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst AddItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n}) => {\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: \"\",\r\n      category: \"Store Sales\",\r\n      incentiveRate: 0,\r\n      incentiveAmount: 0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"addItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            {itemCategories.map((itemCategory) => (\r\n              <MenuItem key={itemCategory} value={itemCategory}>\r\n                {itemCategory}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n\r\n      <div>\r\n        <FormControlLabel\r\n          className={classes.addItemFormField}\r\n          control={\r\n            <Checkbox\r\n              checked={isIncentiveFixed}\r\n              onChange={() => {\r\n                setIncentiveFixed(!isIncentiveFixed);\r\n              }}\r\n            />\r\n          }\r\n          label=\"Fixed Incentive Rate\"\r\n        />\r\n        <div className={classes.incentiveFieldsWrapper}>\r\n          <TextField\r\n            disabled={isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Rate\"\r\n            name=\"incentiveRate\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <Typography>%</Typography>,\r\n            }}\r\n            inputRef={register({\r\n              required: true,\r\n              max: 100.0,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveRate}\r\n          />\r\n          <TextField\r\n            disabled={!isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Amount\"\r\n            name=\"incentiveAmount\"\r\n            size=\"small\"\r\n            inputRef={register({\r\n              required: true,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveAmount}\r\n          />\r\n        </div>\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal, showModal } from \"../../modals/modalSlice\";\r\nimport { deleteItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"1em\",\r\n    },\r\n    deleteBtn: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryManageItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleModifyItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MODIFY_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleDiscountItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DISCOUNT_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteItemPressed = (itemId) => {\r\n    setOpen(!isVisible);\r\n\r\n    dispatch(deleteItem(item.ID));\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Manage Item</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <Button fullWidth variant=\"contained\" onClick={handleModifyItemPressed}>\r\n          Modify Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDiscountItemPressed}\r\n        >\r\n          Discount Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          className={classes.deleteBtn}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDeleteItemPressed}\r\n        >\r\n          Delete Item\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { modifyItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { itemCategories } from \"../../../consts\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryModifyItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(item.isIncentiveFixed);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const updatedItem = { ...item, ...data };\r\n    updatedItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      updatedItem.incentiveRate = 0;\r\n    } else {\r\n      updatedItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(modifyItem(updatedItem, itemIndex));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Modify Item</DialogTitle>\r\n      <DialogContent>\r\n        <ModifyItemForm\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"modifyItemForm\" type=\"submit\">\r\n          Modify Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModifyItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  itemDetails,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n}) => {\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: itemDetails.remarks !== null ? itemDetails.remarks : \"\",\r\n      category: itemDetails.category !== null ? itemDetails.category : \"\",\r\n      price: itemDetails.price !== null ? itemDetails.price : 0,\r\n      name: itemDetails.name !== null ? itemDetails.name : \"\",\r\n      incentiveRate:\r\n        itemDetails.incentiveRate !== null ? itemDetails.incentiveRate : 0,\r\n      incentiveAmount:\r\n        itemDetails.incentiveAmount !== null ? itemDetails.incentiveAmount : 0,\r\n      inStock: itemDetails.inStock !== null ? itemDetails.inStock : 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"modifyItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n        helperText={!!errors.inStock ? \"Invalid Value\" : \"\"}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            {itemCategories.map((itemCategory) => (\r\n              <MenuItem key={itemCategory} value={itemCategory}>\r\n                {itemCategory}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n      <FormControlLabel\r\n        className={classes.addItemFormField}\r\n        control={\r\n          <Checkbox\r\n            checked={isIncentiveFixed}\r\n            onChange={() => {\r\n              setIncentiveFixed(!isIncentiveFixed);\r\n            }}\r\n          />\r\n        }\r\n        label=\"Fixed Incentive Rate\"\r\n      />\r\n      <div className={classes.incentiveFieldsWrapper}>\r\n        <TextField\r\n          disabled={isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Rate\"\r\n          name=\"incentiveRate\"\r\n          size=\"small\"\r\n          InputProps={{\r\n            endAdornment: <Typography>%</Typography>,\r\n          }}\r\n          inputRef={register({\r\n            required: true,\r\n            max: 100.0,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveRate}\r\n        />\r\n        <TextField\r\n          disabled={!isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Amount\"\r\n          name=\"incentiveAmount\"\r\n          size=\"small\"\r\n          inputRef={register({\r\n            required: true,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveAmount}\r\n        />\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { discountItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryDiscountItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = ({ discount }) => {\r\n    setOpen(!isVisible);\r\n    dispatch(discountItem({ ...item, discount }, itemIndex));\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Discount Item</DialogTitle>\r\n      <DialogContent>\r\n        <DiscountItemForm\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"discountItemForm\" type=\"submit\">\r\n          Discount Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst DiscountItemForm = ({ onSubmit, classes, itemDetails }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      discount: itemDetails.discount !== null ? itemDetails.discount : 0.0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"discountItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Discount Amount\"\r\n        name=\"discount\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        helperText={\r\n          !!errors.discount ? \"Please input a value between 0.01 and 100\" : \"\"\r\n        }\r\n        InputProps={{\r\n          endAdornment: (\r\n            <Typography>\r\n              <strong>%</strong>\r\n            </Typography>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n          max: 100.0,\r\n        })}\r\n        autoFocus\r\n        error={!!errors.discount}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addItemSale as addItemSaleToApi,\r\n  deleteItemSale as deleteItemSaleFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\nimport { showModal, hideModal } from \"../../modals/modalSlice\";\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  itemSales: [],\r\n  dailySales: 0,\r\n  metadata: {\r\n    salesDateCateg: \"daily\",\r\n  },\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySalesSlice = createSlice({\r\n  name: \"inventorySales\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStart: handleOnStart,\r\n    fetchItemSalesSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.itemSales = action.payload.itemSales;\r\n      state.dailySales = action.payload.dailySales;\r\n      state.metadata = action.payload.metadata;\r\n      state.error = null;\r\n    },\r\n    fetchItemSalesError: handleOnError,\r\n    addItemSaleStart() {},\r\n    addItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    addItemSaleFailure: handleOnError,\r\n    deleteItemSaleStart() {},\r\n    deleteItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    deleteItemSaleFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default inventorySalesSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesError,\r\n  fetchItemSalesStart,\r\n  fetchItemSalesSuccess,\r\n  addItemSaleFailure,\r\n  addItemSaleStart,\r\n  addItemSaleSuccess,\r\n  deleteItemSaleFailure,\r\n  deleteItemSaleStart,\r\n  deleteItemSaleSuccess,\r\n} = inventorySalesSlice.actions;\r\n\r\nexport const fetchItemSales = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStart());\r\n    let ws;\r\n    ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/item-sales/${user.branchName}?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemSalesSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesError(error));\r\n  }\r\n};\r\n\r\nexport const addItemSale = (itemId, itemQuantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(addItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const newItemSale = await addItemSaleToApi(\r\n      user.branchName,\r\n      itemId,\r\n      itemQuantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(addItemSaleSuccess(newItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction Complete!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(addItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = (itemId) => async (dispatch, getState) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(deleteItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const deletedItemSale = await deleteItemSaleFromApi(\r\n      user.branchName,\r\n      itemId,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(deleteItemSaleSuccess(deletedItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction deleted successfully!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(deleteItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n  LogoutModal,\r\n} from \"../../components/modals\";\r\nimport {\r\n  AddClientModal,\r\n  ClientTransactionsModal,\r\n  VeterinarianNoteModal,\r\n  AddAppointmentModal,\r\n  ClientAppointmentsModal,\r\n} from \"../clients/clientsModals\";\r\n\r\nimport {\r\n  InventoryAddItemModal,\r\n  InventoryDiscountItemModal,\r\n  InventoryManageItemModal,\r\n  InventoryModifyItemModal,\r\n  InventoryAddItemSaleConfirmationModal,\r\n  InventoryDeleteItemSaleConfirmationModal,\r\n} from \"../inventory/inventoryModals\";\r\n\r\nconst modalComponents = {\r\n  ADD_ITEM_MODAL: InventoryAddItemModal,\r\n  ADD_SALE_CONFIRMATION_MODAL: InventoryAddItemSaleConfirmationModal,\r\n  DELETE_SALE_CONFIRMATION_MODAL: InventoryDeleteItemSaleConfirmationModal,\r\n  MANAGE_ITEM_MODAL: InventoryManageItemModal,\r\n  MODIFY_ITEM_MODAL: InventoryModifyItemModal,\r\n  DISCOUNT_ITEM_MODAL: InventoryDiscountItemModal,\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n  LOGOUT_MODAL: LogoutModal,\r\n  ADD_CLIENT_MODAL: AddClientModal,\r\n  ADD_APPOINTMENT_MODAL: AddAppointmentModal,\r\n  CLIENT_TRANSACTIONS_MODAL: ClientTransactionsModal,\r\n  CLIENT_APPOINTMENTS_MODAL: ClientAppointmentsModal,\r\n  CLIENT_VETERINARIAN_NOTE_MODAL: VeterinarianNoteModal,\r\n};\r\n\r\nconst ModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.modals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default ModalManager;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemSale } from \"../inventorySales/inventorySalesSlice\";\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\n\r\nexport const InventoryAddItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemDetails,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  const handlePositivePressed = () => {\r\n    dispatch(addItemSale(itemDetails.itemId, itemDetails.quantity));\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { deleteItemSale } from \"../inventorySales/inventorySalesSlice\";\r\n\r\nexport const InventoryDeleteItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemIndex,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { itemSales } = useSelector((state) => state.inventorySales);\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(deleteItemSale(itemSales[itemIndex].ID));\r\n  };\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n};\r\n\r\nconst drawerSlice = createSlice({\r\n  name: \"drawer\",\r\n  initialState,\r\n  reducers: {\r\n    toggleDrawer(state) {\r\n      state.isOpen = !state.isOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport default drawerSlice.reducer;\r\n\r\nexport const { toggleDrawer } = drawerSlice.actions;\r\n","import axios from \"./axios\";\r\n\r\nexport const clearNotifications = async ({ branchName }) => {\r\n  const response = await axios.delete(`/notifications/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateNotification = async ({ notificationId }) => {\r\n  const response = await axios.patch(`/notifications/${notificationId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\n\r\nimport {\r\n  clearNotifications as apiClearNotifications,\r\n  updateNotification as apiUpdateNotifications,\r\n} from \"../../api/notification\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  notifications: [],\r\n  error: null,\r\n};\r\n\r\nconst notificationsSlice = createSlice({\r\n  name: \"notificationsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsSuccess(state, action) {\r\n      // Convert the array to map\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    clearNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsSuccess(state, action) {\r\n      state.notifications = {};\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    updateNotificationStart() {},\r\n    updateNotificationSuccess(state, action) {\r\n      state.isLoading = false;\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.error = null;\r\n    },\r\n    updateNotificationError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchNotificationsError,\r\n  fetchNotificationsStart,\r\n  fetchNotificationsSuccess,\r\n  updateNotificationError,\r\n  updateNotificationStart,\r\n  updateNotificationSuccess,\r\n  clearNotificationsError,\r\n  clearNotificationsStart,\r\n  clearNotificationsSuccess,\r\n} = notificationsSlice.actions;\r\n\r\nexport default notificationsSlice.reducer;\r\n\r\nexport const fetchNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchNotificationsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/notifications/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchNotificationsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const clearNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(clearNotificationsStart());\r\n    await apiClearNotifications({ branchName: user.branchName });\r\n    dispatch(clearNotificationsSuccess());\r\n  } catch (error) {\r\n    dispatch(clearNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateNotification = ({ notificationId, index }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(updateNotificationStart());\r\n    const notifications = await apiUpdateNotifications({ notificationId });\r\n    dispatch(updateNotificationSuccess(notifications));\r\n  } catch (error) {\r\n    dispatch(updateNotificationError(error.message));\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { Divider, ListItem, Typography } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport className from \"classnames\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n      gap: theme.spacing(1),\r\n    },\r\n    title: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"1.2rem\",\r\n    },\r\n    message: {\r\n      fontSize: \"1rem\",\r\n    },\r\n    seen: {\r\n      opacity: \"50%\",\r\n    },\r\n    date: {\r\n      color: \"#FFFFFFB3\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationItem = ({ notif, index, onNotificationPressed }) => {\r\n  const classes = useStyles();\r\n  const [seen, setSeen] = useState(notif.seen);\r\n  const appointment = JSON.parse(notif.payload);\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => {\r\n          setSeen(true);\r\n          onNotificationPressed(notif, index);\r\n        }}\r\n        className={\r\n          seen ? className([classes.root, classes.seen]) : classes.root\r\n        }\r\n        key={notif.ID}\r\n      >\r\n        <Typography className={classes.title}>\r\n          {appointment.client.clientName}\r\n        </Typography>\r\n        <Typography className={classes.message}>{notif.message}</Typography>\r\n        <Typography className={classes.date}>\r\n          {moment(notif.CreatedAt).format(\"MMMM DD, YYYY\")}\r\n        </Typography>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, Button, Typography } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { NotificationItem } from \"./NotificationItem\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n      maxHeight: \"500px\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      gap: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationsList = ({\r\n  notifications,\r\n  onNotificationPressed,\r\n  onClearNotificationsPressed,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderListItems = () => {\r\n    return Object.keys(notifications).map((k, i) => {\r\n      const n = notifications[k];\r\n      return (\r\n        <NotificationItem\r\n          notif={n}\r\n          index={i}\r\n          onNotificationPressed={onNotificationPressed}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(notifications).length !== 0) {\r\n      return (\r\n        <>\r\n          {renderListItems()}\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"error\"\r\n            onClick={onClearNotificationsPressed}\r\n            startIcon={<Delete color=\"error\" />}\r\n          >\r\n            Clear Notifications\r\n          </Button>\r\n        </>\r\n      );\r\n    }\r\n    return <Typography align=\"center\">No Notifications</Typography>;\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IconButton, Badge, Menu, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Notifications as NotificationIcon } from \"@material-ui/icons\";\r\nimport {\r\n  fetchNotifications,\r\n  clearNotifications,\r\n  updateNotification,\r\n} from \"./notificationsSlice\";\r\n\r\nimport { NotificationsList } from \"./NotificationsList\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      width: \"400px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const Notifications = () => {\r\n  const { notifications, isLoading } = useSelector(\r\n    (state) => state.notifications\r\n  );\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications());\r\n  }, [dispatch]);\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnNotificationPressed = (notification, index) => {\r\n    const appointment = JSON.parse(notification.payload);\r\n    history.push(\"/clients/appointments\", {\r\n      appointment,\r\n    });\r\n    dispatch(updateNotification({ notificationId: notification.ID, index }));\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnClearNotificationsPressed = () => {\r\n    dispatch(clearNotifications());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <NotificationsList\r\n        notifications={notifications}\r\n        onNotificationPressed={handleOnNotificationPressed}\r\n        onClearNotificationsPressed={handleOnClearNotificationsPressed}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClick}>\r\n        <Badge\r\n          badgeContent={\r\n            Object.keys(notifications)\r\n              .map((k) => notifications[k])\r\n              .filter((n) => !n.seen).length\r\n          }\r\n        >\r\n          <NotificationIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\r\n        {renderContent()}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  AppBar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { AccountCircle, Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { showModal } from \"../features/modals/modalSlice\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\nimport { Notifications } from \"../features/notifications/Notifications\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    width: \"100%\",\r\n    backgroundColor: \"#272727\",\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none \",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst appbarTitles = {\r\n  dashboard: \"Dashboard\",\r\n  \"pet-queues\": \"Pet Queues\",\r\n  \"all-clients\": \"All Clients\",\r\n  payments: \"Payments\",\r\n  appointments: \"Appointments\",\r\n  \"appointment-form\": \"Appointment Form\",\r\n  items: \"All Items\",\r\n  sales: \"All Sales\",\r\n};\r\n\r\nexport const CustomAppBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [appbarTitle, setAppbarTitle] = useState(\"\");\r\n  const location = useLocation();\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname;\r\n    const splittedPathname = pathname.split(\"/\");\r\n    const appbarTitle =\r\n      appbarTitles[splittedPathname[splittedPathname.length - 1]];\r\n    setAppbarTitle(appbarTitle);\r\n  }, [location, appbarTitle, setAppbarTitle]);\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.target);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const handleOnSignoutPressed = () => {\r\n    handleMenuClose();\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOGOUT_MODAL\",\r\n        modalProps: {\r\n          title: \"Logout\",\r\n          message: \"Are you sure you want to logout from the session?\",\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderMenu = () => {\r\n    return (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleOnSignoutPressed}>Logout</MenuItem>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return \"Petshield Veterinary Clinic - \" + appbarTitle;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography>{renderTitle()}</Typography>\r\n          <div className={classes.grow}></div>\r\n\r\n          <Notifications />\r\n          <IconButton edge=\"end\" onClick={handleMenuOpen}>\r\n            <AccountCircle style={{ fontSize: \"2rem\" }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu()}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/house.7d774967.svg\";","export default __webpack_public_path__ + \"static/media/all_clients.2a3b6270.svg\";","export default __webpack_public_path__ + \"static/media/all_items.e153111f.svg\";","export default __webpack_public_path__ + \"static/media/appointments.f3506a0a.svg\";","export default __webpack_public_path__ + \"static/media/clients.b5a069e7.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.99dfeff1.svg\";","export default __webpack_public_path__ + \"static/media/inventory.c084951b.svg\";","export default __webpack_public_path__ + \"static/media/item_transactions.a4256305.svg\";","export default __webpack_public_path__ + \"static/media/payments.8026a3af.svg\";","export default __webpack_public_path__ + \"static/media/pet_queue.25ef2fa6.svg\";","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"../assets/house.svg\";\r\nimport AllClientsIcon from \"../assets/all_clients.svg\";\r\nimport AllItemsIcon from \"../assets/all_items.svg\";\r\nimport AppointmentsIcon from \"../assets/appointments.svg\";\r\nimport ClientsIcon from \"../assets/clients.svg\";\r\nimport DashboardIcon from \"../assets/dashboard.svg\";\r\nimport InventoryIcon from \"../assets/inventory.svg\";\r\nimport ItemTransactionIcon from \"../assets/item_transactions.svg\";\r\nimport PetQueueIcon from \"../assets/pet_queue.svg\";\r\nimport PaymentsIcon from \"../assets/payments.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#343434\",\r\n  },\r\n\r\n  nested: {\r\n    paddingLeft: `${theme.spacing(4)}`,\r\n  },\r\n  drawerIcon: {\r\n    width: \"34px\",\r\n    height: \"34px\",\r\n    fill: `${theme.palette.primary.main} !important`,\r\n  },\r\n}));\r\n\r\nexport const CustomDrawer = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isOpen } = useSelector((state) => state.drawer);\r\n  const [expandedItems, setExpandedItems] = useState({\r\n    home: false,\r\n    clients: false,\r\n    inventory: false,\r\n  });\r\n\r\n  const menuItems = [\r\n    {\r\n      label: \"Home\",\r\n      type: \"home\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, home: !expandedItems.home }),\r\n      icon: HomeIcon,\r\n      subItems: [\r\n        {\r\n          label: \"Dashboard\",\r\n          icon: DashboardIcon,\r\n          path: \"/home/dashboard\",\r\n        },\r\n        // {\r\n        //   label: \"Pet Queue\",\r\n        //   icon: PetQueueIcon,\r\n        //   path: \"/home/pet-queues\",\r\n        // },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Clients\",\r\n      type: \"clients\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, clients: !expandedItems.clients }),\r\n      icon: ClientsIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Clients\",\r\n          icon: AllClientsIcon,\r\n          path: \"/clients/all-clients\",\r\n        },\r\n        {\r\n          label: \"Payments\",\r\n          icon: PaymentsIcon,\r\n          path: \"/clients/payments\",\r\n        },\r\n        {\r\n          label: \"Appointments\",\r\n          icon: AppointmentsIcon,\r\n          path: \"/clients/appointments\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Inventory\",\r\n      type: \"inventory\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({\r\n          ...expandedItems,\r\n          inventory: !expandedItems.inventory,\r\n        }),\r\n      icon: InventoryIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Items\",\r\n          icon: AllItemsIcon,\r\n          path: \"/inventory/items\",\r\n        },\r\n        {\r\n          label: \"Item Transactions\",\r\n          icon: ItemTransactionIcon,\r\n          path: \"/inventory/sales\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const drawer = (\r\n    <>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((item) => {\r\n          return (\r\n            <React.Fragment key={item.label}>\r\n              <ListItem key={item.label} button onClick={item.handleOnClick}>\r\n                <ListItemIcon>\r\n                  <ReactSVG\r\n                    key={item.label}\r\n                    src={item.icon}\r\n                    beforeInjection={(svg) => {\r\n                      svg.classList.add(classes.drawerIcon);\r\n                    }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label}></ListItemText>\r\n                {expandedItems[item.type] ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse\r\n                in={expandedItems[item.type]}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <List component=\"div\">\r\n                  {item.subItems.map((subItem) => {\r\n                    return (\r\n                      <ListItem\r\n                        key={subItem.label}\r\n                        button\r\n                        component={Link}\r\n                        to={subItem.path}\r\n                        className={classes.nested}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <ReactSVG\r\n                            src={subItem.icon}\r\n                            key={subItem.label}\r\n                            beforeInjection={(svg) => {\r\n                              svg.classList.add(classes.drawerIcon);\r\n                            }}\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={subItem.label}></ListItemText>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <>\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={isOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return renderContent();\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CustomAppBar } from \"./CustomAppBar\";\r\nimport { CustomDrawer } from \"./CustomDrawer\";\r\n\r\nconst PrivateLayout = ({ component: Component, ...restProps }) => {\r\n  // Get Authentication Reducer\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  if (Object.keys(user).length !== 0) {\r\n    return (\r\n      <Route\r\n        {...restProps}\r\n        render={(props) => (\r\n          <>\r\n            <CustomAppBar />\r\n            <CustomDrawer />\r\n            <Component {...props} />\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/auth/login\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-evenly\",\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      paddingBottom: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const handleShowPasswordPressed = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      id=\"loginForm\"\r\n      className={classes.root}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        size=\"small\"\r\n        helperText={!!errors.username ? \"This field is required!\" : \"\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.username}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        size=\"small\"\r\n        helperText={!!errors.password ? \"This field is required!\" : \"\"}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <IconButton onClick={handleShowPasswordPressed}>\r\n                {showPassword ? (\r\n                  <VisibilityOff color=\"secondary\" />\r\n                ) : (\r\n                  <Visibility color=\"secondary\" />\r\n                )}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        error={!!errors.password}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/login_background.102072f5.png\";","export default __webpack_public_path__ + \"static/media/logo.68ea1519.png\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress, Paper, Typography } from \"@material-ui/core\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { logIn } from \"../authSlice\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport bg from \"../../../assets/login_background.png\";\r\nimport logo from \"../../../assets/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    background: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundImage: `url(${bg})`,\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      filter: \"blur(4px)\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      maxHeight: \"500px\",\r\n      maxWidth: \"500px\",\r\n      gridTemplate: \"1fr 1fr 1fr/ 1fr\",\r\n      placeContent: \"center\",\r\n      padding: \"1em\",\r\n      zIndex: 2,\r\n    },\r\n    loading: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      placeContent: \"center\",\r\n    },\r\n\r\n    centerItem: {\r\n      display: \"grid\",\r\n      placeSelf: \"center\",\r\n    },\r\n\r\n    logo: {\r\n      position: \"fixed\",\r\n      top: \"0\",\r\n      margin: \"1em auto\",\r\n      width: \"80px\",\r\n      height: \"80px\",\r\n      zIndex: 2,\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(logIn(data));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loading}>\r\n          <CircularProgress color=\"primary\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (Object.keys(user).length === 0) {\r\n      return (\r\n        <Paper variant={\"outlined\"} className={classes.container}>\r\n          <Typography\r\n            className={classes.centerItem}\r\n            align=\"center\"\r\n            variant={\"h5\"}\r\n          >\r\n            Petshield Veterinary Clinic\r\n          </Typography>\r\n          <div>\r\n            <LoginForm onSubmit={handleSubmit} />\r\n            <Button\r\n              color=\"primary\"\r\n              form=\"loginForm\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/home/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <img className={classes.logo} src={logo} alt=\"logo\"></img>\r\n      <div className={classes.background}></div>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemSalesStats = async (\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.get(\r\n    `/stats/${branchName}/item-sales?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemSalesStats as getItemSalesStatesFromApi } from \"../../../../api/stats\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  stats: {},\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst homeSalesStatsSlice = createSlice({\r\n  name: \"homeSalesStats\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStatsStart: handleOnStart,\r\n    fetchItemSalesStatsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.stats = action.payload;\r\n    },\r\n    fetchItemSalesStatsFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default homeSalesStatsSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesStatsFailure,\r\n  fetchItemSalesStatsStart,\r\n  fetchItemSalesStatsSuccess,\r\n} = homeSalesStatsSlice.actions;\r\n\r\nexport const fetchItemSalesStats = (salesDate, salesDateCateg) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStatsStart());\r\n    const stats = await getItemSalesStatesFromApi(\r\n      user.branchName,\r\n      salesDate,\r\n      salesDateCateg\r\n    );\r\n    dispatch(fetchItemSalesStatsSuccess(stats));\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesStatsFailure(error));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { fetchItemSalesStats } from \"./homeSalesStatsSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsDatePicker = ({\r\n  setSalesDateCateg,\r\n  salesDateCateg,\r\n  salesDate,\r\n  setSalesDate,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const datePickerViews = {\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const handleSalesDateChanged = (val) => {\r\n    setSalesDate(moment(val).format(\"MM-DD-YYYY\"));\r\n  };\r\n\r\n  const handleSalesDateCategChanged = ({ target: { value } }) => {\r\n    setSalesDateCateg(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemSalesStats(salesDate, salesDateCateg));\r\n  }, [dispatch, salesDate, salesDateCateg]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        value={salesDateCateg}\r\n        onChange={handleSalesDateCategChanged}\r\n        variant=\"outlined\"\r\n      >\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n      </Select>\r\n      <DatePicker\r\n        value={salesDate}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n        )}\r\n        views={datePickerViews[salesDateCateg]}\r\n        onChange={handleSalesDateChanged}\r\n      ></DatePicker>\r\n    </div>\r\n  );\r\n};\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStatsToolip = ({ payload, active }) => {\r\n  const classes = useStyles();\r\n  if (active && payload) {\r\n    const title = payload[0].payload[\"name\"];\r\n    const value = payload[0].payload[\"sales\"];\r\n\r\n    const renderData = () => {\r\n      if (Object.keys(value).length !== 0) {\r\n        const filteredSales = Object.keys(value)\r\n          .filter((key) => key !== \"Net Sales\")\r\n          .map((key) => {\r\n            return <Typography key={key}>{`${key}: ${value[key]}`}</Typography>;\r\n          });\r\n        return (\r\n          <>\r\n            {filteredSales}\r\n            <Typography>\r\n              {`Net Sales: ${\r\n                value[\"Net Sales\"] !== undefined ? value[\"Net Sales\"] : 0\r\n              }`}\r\n            </Typography>\r\n          </>\r\n        );\r\n      }\r\n\r\n      return <Typography>No Sales</Typography>;\r\n    };\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {title}\r\n        </Typography>\r\n        <br />\r\n        {renderData()}\r\n      </Card>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  YAxis,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  Tooltip,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { HomeSalesStatsToolip } from \"./components/HomeSalesStatsTooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-evenly\",\r\n      gridGap: \"1em\",\r\n    },\r\n    tooltip: {\r\n      backgroundColor: \"red\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsGraph = () => {\r\n  const classes = useStyles();\r\n  const { isLoading, stats } = useSelector((state) => state.homeSalesStats);\r\n  const [lineData, setLineData] = useState([]);\r\n  const [pieData, setPieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const pieColors = {\r\n      Grooming: \"#8884D8\",\r\n      \"Vet Sales\": \"#8CDEDC\",\r\n      \"Store Sales\": \"#B2ECE1\",\r\n      \"Blood Test\": \"#D295BF\",\r\n      default: \"#DE9151\",\r\n    };\r\n\r\n    if (Object.keys(stats).length !== 0) {\r\n      const data = stats.data.map((item) => {\r\n        return {\r\n          name: item.category,\r\n          sales: item.value,\r\n          netSales:\r\n            item.value[\"Net Sales\"] !== undefined ? item.value[\"Net Sales\"] : 0,\r\n        };\r\n      });\r\n\r\n      let pieMap = {};\r\n\r\n      for (let i = 0; i < stats.data.length; i++) {\r\n        if (Object.keys(stats.data[i].value).length !== 0) {\r\n          Object.keys(stats.data[i].value)\r\n            .filter((key) => key !== \"Net Sales\")\r\n            .forEach((key) => {\r\n              if (!pieMap[key]) {\r\n                pieMap[key] = 0;\r\n              }\r\n              pieMap[key] += stats.data[i].value[key];\r\n            });\r\n        }\r\n      }\r\n      const pieData = Object.keys(pieMap).map((key) => {\r\n        return {\r\n          name: key,\r\n          value: pieMap[key],\r\n          fill:\r\n            pieColors[key] !== undefined\r\n              ? pieColors[key]\r\n              : pieColors[\"default\"],\r\n        };\r\n      });\r\n\r\n      setPieData(pieData);\r\n      setLineData(data);\r\n    }\r\n  }, [stats, isLoading, setPieData, setLineData]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    if (lineData.length !== 0) {\r\n      return (\r\n        <>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <LineChart data={lineData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" type=\"category\" />\r\n              <YAxis type=\"number\" dataKey=\"netSales\" name=\"Net Sales\" />\r\n              <Tooltip content={<HomeSalesStatsToolip />} />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"netSales\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <PieChart>\r\n              <Tooltip />\r\n              <Legend />\r\n              <Pie data={pieData} dataKey=\"value\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  return <div className={classes.root}>{renderContent()}</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { HomeSalesStatsDatePicker } from \"./HomeSalesStatsDatePicker\";\r\nimport { HomeSalesStatsGraph } from \"./HomeSalesStatsGraph\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n    graphWrapper: {},\r\n    title: {\r\n      margin: `${theme.spacing(2)} 0`,\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStats = () => {\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const [salesDateCateg, setSalesDateCateg] = useState(\"monthly\");\r\n  const [salesDate, setSalesDate] = useState(currentDate);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <HomeSalesStatsDatePicker\r\n        salesDate={salesDate}\r\n        setSalesDate={setSalesDate}\r\n        salesDateCateg={salesDateCateg}\r\n        setSalesDateCateg={setSalesDateCateg}\r\n      />\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        className={classes.title}\r\n      >{`${salesDateCateg.toUpperCase()} Sales`}</Typography>\r\n      <div className={classes.graphWrapper}>\r\n        <HomeSalesStatsGraph />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { HomeSalesStats } from \"./homeSalesStats/HomeSalesStats\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n  };\r\n});\r\n\r\nconst HomeDashboard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <HomeSalesStats />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomeDashboard;\r\n","export default __webpack_public_path__ + \"static/media/consultations.524fbfbc.svg\";","export default __webpack_public_path__ + \"static/media/rx_icon.edf0143d.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Check,\r\n  LibraryBooksOutlined,\r\n  Person,\r\n  PostAdd,\r\n  Event,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    owner: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.owner}>Owner: Paolo</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.finish)}\r\n        >\r\n          <Check />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Event />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport ConsultationsIcon from \"../../../assets/consultations.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { ConsultationCard } from \"./ConsultationCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    consultationList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationsCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Consultations</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets to consult:{\" \"}\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={ConsultationsIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.consultationList}>\r\n          <ConsultationCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admitted.d82cca45.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport { LibraryBooksOutlined, Person, PostAdd } from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const AdmittanceCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.subTitle}>Owner: Paolo</Typography>\r\n          <Typography className={classes.subTitle}>Days admitted: 0</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AdmittedIcon from \"../../../assets/admitted.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { AdmittanceCard } from \"./AdmittanceCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    admittancesList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\nexport const AdmittancesCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Admitted</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets admitted:\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={AdmittedIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.admittancesList}>\r\n          <AdmittanceCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { ConsultationsCard } from \"./ConsultationsCard\";\r\nimport { AdmittancesCard } from \"./AdmittancesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(3),\r\n    },\r\n  };\r\n});\r\n\r\nconst HomePetQueues = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.container}>\r\n        <ConsultationsCard />\r\n        <AdmittancesCard />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomePetQueues;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomeDashboard from \"./homeDashboard/HomeDashboard\";\r\nimport HomePetQueues from \"./homePetQueues/HomePetQueues\";\r\n\r\nconst HomePage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.url}/dashboard`} component={HomeDashboard} />\r\n      <Route exact path={`${match.url}/pet-queues`} component={HomePetQueues} />\r\n      <Redirect to={`${match.url}/dashboard`} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Typography,\r\n  ListItem,\r\n  Collapse,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport {\r\n  Person,\r\n  PostAdd,\r\n  AccountBalance,\r\n  Event,\r\n  EventNote,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#2f2f2f\",\r\n    },\r\n    infoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    buttonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      zIndex: \"10\",\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n    clientMoreDetails: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientCard = ({ client, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnPaymentHistoryPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_TRANSACTIONS_MODAL\",\r\n        modalProps: {\r\n          index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddVeterinarianNotePressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_VETERINARIAN_NOTE_MODAL\",\r\n        modalProps: { index },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddAppointmentPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n          startDate: Date().toString(),\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleOnAppointmentsPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_APPOINTMENTS_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemPressed = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ListItem\r\n        button\r\n        className={classes.container}\r\n        onClick={handleOnItemPressed}\r\n      >\r\n        <div className={classes.infoContainer}>\r\n          <Avatar className={classes.petAvatar}></Avatar>\r\n          <div>\r\n            <Typography variant=\"h6\">{`Pet Name: ${client.pet.petName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Owner: ${client.clientName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Species: ${client.pet.species}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Breed: ${client.pet.petBreed}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Last Visit: ${moment(\r\n              client.lastVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Next Visit: ${moment(\r\n              client.nextVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.buttonsContainer}>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnPaymentHistoryPressed}\r\n          >\r\n            <AccountBalance />\r\n          </ButtonBase>\r\n          <ButtonBase className={classes.consultationButton}>\r\n            <Person />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAddVeterinarianNotePressed}\r\n          >\r\n            <PostAdd />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAppointmentsPressed}\r\n          >\r\n            <EventNote />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAddAppointmentPressed}\r\n          >\r\n            <Event />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classNames(classes.consultationButton, classes.rxIcon)}\r\n          >\r\n            <img src={RxIcon} alt=\"rx\"></img>\r\n          </ButtonBase>\r\n        </div>\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <div className={classes.clientMoreDetails}>\r\n          <Typography>{`Address: ${client.address}`}</Typography>\r\n          <Typography>{`Contact Number: ${client.contactNumber}`}</Typography>\r\n          <Typography>{`Email: ${client.email}`}</Typography>\r\n          <Typography>{`Veterinarian Note: ${client.veterinarianNote}`}</Typography>\r\n        </div>\r\n      </Collapse>\r\n    </Paper>\r\n  );\r\n};\r\n","import { List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ClientCard } from \"./ClientCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      minHeight: \"100%\",\r\n      overflowY: \"auto\",\r\n      overflowX: \"hidden\",\r\n      padding: `0 ${theme.spacing(2)}`,\r\n      paddingBottom: theme.spacing(5), // This is added in order to have space in the end of the list.\r\n    },\r\n  };\r\n});\r\nexport const ClientsAllClientsList = ({ clients }) => {\r\n  const classes = useStyles();\r\n\r\n  const renderContent = () => {\r\n    return Object.keys(clients).map((key) => (\r\n      <ClientCard key={clients[key].ID} client={clients[key]} index={key} />\r\n    ));\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { Add, Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientsAllClientsHeader = ({ fuse, setClientResultsSearch }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const handleOnAddClientPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_CLIENT_MODAL\",\r\n      })\r\n    );\r\n  };\r\n  const handleSearchClientChanged = (value) => {\r\n    if (value !== \"\") {\r\n      const results = fuse.search(value);\r\n      setClientResultsSearch(results.map((result) => result.item));\r\n    } else {\r\n      setClientResultsSearch(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Search\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <Search color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onChange={(e) => {\r\n          handleSearchClientChanged(e.target.value);\r\n        }}\r\n      ></TextField>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<Add />}\r\n        onClick={handleOnAddClientPressed}\r\n      >\r\n        Add Client\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress, Paper } from \"@material-ui/core\";\r\n\r\nimport { fetchClients } from \"../clientsSlice\";\r\nimport { ClientsAllClientsList } from \"./ClientsAllClientsList\";\r\nimport { ClientsAllClientsHeader } from \"./ClientsAllClientListHeader\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAllClients = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const [clientsSearchResult, setClientsSearchResult] = useState(null);\r\n\r\n  // Create fuzzy text search\r\n  const options = useMemo(() => {\r\n    return {\r\n      includeScore: true,\r\n      keys: [\"clientName\"],\r\n    };\r\n  }, []);\r\n\r\n  const fuse = useMemo(() => new Fuse(clients, options), [clients, options]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (!isClientsLoading) {\r\n      return (\r\n        <>\r\n          <ClientsAllClientsHeader\r\n            setClientResultsSearch={setClientsSearchResult}\r\n            fuse={fuse}\r\n          />\r\n          <ClientsAllClientsList\r\n            clients={clientsSearchResult ? clientsSearchResult : clients}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <Paper className={classes.root}>{renderContent()}</Paper>;\r\n};\r\n\r\nexport default ClientsAllClients;\r\n","import { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, TextField, Button } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateAppointment, removeAppointment } from \"../../clientsSlice\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    icon: {\r\n      color: theme.palette.action.active,\r\n    },\r\n    textCenter: {\r\n      textAlign: \"center\",\r\n    },\r\n    commandButton: {\r\n      backgroundColor: \"rgba(255,255,255,0.65)\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n\r\n      justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      marginTop: theme.spacing(2),\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentTooltipHeader = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n\r\n  ...restProps\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleOnDeletePressed = () => {\r\n    const { appointment } = appointmentData;\r\n    dispatch(removeAppointment({ appointmentId: appointment.ID }));\r\n    setAppointmentVisible(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <AppointmentTooltip.Header\r\n      className={classes.header}\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <IconButton onClick={handleOnDeletePressed}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n      <IconButton onClick={() => setIsEditing(!isEditing)}>\r\n        <Edit color={isEditing ? \"primary\" : \"action\"} />\r\n      </IconButton>\r\n    </AppointmentTooltip.Header>\r\n  );\r\n};\r\n\r\nexport const ClientAppointmentTooltipContent = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n  onAppointmentMetaChanged,\r\n  ...restProps\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, control } = useForm();\r\n  const { appointment } = appointmentData;\r\n\r\n  const onSubmit = (data) => {\r\n    const formattedDate = moment(data.date).toISOString();\r\n    const newAppointment = {\r\n      ...appointment,\r\n      date: formattedDate,\r\n      veterinarianNote: data.veterinarianNotes,\r\n    };\r\n    setAppointmentVisible(false);\r\n    dispatch(updateAppointment({ appointment: newAppointment }));\r\n  };\r\n\r\n  return (\r\n    <AppointmentTooltip.Content\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <form\r\n        className={classes.form}\r\n        id=\"updateAppointmentForm\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Controller\r\n          id=\"appointment-date\"\r\n          name=\"date\"\r\n          control={control}\r\n          defaultValue={moment(appointment.date).toDate()}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={(props) => (\r\n            <DatePicker\r\n              disabled={!isEditing}\r\n              renderInput={(props) => (\r\n                <TextField\r\n                  {...props}\r\n                  size=\"small\"\r\n                  label=\"Appointment Date\"\r\n                  readOnly={!isEditing}\r\n                />\r\n              )}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"veterinarianNotes\"\r\n          control={control}\r\n          defaultValue={appointment.veterinarianNote}\r\n          rules={{}}\r\n          render={(props) => (\r\n            <TextField\r\n              disabled={!isEditing}\r\n              label=\"Notes\"\r\n              multiline\r\n              size=\"small\"\r\n              rows={5}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        {isEditing ? (\r\n          <Button form=\"updateAppointmentForm\">Update Appointment</Button>\r\n        ) : null}\r\n      </form>\r\n    </AppointmentTooltip.Content>\r\n  );\r\n};\r\n","import { MonthView } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const MonthCell = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnCellPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          startDate: String(props.startDate),\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return <MonthView.TimeTableCell onClick={handleOnCellPressed} {...props} />;\r\n};\r\n","import { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport React from \"react\";\r\n\r\nclass ClientAppointment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      data,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      notificationState,\r\n      setNotificationState,\r\n    } = this.props;\r\n    if (notificationState) {\r\n      const { appointment } = notificationState;\r\n\r\n      if (Array.isArray(appointment)) {\r\n        if (appointment[0].ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      } else {\r\n        if (appointment.ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      onClick,\r\n      classes,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      location,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    return (\r\n      <Appointments.Appointment\r\n        ref={this.ref}\r\n        onClick={({ target }) => {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: target.parentElement.parentElement,\r\n            data,\r\n          });\r\n        }}\r\n        {...restProps}\r\n      >\r\n        <div ref={this.ref}>{restProps.children}</div>\r\n      </Appointments.Appointment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientAppointment;\r\n// export const ClientAppointment = ({\r\n//   data,\r\n//   onClick,\r\n//   classes,\r\n//   setAppointmentVisible,\r\n//   onAppointmentMetaChange,\r\n//   location,\r\n//   ...restProps\r\n// }) => {\r\n//   useEffect(() => {}, [\r\n//     location,\r\n//     data,\r\n//     setAppointmentVisible,\r\n//     onAppointmentMetaChange,\r\n//   ]);\r\n\r\n//   return (\r\n//     <Appointments.Appointment\r\n//       onClick={({ target }) => {\r\n//         setAppointmentVisible(true);\r\n//         onAppointmentMetaChange({\r\n//           target: target.parentElement.parentElement,\r\n//           data,\r\n//         });\r\n//       }}\r\n//       {...restProps}\r\n//     />\r\n//   );\r\n// };\r\n","import { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  MonthView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport {\r\n  ClientAppointmentTooltipContent,\r\n  ClientAppointmentTooltipHeader,\r\n} from \"./ClientAppointmentTooltip\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MonthCell } from \"./ClientAppointmentsSchedulerMonthCell\";\r\nimport ClientAppointment from \"./ClientAppointment\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      borderRadius: \"10px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    appointmentWrapper: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsScheduler = ({ data }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [appointmentVisible, setAppointmentVisible] = useState(false);\r\n  const [notificationState, setNotificationState] = useState(location.state);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [appointmentMeta, setAppointmentMeta] = useState({\r\n    target: null,\r\n    data: {},\r\n  });\r\n\r\n  const handleOnAppointmentMetaChanged = ({ data, target }) => {\r\n    setIsEditing(false);\r\n    setAppointmentMeta({ data, target });\r\n  };\r\n\r\n  const tooltipHeader = connectProps(ClientAppointmentTooltipHeader, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n    };\r\n  });\r\n  const tooltipContent = connectProps(ClientAppointmentTooltipContent, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChanged: handleOnAppointmentMetaChanged,\r\n    };\r\n  });\r\n\r\n  const appointment = connectProps(ClientAppointment, () => {\r\n    return {\r\n      classes,\r\n      setAppointmentVisible: setAppointmentVisible,\r\n      onAppointmentMetaChange: handleOnAppointmentMetaChanged,\r\n      notificationState,\r\n      setNotificationState,\r\n    };\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Scheduler height=\"auto\" data={data} className={classes.root}>\r\n        <ViewState />\r\n\r\n        <MonthView timeTableCellComponent={MonthCell} />\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <Appointments appointmentComponent={appointment} />\r\n        <AppointmentTooltip\r\n          headerComponent={tooltipHeader}\r\n          contentComponent={tooltipContent}\r\n          visible={appointmentVisible}\r\n          onVisibilityChange={(visible) => setAppointmentVisible(visible)}\r\n          appointmentMeta={appointmentMeta}\r\n          onAppointmentMetaChange={handleOnAppointmentMetaChanged}\r\n        />\r\n\r\n        <AppointmentForm />\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n};\r\n","import { ClientAppointmentsScheduler } from \"./ClientAppointmentsScheduler\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientAppointmentsSchedulerContainer = () => {\r\n  const { appointments } = useSelector((state) => state.clients);\r\n  const data = appointments.map((ap) => {\r\n    return {\r\n      id: ap.ID,\r\n      startDate: new Date(ap.date),\r\n      endDate: moment(new Date(ap.date)).add(2, \"hours\").toDate(),\r\n      title: `${ap.client.clientName} - ${ap.client.pet.petName} : ${ap.type}`,\r\n      client: ap.client,\r\n      appointment: ap,\r\n    };\r\n  });\r\n\r\n  return <ClientAppointmentsScheduler data={data} />;\r\n};\r\nexport default ClientAppointmentsSchedulerContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAppointments } from \"../clientsSlice\";\r\nimport ClientAppointmentsScheduler from \"./ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAppointments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isAppointmentsLoading } = useSelector((state) => state.clients);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAppointments());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return <ClientAppointmentsScheduler />;\r\n  };\r\n\r\n  return <Card className={classes.root}>{renderContent()}</Card>;\r\n};\r\n\r\nexport default ClientsAppointments;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n  setSelectedClient,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { isClientsLoading, clients } = useSelector((state) => state.clients);\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  const renderClientNameField = () => {\r\n    if (!showAddItemSaleRow) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Autocomplete\r\n        loading={isClientsLoading}\r\n        options={clients}\r\n        getOptionLabel={(option) => option.clientName}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            variant=\"outlined\"\r\n            helperText=\"Enter client name here.\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {isClientsLoading ? (\r\n                    <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n        onChange={(_, data, reason) => {\r\n          if (reason === \"select-option\") {\r\n            setSelectedClient(data);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>{renderClientNameField()}</div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment, fetchClients } from \"../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: theme.spacing(1),\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  selectedClient,\r\n  setSelectedClient,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedClient({});\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(selectedClient.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>₱{Number(selectedItem.price).toFixed(2)}</TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            margin=\"dense\"\r\n            onChange={handleOnQuantityChange}\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>₱{Number(sales).toFixed(2)}</TableCell>\r\n        <TableCell>\r\n          {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n        </TableCell>\r\n        <TableCell>\r\n          {selectedItem.isIncentiveFixed\r\n            ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n            : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                2\r\n              )}`}\r\n        </TableCell>\r\n        <TableCell>₱{Number(netSales).toFixed(2)}</TableCell>\r\n        <TableCell>{selectedItem.category}</TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderItemField = () => {\r\n    if (Object.keys(selectedClient).length === 0) {\r\n      return \"Select a client first\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Product Name\"\r\n              size=\"small\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n        {selectedItem.name}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>{currentDate}</TableCell>\r\n      <TableCell>{selectedClient.clientName}</TableCell>\r\n      <TableCell>{renderItemField()}</TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientPaymentsTableHeader from \"./ClientPaymentsTableHeader\";\r\nimport { ClientPaymentsTableAddItemRow } from \"./ClientPaymentsTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTable = ({ data, columns }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ClientPaymentsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n        setSelectedClient={setSelectedClient}\r\n        selectedClient={selectedClient}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientPaymentsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              selectedClient={selectedClient}\r\n              setSelectedClient={setSelectedClient}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {cell.render(\"Cell\")}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientPaymentsTable } from \"./ClientPaymentsTable\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientPaymentsTableContainer = ({ itemSales }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.client.clientName,\r\n        col3: itemSale.item.name,\r\n        col4: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col5: itemSale.quantity,\r\n        col6: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col7: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col8: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col9: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col10: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Client\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col9\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col10\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    itemSales,\r\n  };\r\n\r\n  return <ClientPaymentsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientPaymentsTableContainer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      height: \"150px\",\r\n      alignItems: \"center\",\r\n      padding: \"1em\",\r\n      backgroundColor: \"#1D1D1D\",\r\n      \"&::before\": {\r\n        content: '\" \"',\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: \"8px\",\r\n        width: \"50%\",\r\n        top: \"-3px\",\r\n        borderRadius: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesCard = ({ title, value }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} elevation={0}>\r\n      <Typography style={{ fontWeight: \"bold\" }} align=\"center\">\r\n        {title}\r\n      </Typography>\r\n      <Typography>{`P${Number(value).toFixed(2)}`}</Typography>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      marginBottom: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    picker: {\r\n      height: \"100% !important\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesDatePicker = ({\r\n  onSalesDateChanged,\r\n  onSalesDateCategChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n\r\n  const datePickerViews = {\r\n    daily: [\"date\"],\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const [selectedSalesDateCateg, setSelectedSalesDateCateg] = useState(\"daily\");\r\n  const [selectedSalesDate, setSelectedSalesDate] = useState(currentDate);\r\n\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    setSelectedSalesDateCateg(value);\r\n    onSalesDateCategChanged({\r\n      salesDate: selectedSalesDate,\r\n      salesDateCateg: value,\r\n    });\r\n  };\r\n\r\n  const handleOnSalesDateChanged = (date) => {\r\n    const formattedDate = date.format(\"MM-DD-YYYY\").toString();\r\n    setSelectedSalesDate(formattedDate);\r\n    onSalesDateChanged({\r\n      salesDate: formattedDate,\r\n      salesDateCateg: selectedSalesDateCateg,\r\n    });\r\n  };\r\n\r\n  const renderPicker = () => {\r\n    if (selectedSalesDateCateg === \"overall\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <DatePicker\r\n        value={selectedSalesDate}\r\n        views={datePickerViews[selectedSalesDateCateg]}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n        )}\r\n        onChange={(value) => {\r\n          handleOnSalesDateChanged(value);\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        variant=\"outlined\"\r\n        value={selectedSalesDateCateg}\r\n        onChange={(e) => handleOnSalesDateCategChanged(e.target.value)}\r\n      >\r\n        <MenuItem value=\"overall\">All</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"daily\">Daily</MenuItem>\r\n      </Select>\r\n      {renderPicker()}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SalesCard } from \"./SalesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n\r\n      gridGap: \"1.5em\",\r\n      paddingBottom: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        gridTemplate: \"1fr / 1fr 1fr 1fr 1fr 1fr 1fr\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesStats = ({ dailySales, metadata }) => {\r\n  const classes = useStyles();\r\n\r\n  const [computedSales, setComputedSales] = useState(0);\r\n  const [computedSalesBloodTest, setComputedSalesBloodTest] = useState(0);\r\n  const [computedSalesGrooming, setComputedSalesGrooming] = useState(0);\r\n  const [computedSalesVetSales, setComputedSalesVetSales] = useState(0);\r\n  const [computedSalesStoreSales, setComputedSalesStoreSales] = useState(0);\r\n  const [salesTitle, setSalesTitle] = useState(\"\");\r\n\r\n  const computeSales = useCallback(() => {\r\n    let totalSales = 0;\r\n    let totalIncentives = 0;\r\n    Object.keys(dailySales).forEach((val) => {\r\n      if (val === \"Blood Test\") {\r\n        setComputedSalesBloodTest(dailySales[val].netSales);\r\n      } else if (val === \"Grooming\") {\r\n        setComputedSalesGrooming(dailySales[val].netSales);\r\n      } else if (val === \"VET Sales\") {\r\n        setComputedSalesVetSales(dailySales[val].netSales);\r\n      } else if (val === \"Store Sales\") {\r\n        setComputedSalesStoreSales(dailySales[val].netSales);\r\n      } else {\r\n        totalSales += dailySales[val].netSales;\r\n      }\r\n    });\r\n    setComputedSales(totalSales - totalIncentives);\r\n  }, [setComputedSales, dailySales]);\r\n\r\n  const getSalesTitle = useCallback(() => {\r\n    const title =\r\n      String(metadata.salesDateCateg[0]).toUpperCase() +\r\n      String(metadata.salesDateCateg).substring(\r\n        1,\r\n        metadata.salesDateCateg.length\r\n      );\r\n    setSalesTitle(title);\r\n  }, [setSalesTitle, metadata]);\r\n\r\n  useEffect(() => {\r\n    computeSales();\r\n    getSalesTitle();\r\n  }, [computeSales, getSalesTitle]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesCard title={`${salesTitle} Sales`} value={computedSales} />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Blood Test`}\r\n        value={computedSalesBloodTest}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Grooming`}\r\n        value={computedSalesGrooming}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Store Sales`}\r\n        value={computedSalesStoreSales}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - VET Sales`}\r\n        value={computedSalesVetSales}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Net Sales `}\r\n        value={\r\n          computedSales +\r\n          computedSalesBloodTest +\r\n          computedSalesGrooming +\r\n          computedSalesStoreSales +\r\n          computedSalesVetSales\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchAllClientPayments } from \"../clientsSlice\";\r\nimport ClientPaymentsTableContainer from \"./ClientPaymentsTable/ClientPaymentsTableContainer\";\r\n\r\nimport moment from \"moment\";\r\nimport { SalesStats, SalesDatePicker } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientPayments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isPaymentsLoading, clientPayments, error } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n    dispatch(\r\n      fetchAllClientPayments({\r\n        salesDate: currentDate,\r\n        salesDateCateg: \"daily\",\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(clientPayments).length !== 0 && !isPaymentsLoading) {\r\n      return (\r\n        <>\r\n          <SalesStats\r\n            metadata={clientPayments.metadata}\r\n            dailySales={clientPayments.dailySales}\r\n          />\r\n          <ClientPaymentsTableContainer\r\n            itemSales={clientPayments.itemSales ? clientPayments.itemSales : []}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ClientsAllClients from \"./clientsAllClients/ClientsAllClients\";\r\nimport ClientsAppointments from \"./clientsAppointments/ClientsAppointments\";\r\nimport ClientPayments from \"./clientsPayments/ClientPayments\";\r\n\r\nconst ClientsPage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/all-clients`} component={ClientsAllClients} />\r\n\r\n      <Route\r\n        path={`${match.url}/appointments`}\r\n        component={ClientsAppointments}\r\n      />\r\n      <Route path={`${match.url}/payments`} component={ClientPayments} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ClientsPage;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\nconst InventoryItemsTableFooter = ({\r\n  gotoPage,\r\n  nextPage,\r\n  previousPage,\r\n  canNextPage,\r\n  canPreviousPage,\r\n  pageCount,\r\n  pageSize,\r\n  pageIndex,\r\n  itemsCount,\r\n}) => {\r\n  const classes = useStyles();\r\n  const renderCurrPageItemCount = () => {\r\n    const currPageItemCount =\r\n      pageSize * (pageIndex + 1) >= itemsCount\r\n        ? itemsCount\r\n        : pageSize * (pageIndex + 1);\r\n\r\n    return (\r\n      <Typography>{`Showing ${currPageItemCount} out of ${itemsCount} items`}</Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {renderCurrPageItemCount()}\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          FIRST\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          PREV\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          NEXT\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          LAST\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableFooter;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      alignItem: \"center\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItem: \"center\",\r\n      marginBottom: \"1em\",\r\n    },\r\n\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItemsTableHeader = ({\r\n  setPageSize,\r\n  pageSize,\r\n  handleSearchItemChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const showItemCountValues = [10, 20, 30, 40, 50];\r\n\r\n  const handleAddItemPressed = (_) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_ITEM_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemCountChange = (e) => {\r\n    setPageSize(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.container}>\r\n        <div></div>\r\n        <Button\r\n          className={classes.addItemButton}\r\n          variant=\"outlined\"\r\n          endIcon={<AddIcon />}\r\n          onClick={handleAddItemPressed}\r\n        >\r\n          Add Item\r\n        </Button>\r\n      </div>\r\n      <div className={classes.container}>\r\n        <div className={classes.itemCount}>\r\n          <Typography>Show &nbsp;</Typography>\r\n          <Select value={pageSize} onChange={handleOnItemCountChange}>\r\n            {showItemCountValues.map((itemCount) => (\r\n              <MenuItem key={itemCount} value={itemCount}>\r\n                {itemCount}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <Typography>&nbsp; entries</Typography>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Search\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <Search color=\"primary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(e) => {\r\n              handleSearchItemChanged(e.target.value);\r\n            }}\r\n          ></TextField>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableHeader;\r\n","import React from \"react\";\r\nimport { useTable, usePagination, useSortBy, useFilters } from \"react-table\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport InventoryItemsTableFooter from \"./InventoryItemsTableFooter\";\r\nimport InventoryItemsTableHeader from \"./InventoryItemsTableHeader\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n\r\n      backgroundColor: \"#1d1d1d\",\r\n      padding: \"1.5em\",\r\n      overflowX: \"auto\",\r\n    },\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryItemsTable = ({ data, columns, items }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setFilter,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const getCellProps = (cellInfo) => {\r\n    if (cellInfo.value === \"Out of Stock\") {\r\n      return {\r\n        className: classes.outOfStock,\r\n      };\r\n    } else if (cellInfo.value === \"In Stock\") {\r\n      return {\r\n        className: classes.inStock,\r\n      };\r\n    } else if (cellInfo.value === \"Discounted\") {\r\n      return {\r\n        className: classes.itemDiscounted,\r\n      };\r\n    }\r\n    return {\r\n      className: \"\",\r\n    };\r\n  };\r\n\r\n  const renderCell = (cell) => {\r\n    if (cell.column.id === \"col5\") {\r\n      return <Typography>₱{cell.render(\"Cell\")}</Typography>;\r\n    } else if (cell.column.id === \"col7\") {\r\n      const discountAmount =\r\n        (cell.row.values.col6 / 100) * cell.row.values.col5;\r\n      return (\r\n        <Typography>\r\n          ₱{cell.render(\"Cell\")}\r\n          {` (${discountAmount.toFixed(2)})`}\r\n        </Typography>\r\n      );\r\n    } else if (cell.column.id === \"col6\") {\r\n      return <Typography>{cell.render(\"Cell\")}%</Typography>;\r\n    }\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleManageItemPress = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MANAGE_ITEM_MODAL\",\r\n        modalProps: {\r\n          item: items[itemIndex],\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchItemChanged = (searchTerm) => {\r\n    setFilter(\"col1\", searchTerm);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventoryItemsTableHeader\r\n        pageSize={pageSize}\r\n        setPageSize={setPageSize}\r\n        handleSearchItemChanged={handleSearchItemChanged}\r\n      />\r\n      <Table {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <TableCell\r\n                  {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                >\r\n                  <div key={header.id} className={classes.tableHeader}>\r\n                    {header.render(\"Header\")}\r\n                    {header.isSorted ? (\r\n                      header.isSortedDesc ? (\r\n                        <ArrowDownwardIcon fontSize=\"small\" />\r\n                      ) : (\r\n                        <ArrowUpwardIcon fontSize=\"small\" />\r\n                      )\r\n                    ) : null}\r\n                  </div>\r\n                </TableCell>\r\n              ))}\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody>\r\n          {page.map((row, _) => {\r\n            prepareRow(row);\r\n            return (\r\n              <>\r\n                <TableRow key={row.id} {...row.getRowProps()}>\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <TableCell key={`col${index}`}>\r\n                        <div\r\n                          {...cell.getCellProps([\r\n                            {\r\n                              className: cell.column.className,\r\n                            },\r\n                            getCellProps(cell),\r\n                          ])}\r\n                        >\r\n                          {renderCell(cell)}\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell key={row.id}>\r\n                    <Button\r\n                      fullWidth\r\n                      endIcon={<EditIcon></EditIcon>}\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        handleManageItemPress(row.index);\r\n                      }}\r\n                    >\r\n                      Manage Item\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      <InventoryItemsTableFooter\r\n        canPreviousPage={canPreviousPage}\r\n        canNextPage={canNextPage}\r\n        previousPage={previousPage}\r\n        nextPage={nextPage}\r\n        gotoPage={gotoPage}\r\n        pageCount={pageCount}\r\n        pageSize={pageSize}\r\n        pageIndex={pageIndex}\r\n        itemsCount={rows.length}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { InventoryItemsTable } from \"./InventoryItemsTable\";\r\n\r\nconst InventoryItemsTableContainer = ({ items }) => {\r\n  const data = useMemo(() => {\r\n    return items.map((item) => {\r\n      let status = \"\";\r\n      const isDiscounted = item.discount > 0;\r\n      const discountAmount = isDiscounted\r\n        ? item.price * (item.discount / 100)\r\n        : 0;\r\n      // Check if the item is In Stock and if has discount\r\n      if (item.discount > 0 && item.inStock > 0) {\r\n        status = \"Discounted\";\r\n      } else if (item.discount === 0 && item.inStock > 0) {\r\n        status = \"In Stock\";\r\n      } else {\r\n        status = \"Out of Stock\";\r\n      }\r\n\r\n      return {\r\n        col1: item.name,\r\n        col2: item.category,\r\n        col3: item.inStock,\r\n        col4: status,\r\n        col5: Number(item.price).toFixed(2),\r\n        col6: item.discount,\r\n        col7: (item.price - discountAmount).toFixed(2),\r\n      };\r\n    });\r\n  }, [items]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Stock\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Original Price\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Discount\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Total Price\",\r\n        accessor: \"col7\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const mapStateToProps = {\r\n    data,\r\n    columns,\r\n    items,\r\n  };\r\n\r\n  return <InventoryItemsTable {...mapStateToProps} />;\r\n};\r\n\r\nexport default InventoryItemsTableContainer;\r\n","import { CircularProgress, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItems } from \"./inventoryItemsSlice\";\r\nimport InventoryItemsTableContainer from \"./InventoryItemsTable/InventoryItemsTableContainer\";\r\n\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItems = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, items, error } = useSelector(\r\n    (state) => state.inventoryItems\r\n  );\r\n  const { isLoading: isSearching, result } = useSelector(\r\n    (state) => state.inventorySearch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(clearItemsSearch());\r\n    dispatch(fetchItems());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading || isSearching) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <InventoryItemsTableContainer\r\n        items={result.length > 0 ? result : items}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InventoryItems;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\nimport { addItemSale } from \"../inventorySalesSlice\";\r\nimport { searchItems, clearItemsSearch } from \"../../inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addItemSale(selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.category}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{currentDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport InventorySalesTableHeader from \"./InventorySalesTableHeader\";\r\nimport { InventorySalesTableAddItemRow } from \"./InventorySalesTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTable = ({ data, columns }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventorySalesTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <InventorySalesTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { InventorySalesTable } from \"./InventorySalesTable\";\r\nimport moment from \"moment\";\r\n\r\nconst InventorySalesTableContainer = ({ itemSales }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item.name,\r\n        col3: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col4: itemSale.quantity,\r\n        col5: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col8: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    itemSales,\r\n  };\r\n\r\n  return <InventorySalesTable {...stateToProps} />;\r\n};\r\n\r\nexport default InventorySalesTableContainer;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItemSales } from \"./inventorySalesSlice\";\r\nimport InventorySalesTableContainer from \"./InventorySalesTable/InventorySalesTableContainer\";\r\nimport moment from \"moment\";\r\nimport { SalesDatePicker, SalesStats } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySales = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, itemSales, dailySales, metadata, error } = useSelector(\r\n    (state) => state.inventorySales\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n    dispatch(\r\n      fetchItemSales({ salesDate: currentDate, salesDateCateg: \"daily\" })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <>\r\n        <SalesStats metadata={metadata} dailySales={dailySales} />\r\n        <InventorySalesTableContainer itemSales={itemSales} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySales;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport InventoryItems from \"./inventoryItems/InventoryItems\";\r\nimport InventorySales from \"./inventorySales/InventorySales\";\r\n\r\nconst InventoryPage = ({ match, ...restProps }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/items`} component={InventoryItems} />\r\n      <Route path={`${match.url}/sales`} component={InventorySales} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n} from \"../../components/modals\";\r\n\r\nconst modalComponents = {\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n};\r\n\r\nconst InfoModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.infoModals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default InfoModalManager;\r\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ModalManager from \"../features/modals/ModalManager\";\r\n\r\nimport PrivateLayout from \"../components/PrivateLayout\";\r\nimport LoginPage from \"../features/auth/login/loginPage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { checkAuth } from \"../features/auth/authSlice\";\r\n\r\nimport HomePage from \"../features/home/HomePage\";\r\nimport ClientsPage from \"../features/clients/ClientsPage\";\r\nimport InventoryPage from \"../features/inventory/InventoryPage\";\r\nimport InfoModalManager from \"../features/modals/InfoModalManager\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    padding: 0,\r\n    margin: 0,\r\n  }, // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  toastContainer: {\r\n    zIndex: \"1000000\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(checkAuth());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/auth/login\" component={LoginPage} />\r\n            <PrivateLayout path=\"/home\" component={HomePage} />\r\n            <PrivateLayout path=\"/clients\" component={ClientsPage} />\r\n            <PrivateLayout path=\"/inventory\" component={InventoryPage} />\r\n            <Redirect from=\"/\" to=\"/home/dashboard\" />\r\n          </Switch>\r\n          <ModalManager />\r\n          <InfoModalManager />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  };\r\n  return renderContent();\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport inventoryItemsReducer from \"../features/inventory/inventoryItems/inventoryItemsSlice\";\r\nimport inventorySalesReducer from \"../features/inventory/inventorySales/inventorySalesSlice\";\r\nimport inventorySearchReducer from \"../features/inventory/inventorySearchSlice\";\r\nimport homeSalesStats from \"../features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice\";\r\nimport modalsReducer from \"../features/modals/modalSlice\";\r\nimport infoModalsReducer from \"../features/modals/infoModalSlice\";\r\nimport authReducer from \"../features/auth/authSlice\";\r\nimport drawerReducer from \"../features/drawer/drawerSlice\";\r\nimport notificationsReducer from \"../features/notifications/notificationsSlice\";\r\nimport clientsReducer from \"../features/clients/clientsSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  inventoryItems: inventoryItemsReducer,\r\n  inventorySales: inventorySalesReducer,\r\n  inventorySearch: inventorySearchReducer,\r\n  homeSalesStats: homeSalesStats,\r\n  modals: modalsReducer,\r\n  infoModals: infoModalsReducer,\r\n  auth: authReducer,\r\n  drawer: drawerReducer,\r\n  clients: clientsReducer,\r\n  notifications: notificationsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot){\r\n    module.hot.accept(\"./rootReducer\", () => {\r\n        const newRootReducer = require('./rootReducer');\r\n        store.replaceReducer(newRootReducer);\r\n    })\r\n}\r\n\r\nexport default store;","import { CssBaseline, StylesProvider, ThemeProvider } from \"@material-ui/core\";\r\nimport { LocalizationProvider } from \"@material-ui/lab\";\r\nimport AdapterMoment from \"@material-ui/lab/AdapterMoment\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./app/App\";\r\nimport store from \"./app/store\";\r\nimport { darkTheme } from \"./consts\";\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <CssBaseline />\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </LocalizationProvider>\r\n      </ThemeProvider>\r\n    </StylesProvider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrender();\r\n"],"sourceRoot":""}