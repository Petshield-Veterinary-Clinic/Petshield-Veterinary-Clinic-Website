{"version":3,"sources":["features/modals/modalSlice.js","features/modals/infoModalSlice.js","components/modals/ErrorModal.jsx","components/modals/LoadingModal.jsx","components/modals/SuccessModal.jsx","consts/config.js","consts/theme.js","consts/index.js","api/axios.js","api/auth.js","features/auth/authSlice.js","components/modals/ConfirmationModal.jsx","app/history.js","components/modals/LogoutModal.jsx","api/clients.js","features/clients/clientsSlice.js","features/clients/clientsModals/AddClientModal/AddClientForm.jsx","features/clients/clientsModals/AddClientModal/AddClientModal.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableHeader.jsx","api/inventory.js","features/inventory/inventorySearchSlice.js","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableAddItemRow.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTable.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableContainer.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsModal.jsx","features/clients/clientsModals/VeterinarianNoteModal/VeterinarianNoteModal.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentForm.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentModal.jsx","features/clients/clientsModals/ClientAppointmentsModal/ClientAppointmentsModal.jsx","features/inventory/inventoryItems/inventoryItemsSlice.js","api/item_category.js","features/itemCategory/itemCategorySlice.js","features/inventory/inventoryModals/InventoryAddItemModal.jsx","features/inventory/inventoryModals/InventoryManageItemModal.jsx","features/inventory/inventoryModals/InventoryModifyItemModal.jsx","features/inventory/inventoryModals/InventoryDiscountItemModal.jsx","features/inventory/inventorySales/inventorySalesSlice.js","features/modals/ModalManager.jsx","features/inventory/inventoryModals/InventoryAddItemSaleConfirmationModal.jsx","features/inventory/inventoryModals/InventoryDeleteItemSaleConfirmationModal.jsx","features/drawer/drawerSlice.js","api/notification.js","features/notifications/notificationsSlice.js","features/notifications/NotificationItem.jsx","features/notifications/NotificationsList.jsx","features/notifications/Notifications.jsx","components/CustomAppBar.jsx","assets/house.svg","assets/all_clients.svg","assets/all_items.svg","assets/appointments.svg","assets/clients.svg","assets/dashboard.svg","assets/inventory.svg","assets/item_transactions.svg","assets/payments.svg","assets/pet_queue.svg","components/CustomDrawer.jsx","components/PrivateLayout.jsx","features/auth/login/loginForm.jsx","assets/login_background.png","assets/logo.png","features/auth/login/loginPage.jsx","api/stats.js","features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice.js","features/home/homeDashboard/homeSalesStats/HomeSalesStatsDatePicker.jsx","features/home/homeDashboard/homeSalesStats/components/HomeSalesStatsTooltip.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStatsGraph.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStats.jsx","features/home/homeDashboard/HomeDashboard.jsx","assets/consultations.svg","assets/rx_icon.png","features/home/homePetQueues/ConsultationCard.jsx","features/home/homePetQueues/ConsultationsCard.jsx","assets/admitted.svg","features/home/homePetQueues/AdmittanceCard.jsx","features/home/homePetQueues/AdmittancesCard.jsx","features/home/homePetQueues/HomePetQueues.jsx","features/home/HomePage.jsx","features/clients/clientsAllClients/ClientCard.jsx","features/clients/clientsAllClients/ClientsAllClientsList.jsx","features/clients/clientsAllClients/ClientsAllClientListHeader.jsx","features/clients/clientsAllClients/ClientsAllClients.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentTooltip.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerMonthCell.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointment.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsScheduler.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer.jsx","features/clients/clientsAppointments/ClientsAppointments.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableHeader.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableAddItemRow.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTable.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableContainer.jsx","components/sales/SalesCard.jsx","components/sales/SalesDatePicker.jsx","components/sales/SalesStats.jsx","features/clients/clientsPayments/ClientPayments.jsx","features/clients/ClientsPage.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableFooter.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableHeader.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTable.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableContainer.jsx","features/inventory/inventoryItems/InventoryItems.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableHeader.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableAddItemRow.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTable.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableContainer.jsx","features/inventory/inventorySales/InventorySales.jsx","features/inventory/InventoryPage.jsx","features/modals/InfoModalManager.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableHeader.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableAddItemRow.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTable.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableContainer.jsx","features/admin/ItemCategories/ItemCategories.jsx","features/admin/AdminPage.jsx","app/App.jsx","app/rootReducer.js","app/store.js","index.jsx"],"names":["modalsSlice","createSlice","name","initialState","modalType","modalProps","reducers","showModal","state","action","payload","hideModal","_","actions","infoModals","showInfoModal","hideInfoModal","ErrorModal","isVisible","message","duration","isInfoModal","useState","open","setOpen","dispatch","useDispatch","Dialog","onClose","TransitionProps","onExited","onEnter","setTimeout","DialogTitle","DialogContent","DialogContentText","useStyles","makeStyles","theme","loadingIndicator","display","justifyContent","alignItems","padding","spacing","LoadingModal","classes","className","CircularProgress","color","SuccessModal","config","API_BASE_URL","WS_BASE_URL","WS_TIMEOUT","darkTheme","responsiveFontSizes","createMuiTheme","palette","mode","primary","main","secondary","components","MuiMenu","styleOverrides","MuiCard","root","backgroundColor","MuiPaper","MuiTableCell","textAlign","disableAlign","drawerWidth","appointmentVaccineTypes","appointmentVaccineReoccuranceTypes","appointmentFollowUpReoccuranceTypes","appointmentFollowUpTypes","instance","axios","create","baseURL","headers","setToken","token","defaults","common","Authorization","login","credentials","a","post","response","data","Error","error","loginWithToken","get","authSlice","user","isLoading","loginStart","loginSuccess","authToken","localStorage","setItem","loginFailure","logoutStart","logoutSuccess","logoutFailure","checkAuthStart","checkAuthSuccess","checkAuthFailure","ConfirmationModal","title","handleNegativePressed","handlePositivePressed","DialogActions","Button","variant","onClick","createBrowserHistory","LogoutModal","clear","history","replace","addClient","client","branchName","updateClient","patch","ID","addClientPayment","clientId","itemId","quantity","salesDate","salesDateCateg","fetchClientPaymentHistory","fetchClientAppointments","removeAppointment","appointmentId","delete","addAppointment","appointment","updateAppointment","handleOnFailure","clientsSlice","clients","paymentHistory","appointments","clientAppointments","clientPayments","isClientsLoading","isPaymentsLoading","isAppointmentsLoading","isClientSearchingLoading","fetchClientsStart","fetchClientsSuccess","newClients","forEach","fetchClientsError","addClientStart","addClientSuccess","addClientError","updateClientStart","updateClientSuccess","updateClientsError","addClientPaymentStart","addClientPaymentSuccess","addClientPaymentError","fetchClientPaymentHistoryStart","fetchClientPaymentHistorySuccess","fetchClientPaymentHistoryError","fetchAllClientPaymentsStart","fetchAllClientPaymentsSuccess","fetchAllClientPaymentsError","addAppointmentStart","addAppointmentSuccess","addAppointmentError","updateAppointmentStart","updateAppointmentSuccess","updateAppointmentError","removeAppointmentStart","removeAppointmentSuccess","removeAppointmentError","fetchAppointmentsStart","fetchAppointmentsSuccess","fetchAppointmentsError","fetchClientAppointmentsStart","fetchClientAppointmentsSuccess","fetchClientAppointmentsError","updateClientError","fetchClients","getState","auth","getItem","WebSocket","onmessage","e","JSON","parse","metadata","apiAddClientPayment","newPayment","fetchAllClientPayments","AddClientForm","onSubmit","useForm","handleSubmit","register","errors","form","id","TextField","field","label","inputRef","required","clientName","address","fieldGroup","type","InputProps","startAdornment","InputAdornment","position","pattern","contactNumber","petName","petSpecies","petBreed","flexDirection","marginBottom","gridTemplate","gridGap","paddingBottom","breakpoints","up","width","itemCount","ClientTransactionsTableHeader","toggleAddItemSaleRow","startIcon","getItemsWithSearchTerm","searchTerm","addItem","item","parsedItem","price","Number","incentive","modifyItem","incentiveAmount","incentiveRate","discount","deleteItem","discountItem","addItemSale","itemQuantity","deleteItemSale","inventorySearchSlice","result","searchItemsStart","searchItemsSuccess","searchItemsFailure","clearItemsSearch","searchItems","items","height","quantityCell","buttonRows","gridTemplateColumns","submitButton","borderColor","cancelButton","ClientTransactionsTableAddItemRow","showAddItemSaleRow","selectedItem","setSelectedItem","setQuantity","currentDate","moment","Date","now","format","useSelector","inventorySearch","handleOnQuantityChange","value","target","parseInt","inStock","resetValues","onSubmitPressed","onCancelPressed","debouncedSearch","debounce","handleOnSearchTermChange","TableRow","TableCell","Typography","Autocomplete","loading","options","filter","getOptionLabel","option","renderInput","params","size","onChange","endAdornment","reason","sales","netSales","isIncentiveFixed","toFixed","Object","keys","length","fullWidth","salesCategory","Check","Cancel","renderItemDetails","overflow","showItemCountButtons","showItemCountField","tableHeader","pagination","paddingTop","border","borderRadius","fontWeight","itemDiscounted","blue","outOfStock","deleteButton","ClientTransactionsTable","columns","page","setPage","rowsPerPage","setRowsPerPage","useTable","useSortBy","getTableProps","headerGroups","prepareRow","rows","renderCell","cell","render","TableContainer","Table","stickyHeader","TableHead","map","headerGroup","header","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","fontSize","TableBody","container","slice","row","getRowProps","cells","index","getCellProps","itemIndex","Delete","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","event","ClientTransactionsTableContainer","stateToProps","useMemo","itemSale","col1","CreatedAt","col2","col3","col4","col5","col6","col7","incentives","col8","col9","category","Header","accessor","content","gap","AddAppointmentForm","startDate","isVaccine","clientIndex","defaultClient","pet","key","newClientName","control","defaultValue","rules","restProps","getOptionSelected","helperText","val","toDate","props","DatePicker","allowSameDateSelection","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","reoccurance","multiline","hasAppointment","white","dark","selected","CustomDay","date","selectedDate","_selectedDates","PickersDayComponentProps","adjustedDate","tz","undefined","find","isSame","isSelected","PickersDay","classnames","handleError","inventorySlice","itemSales","fetchItemsStart","fetchItemsSuccess","fetchItemsFailure","addItemStart","__","addItemSuccess","addItemFailure","modifyItemStart","modifyItemSuccess","newItem","modifyItemFailure","discountItemStart","discountItemSuccess","discountItemFailure","deleteItemStart","deleteItemSuccess","deleteItemFailure","getItemCategories","addItemCategory","itemCategoryDetails","deleteItemCategory","itemCategoryId","itemCategorySlice","categories","fetchItemCategoriesStart","fetchItemCategoriesSuccess","fetchItemCategoriesFailure","addItemCategoryStart","addItemCategorySuccess","addItemCategoryFailure","deleteItemCategoryStart","deleteItemCategorySuccess","deleteItemCategoryFailure","fetchItemCategories","apiGetItemCategories","addItemForm","addItemFormField","margin","flexGrow","incentiveFieldsWrapper","AddItemForm","setIncentiveFixed","itemCategories","defaultValues","remarks","noValidate","min","as","onFocus","FormControlLabel","Checkbox","checked","disabled","max","deleteBtn","ModifyItemForm","itemDetails","DiscountItemForm","autoFocus","handleOnError","inventorySalesSlice","dailySales","fetchItemSalesStart","fetchItemSalesSuccess","fetchItemSalesError","addItemSaleStart","addItemSaleSuccess","addItemSaleFailure","deleteItemSaleStart","deleteItemSaleSuccess","deleteItemSaleFailure","fetchItemSales","inventorySales","addItemSaleToApi","newItemSale","modalComponents","ADD_ITEM_MODAL","handleOnClose","addItemToApi","ADD_SALE_CONFIRMATION_MODAL","DELETE_SALE_CONFIRMATION_MODAL","deleteItemSaleFromApi","deletedItemSale","MANAGE_ITEM_MODAL","deleteItemFromApi","MODIFY_ITEM_MODAL","updatedItem","modifyItemFromApi","DISCOUNT_ITEM_MODAL","discountItemFromApi","LOADING_MODAL","ERROR_MODAL","SUCCESS_MODAL","LOGOUT_MODAL","ADD_CLIENT_MODAL","align","parsedData","species","apiAddClient","newClient","ADD_APPOINTMENT_MODAL","setIsVaccine","useEffect","formattedDate","toISOString","apiAddAppointment","newAppointment","CLIENT_TRANSACTIONS_MODAL","apiFetchClientPaymentHistory","fullScreen","CLIENT_APPOINTMENTS_MODAL","setSelectedDate","useHistory","handleOnDateChanged","push","apiFetchClientAppointments","style","LocalizationProvider","dateAdapter","AdapterDateFns","DayPicker","disableHighlightToday","renderDay","allowKeyboardControl","CLIENT_VETERINARIAN_NOTE_MODAL","veterinarianNote","setVeterinarianNote","apiUpdateClient","updatedClient","ModalManager","modals","Modal","drawerSlice","isOpen","toggleDrawer","clearNotifications","updateNotification","notificationId","notificationsSlice","notifications","fetchNotificationsStart","fetchNotificationsSuccess","notificationsMap","n","i","fetchNotificationsError","clearNotificationsStart","clearNotificationsSuccess","clearNotificationsError","updateNotificationStart","updateNotificationSuccess","updateNotificationError","seen","opacity","NotificationItem","notif","onNotificationPressed","setSeen","ListItem","button","Divider","maxHeight","NotificationsList","onClearNotificationsPressed","List","k","Notifications","anchorEl","setAnchorEl","Boolean","handleOnNotificationPressed","notification","apiUpdateNotifications","handleOnClearNotificationsPressed","apiClearNotifications","IconButton","currentTarget","Badge","badgeContent","Menu","keepMounted","appBar","marginLeft","menuButton","marginRight","grow","appbarTitles","dashboard","payments","CustomAppBar","appbarTitle","setAppbarTitle","location","useLocation","isMenuOpen","splittedPathname","pathname","split","handleMenuClose","handleOnSignoutPressed","AppBar","Toolbar","aria-label","edge","AccountCircle","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","toolbar","mixins","drawer","flexShrink","drawerPaper","nested","paddingLeft","drawerIcon","fill","CustomDrawer","home","inventory","admin","expandedItems","setExpandedItems","menuItems","handleOnClick","icon","HomeIcon","subItems","DashboardIcon","path","ClientsIcon","AllClientsIcon","PaymentsIcon","AppointmentsIcon","InventoryIcon","AllItemsIcon","ItemTransactionIcon","mIcon","Settings","Category","Fragment","ListItemIcon","src","beforeInjection","svg","classList","add","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","subItem","Link","to","handleDrawerToggle","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","smDown","PrivateLayout","Component","textField","LoginForm","showPassword","setShowPassword","username","password","background","top","left","backgroundImage","bg","backgroundPosition","backgroundSize","backgroundRepeat","maxWidth","placeContent","zIndex","centerItem","placeSelf","logo","LoginPage","loginUser","Paper","elevation","alt","getItemSalesStats","homeSalesStatsSlice","stats","fetchItemSalesStatsStart","fetchItemSalesStatsSuccess","fetchItemSalesStatsFailure","HomeSalesStatsDatePicker","setSalesDateCateg","setSalesDate","getItemSalesStatesFromApi","fetchItemSalesStats","views","monthly","yearly","HomeSalesStatsToolip","active","Card","filteredSales","renderData","tooltip","HomeSalesStatsGraph","homeSalesStats","lineData","setLineData","pieData","setPieData","pieColors","Grooming","default","pieMap","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","PieChart","Pie","graphWrapper","HomeSalesStats","toUpperCase","HomeDashboard","consultationInfoContainer","consultationButtonsContainer","consultationButton","petAvatar","owner","finish","rxIcon","ConsultationCard","Avatar","ButtonBase","PostAdd","Person","LibraryBooksOutlined","classNames","Event","RxIcon","subTitle","consultationList","marginTop","ConsultationsCard","CardContent","ConsultationsIcon","AdmittanceCard","admittancesList","AdmittancesCard","AdmittedIcon","HomePetQueues","HomePage","match","exact","url","infoContainer","buttonsContainer","clientMoreDetails","ClientCard","lastVisit","nextVisit","AccountBalance","EventNote","toString","email","minHeight","overflowY","overflowX","ClientsAllClientsList","ClientsAllClientsHeader","fuse","setClientResultsSearch","Search","results","search","handleSearchClientChanged","ClientsAllClients","clientsSearchResult","setClientsSearchResult","includeScore","Fuse","textCenter","commandButton","ClientAppointmentTooltipHeader","children","appointmentData","setIsEditing","isEditing","setAppointmentVisible","apiRemoveAppointment","Edit","ClientAppointmentTooltipContent","onAppointmentMetaChanged","Content","veterinarianNotes","apiUpdateAppointment","newAppointments","readOnly","MonthCell","TimeTableCell","String","ClientAppointment","ref","React","createRef","this","onAppointmentMetaChange","notificationState","setNotificationState","Array","isArray","current","parentElement","Appointment","appointmentWrapper","flexWrap","ClientAppointmentsScheduler","appointmentVisible","appointmentMeta","setAppointmentMeta","handleOnAppointmentMetaChanged","tooltipHeader","connectProps","tooltipContent","timeTableCellComponent","appointmentComponent","headerComponent","contentComponent","visible","onVisibilityChange","ClientAppointmentsSchedulerContainer","ap","endDate","ClientsAppointments","InventorySalesTableHeader","setSelectedClient","ClientPaymentsTableAddItemRow","selectedClient","ClientPaymentsTable","ClientPaymentsTableHeader","ClientPaymentsTableContainer","col10","SalesCard","picker","SalesDatePicker","onSalesDateChanged","onSalesDateCategChanged","datePickerViews","daily","selectedSalesDateCateg","setSelectedSalesDateCateg","selectedSalesDate","setSelectedSalesDate","handleOnSalesDateChanged","SalesStats","computedSales","setComputedSales","computedSalesBloodTest","setComputedSalesBloodTest","computedSalesGrooming","setComputedSalesGrooming","computedSalesVetSales","setComputedSalesVetSales","computedSalesStoreSales","setComputedSalesStoreSales","salesTitle","setSalesTitle","computeSales","useCallback","totalSales","getSalesTitle","substring","ClientPayments","ClientsPage","InventoryItemsTableFooter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","pageCount","pageSize","pageIndex","itemsCount","currPageItemCount","renderCurrPageItemCount","alignItem","InventoryItemsTableHeader","setPageSize","handleSearchItemChanged","addItemButton","endIcon","InventoryItemsTable","useFilters","usePagination","setFilter","column","discountAmount","values","cellInfo","InventoryItemsTableContainer","mapStateToProps","status","InventoryItems","inventoryItems","isSearching","InventorySalesTableAddItemRow","InventorySalesTable","InventorySalesTableContainer","InventorySales","InventoryPage","InfoModalManager","ItemCategoriesTableHeader","toggleAddItemCategoryRow","showAddItemCategoryRow","ItemCategoriesTableAddItemRow","reset","categ","toLowerCase","apiAddItemCategory","ItemCategoriesTable","onItemCategoryDeleteButtonPressed","itemCategory","apiDeleteItemCategory","ItemCategoriesTableContainer","ItemCategories","AdminPage","toastContainer","App","currentToken","from","rootReducer","combineReducers","inventoryItemsReducer","inventorySalesReducer","inventorySearchReducer","modalsReducer","infoModalsReducer","authReducer","drawerReducer","clientsReducer","notificationsReducer","itemCategoriesReducer","store","configureStore","reducer","ReactDOM","StylesProvider","injectFirst","ThemeProvider","AdapterMoment","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b80927d5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nlet initialState = {\r\n    modalType : null,\r\n    modalProps: {},\r\n}\r\n\r\nconst modalsSlice = createSlice({\r\n    name: \"modals\",\r\n    initialState,\r\n    reducers: {\r\n        showModal(state, action) {\r\n            state.modalType = action.payload.modalType;\r\n            state.modalProps = action.payload.modalProps;\r\n        },\r\n        hideModal(state, _) {\r\n            state.modalType = '';\r\n            state.modalProps = {};\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default modalsSlice.reducer;\r\n\r\nexport const {showModal, hideModal} = modalsSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n  modalType: null,\r\n  modalProps: {},\r\n};\r\n\r\nconst infoModals = createSlice({\r\n  name: \"infoModal\",\r\n  initialState,\r\n  reducers: {\r\n    showInfoModal(state, action) {\r\n      state.modalType = action.payload.modalType;\r\n      state.modalProps = action.payload.modalProps;\r\n    },\r\n    hideInfoModal(state, _) {\r\n      state.modalType = \"\";\r\n      state.modalProps = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport default infoModals.reducer;\r\n\r\nexport const { showInfoModal, hideInfoModal } = infoModals.actions;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nimport { hideInfoModal } from \"../../features/modals/infoModalSlice\";\r\n\r\nexport const ErrorModal = ({ isVisible, message, duration, isInfoModal }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    if (isInfoModal) {\r\n      dispatch(hideInfoModal());\r\n    } else {\r\n      dispatch(hideModal());\r\n    }\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 2000\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited, onEnter: handleOnEnter }}\r\n    >\r\n      <DialogTitle>Error!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CircularProgress, Dialog, DialogContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const LoadingModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogContent className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nexport const SuccessModal = ({ isVisible, message, duration }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 800\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited, onEnter: handleOnEnter }}\r\n    >\r\n      <DialogTitle>Success!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","const prod = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-prod.herokuapp.com\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-prod.herokuapp.com`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst dev = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-dev.herokuapp.com\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-dev.herokuapp.com`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst localDev = {\r\n  API_BASE_URL: \"http://localhost:8000\",\r\n  WS_BASE_URL: `ws://localhost:8000`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nexport const darkTheme = responsiveFontSizes(\r\n  createMuiTheme({\r\n    palette: {\r\n      mode: \"dark\",\r\n      primary: {\r\n        main: \"#1e88e5\",\r\n      },\r\n      secondary: {\r\n        main: \"#26a69a\",\r\n      },\r\n    },\r\n    components: {\r\n      MuiMenu: {\r\n        styleOverrides: {\r\n          padding: \"1em\",\r\n        },\r\n      },\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n      MuiTableCell: {\r\n        styleOverrides: {\r\n          root: {\r\n            textAlign: \"center\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  {\r\n    disableAlign: true,\r\n  }\r\n);\r\n","export const drawerWidth = 240;\r\nexport const itemCategories = [\r\n  \"Store Sales\",\r\n  \"Vet Sales\",\r\n  \"Service\",\r\n  \"Grooming\",\r\n  \"Blood Test\",\r\n  \"Confinement/Boarding\",\r\n];\r\n\r\n/**\r\n-Deworming\r\n-5 in 1\r\n-6 in 1\r\n-8 in 1\r\n-Kennel Cough\r\n-ProHeart\r\n-4 in 1\r\n-Anti-Rabies\r\n- Canglob P\r\n-Canglob D\r\n\r\n */\r\n\r\nexport const appointmentVaccineTypes = [\r\n  \"Deworming\",\r\n  \"5 in 1\",\r\n  \"6 in 1\",\r\n  \"8 in 1\",\r\n  \"Kennel Cough\",\r\n  \"ProHeart\",\r\n  \"4 in 1\",\r\n  \"Anti-Rabies\",\r\n  \"Canglob P\",\r\n  \"Canglob D\",\r\n];\r\n\r\nexport const appointmentVaccineReoccuranceTypes = [\r\n  \"1 Weeks\",\r\n  \"2 Weeks\",\r\n  \"1 Year\",\r\n];\r\n\r\nexport const appointmentFollowUpReoccuranceTypes = [\r\n  \"3 Days\",\r\n  \"7 Days\",\r\n  \"14 Days\",\r\n  \"30 Days\",\r\n];\r\n\r\nexport const appointmentFollowUpTypes = [\r\n  \"Check-Up\",\r\n  \"Long Term Medication\",\r\n  \"Post Surgery\",\r\n  \"Screening\",\r\n];\r\n\r\nexport * from \"./config\";\r\nexport * from \"./theme\";\r\n","import axios from \"axios\";\r\nimport { config } from \"../consts\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: config.API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const setToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default instance;\r\n","import axios from \"./axios\";\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`/auth/login`, credentials);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n\r\nexport const loginWithToken = async () => {\r\n  const response = await axios.get(`/users/token`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login as loginUser, loginWithToken } from \"../../api/auth\";\r\nimport { setToken } from \"../../api/axios\";\r\nimport { showModal } from \"../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  user: {},\r\n  token: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    loginStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    loginSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.authToken;\r\n      setToken(action.payload.authToken);\r\n      localStorage.setItem(\"token\", action.payload.authToken);\r\n    },\r\n    loginFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logoutStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    logoutSuccess(state, _) {\r\n      state.user = {};\r\n      state.token = null;\r\n      state.isLoading = false;\r\n    },\r\n    logoutFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    checkAuthStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    checkAuthSuccess(state, action) {\r\n      state.user = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    checkAuthFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  checkAuthStart,\r\n  checkAuthSuccess,\r\n  checkAuthFailure,\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logoutFailure,\r\n  logoutStart,\r\n  logoutSuccess,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const logIn = (credentials) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginStart());\r\n    const user = await loginUser(credentials);\r\n    dispatch(loginSuccess(user));\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.message));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n  const currentToken = localStorage.getItem(\"token\");\r\n  setToken(currentToken);\r\n  try {\r\n    dispatch(checkAuthStart());\r\n    const user = await loginWithToken(currentToken);\r\n\r\n    dispatch(checkAuthSuccess(user));\r\n  } catch (error) {\r\n    dispatch(checkAuthFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.clear();\r\n  try {\r\n    dispatch(logoutStart());\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutFailure(error));\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nconst ConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  handleNegativePressed,\r\n  handlePositivePressed,\r\n}) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"text\" onClick={handleNegativePressed}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"text\" onClick={handlePositivePressed}>\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nimport { logout } from \"../../features/auth/authSlice\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport history from \"../../app/history\";\r\n\r\nexport const LogoutModal = ({ isVisible, title, message }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(logout());\r\n    history.replace(\"/auth/login\");\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LogoutModal;\r\n","import axios from \"./axios\";\r\n\r\nexport const addClient = async (client, branchName) => {\r\n  const response = await axios.post(`/clients/${branchName}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateClient = async (client) => {\r\n  const response = await axios.patch(`/clients/${client.ID}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addClientPayment = async (\r\n  clientId,\r\n  itemId,\r\n  quantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/payments/${itemId}/${quantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = async (clientId) => {\r\n  const response = await axios.get(`/clients/${clientId}/payments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = async ({\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg,\r\n}) => {\r\n  const response = await axios.get(\r\n    `/clients/${branchName}/all-payments?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientAppointments = async ({ clientId }) => {\r\n  const response = await axios.get(`/clients/${clientId}/appointments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const removeAppointment = async ({ appointmentId, branchName }) => {\r\n  const response = await axios.delete(\r\n    `/clients/${branchName}/appointments/${appointmentId}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addAppointment = async ({ clientId, appointment }) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/appointments`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateAppointment = async ({ branchName, appointment }) => {\r\n  const response = await axios.patch(\r\n    `/clients/${branchName}/appointments/${appointment.ID}`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\nimport {\r\n  addClient as apiAddClient,\r\n  addClientPayment as apiAddClientPayment,\r\n  fetchClientPaymentHistory as apiFetchClientPaymentHistory,\r\n  updateClient as apiUpdateClient,\r\n  addAppointment as apiAddAppointment,\r\n  updateAppointment as apiUpdateAppointment,\r\n  fetchClientAppointments as apiFetchClientAppointments,\r\n  removeAppointment as apiRemoveAppointment,\r\n} from \"../../api/clients\";\r\nimport { showInfoModal, hideInfoModal } from \"../modals/infoModalSlice\";\r\n\r\nconst initialState = {\r\n  clients: {},\r\n  paymentHistory: [],\r\n  appointments: [],\r\n  clientAppointments: [],\r\n  clientPayments: {},\r\n  isClientsLoading: false,\r\n  isPaymentsLoading: false,\r\n  isAppointmentsLoading: false,\r\n  isClientSearchingLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleOnFailure = (state, action) => {\r\n  state.error = action.payload;\r\n};\r\n\r\nconst clientsSlice = createSlice({\r\n  name: \"clientsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchClientsStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    fetchClientsSuccess(state, action) {\r\n      state.isClientsLoading = false;\r\n      let newClients = {};\r\n      action.payload.forEach((client) => {\r\n        newClients[client.ID] = client;\r\n      });\r\n      state.clients = newClients;\r\n    },\r\n    fetchClientsError: handleOnFailure,\r\n    addClientStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    addClientSuccess(state) {\r\n      state.isClientsLoading = false;\r\n      state.error = null;\r\n    },\r\n    addClientError: handleOnFailure,\r\n    updateClientStart(state) {\r\n      state.error = null;\r\n    },\r\n    updateClientSuccess(state, action) {\r\n      state.clients[action.payload.ID] = action.payload;\r\n      state.error = null;\r\n    },\r\n    updateClientsError: handleOnFailure,\r\n    addClientPaymentStart() {},\r\n    addClientPaymentSuccess(state, action) {\r\n      state.paymentHistory = [action.payload, ...state.paymentHistory];\r\n      state.error = false;\r\n    },\r\n    addClientPaymentError: handleOnFailure,\r\n    fetchClientPaymentHistoryStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchClientPaymentHistorySuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.paymentHistory = action.payload;\r\n      state.error = false;\r\n    },\r\n    fetchClientPaymentHistoryError: handleOnFailure,\r\n    fetchAllClientPaymentsStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchAllClientPaymentsSuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.clientPayments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAllClientPaymentsError: handleOnFailure,\r\n    addAppointmentStart(state) {\r\n      state.error = null;\r\n    },\r\n    addAppointmentSuccess(state, action) {},\r\n    addAppointmentError: handleOnFailure,\r\n    updateAppointmentStart(state) {},\r\n    updateAppointmentSuccess(state, action) {\r\n      state.appointments = [...action.payload];\r\n      state.error = null;\r\n    },\r\n    updateAppointmentError: handleOnFailure,\r\n    removeAppointmentStart() {},\r\n    removeAppointmentSuccess(state, action) {\r\n      state.appointments = action.payload;\r\n    },\r\n    removeAppointmentError: handleOnFailure,\r\n    fetchAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.appointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsError: handleOnFailure,\r\n    fetchClientAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.clientAppointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsError: handleOnFailure,\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchClientsSuccess,\r\n  fetchClientsError,\r\n  fetchClientsStart,\r\n  addClientStart,\r\n  addClientError,\r\n  addClientSuccess,\r\n  updateClientStart,\r\n  updateClientSuccess,\r\n  updateClientError,\r\n  addClientPaymentStart,\r\n  addClientPaymentSuccess,\r\n  addClientPaymentError,\r\n  fetchClientPaymentHistoryStart,\r\n  fetchClientPaymentHistorySuccess,\r\n  fetchClientPaymentHistoryError,\r\n  fetchAllClientPaymentsStart,\r\n  fetchAllClientPaymentsSuccess,\r\n  fetchAllClientPaymentsError,\r\n  addAppointmentStart,\r\n  addAppointmentSuccess,\r\n  addAppointmentError,\r\n\r\n  fetchAppointmentsError,\r\n  fetchAppointmentsStart,\r\n  fetchAppointmentsSuccess,\r\n  fetchClientAppointmentsError,\r\n  fetchClientAppointmentsStart,\r\n  fetchClientAppointmentsSuccess,\r\n  updateAppointmentError,\r\n  updateAppointmentStart,\r\n  updateAppointmentSuccess,\r\n  removeAppointmentError,\r\n  removeAppointmentSuccess,\r\n  removeAppointmentStart,\r\n} = clientsSlice.actions;\r\n\r\nexport default clientsSlice.reducer;\r\n\r\nexport const fetchClients = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchClientsStart());\r\n\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchClientsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchClientsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addClient = (client) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newClient = await apiAddClient(client, user.branchName);\r\n    dispatch(addClientSuccess(newClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(addClientError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateClient = (client) => async (dispatch) => {\r\n  try {\r\n    dispatch(updateClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const updatedClient = await apiUpdateClient(client);\r\n    dispatch(updateClientSuccess(updatedClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(updateClientError(error.message));\r\n  }\r\n};\r\nexport const addClientPayment = (clientId, itemId, quantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { metadata } = getState().clients.clientPayments;\r\n  try {\r\n    dispatch(addClientPaymentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newPayment = await apiAddClientPayment(\r\n      clientId,\r\n      itemId,\r\n      quantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(hideInfoModal());\r\n    dispatch(addClientPaymentSuccess(newPayment));\r\n  } catch (error) {\r\n    dispatch(addClientPaymentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = (clientId) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientPaymentHistoryStart());\r\n\r\n    const clientPayments = await apiFetchClientPaymentHistory(clientId);\r\n    dispatch(fetchClientPaymentHistorySuccess(clientPayments));\r\n  } catch (error) {\r\n    dispatch(fetchClientPaymentHistoryError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAllClientPaymentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/all-payments?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAllClientPaymentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAllClientPaymentsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addAppointment = ({ clientId, appointment }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(addAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    // Adjust the date of the appoinment\r\n\r\n    const newAppointment = await apiAddAppointment({ clientId, appointment });\r\n    dispatch(hideInfoModal());\r\n    dispatch(addAppointmentSuccess(newAppointment));\r\n  } catch (error) {\r\n    dispatch(addAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeAppointment = ({ appointmentId }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(removeAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const appointments = await apiRemoveAppointment({\r\n      appointmentId,\r\n      branchName: user.branchName,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(removeAppointmentSuccess(appointments));\r\n  } catch (error) {\r\n    dispatch(removeAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateAppointment = ({ appointment }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(updateAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newAppointments = await apiUpdateAppointment({\r\n      branchName: user.branchName,\r\n      appointment,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(updateAppointmentSuccess(newAppointments));\r\n  } catch (error) {\r\n    dispatch(updateAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAppointments = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAppointmentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/appointments?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAppointmentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAppointmentsError(error.message));\r\n  }\r\n};\r\nexport const fetchClientAppointments = ({ clientId }) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientAppointmentsStart());\r\n    const result = await apiFetchClientAppointments({ clientId });\r\n    dispatch(fetchClientAppointmentsSuccess(result));\r\n  } catch (error) {\r\n    dispatch(fetchClientAppointmentsError(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\nimport { MdEmail, MdPets } from \"react-icons/md\";\r\n\r\nexport const AddClientForm = ({ classes, onSubmit }) => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  return (\r\n    <form\r\n      className={classes.form}\r\n      id=\"addClientForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Full Name\"\r\n        name=\"clientName\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.clientName}\r\n      />\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.address}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MdEmail />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({})}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Contact Number\"\r\n          name=\"contactNumber\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <FaPhoneAlt />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({\r\n            pattern: /((^(\\+)(\\d){12}$)|(^\\d{11}$))/,\r\n          })}\r\n          error={!!errors.contactNumber}\r\n        />\r\n      </div>\r\n      <br></br>\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Pet Name\"\r\n        name=\"petName\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <MdPets />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.petName}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Species\"\r\n          name=\"petSpecies\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petSpecies}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Breed\"\r\n          name=\"petBreed\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petBreed}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { addClient } from \"../../clientsSlice\";\r\nimport { AddClientForm } from \"./AddClientForm\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    form: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    field: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    fieldGroup: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddClientModal = ({ isVisible }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnSubmit = (data) => {\r\n    const parsedData = {\r\n      ...data,\r\n      pet: {\r\n        petName: data.petName,\r\n        species: data.petSpecies,\r\n        petBreed: data.petBreed,\r\n      },\r\n    };\r\n\r\n    dispatch(addClient(parsedData));\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Add Client\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <AddClientForm classes={classes} onSubmit={handleOnSubmit} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addClientForm\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientTransactionsTableHeader = ({ toggleAddItemSaleRow }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          Add Transaction\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientTransactionsTableHeader;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemsWithSearchTerm = async (searchTerm, branchName) => {\r\n  const response = await axios.get(`/items/search/${branchName}/${searchTerm}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItems = async (branchName) => {\r\n  const response = await axios.get(`/items/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n  };\r\n  const response = await axios.post(`/items/${branchName}`, parsedItem);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const modifyItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentiveAmount: Number(item.incentiveAmount),\r\n    incentiveRate: Number(item.incentiveRate),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (itemId, branchName) => {\r\n  const response = await axios.delete(`/items/item/${branchName}/${itemId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const discountItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItemSales = async (branchName) => {\r\n  const response = await axios.get(`/item-sales/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  itemQuantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/item-sales/${branchName}/${itemId}/${itemQuantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.delete(\r\n    `/item-sales/${branchName}/${itemId}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemsWithSearchTerm } from \"../../api/inventory\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  result: [],\r\n  error: null,\r\n};\r\n\r\nconst inventorySearchSlice = createSlice({\r\n  name: \"inventorySearchResultSlice\",\r\n  initialState,\r\n  reducers: {\r\n    searchItemsStart(state) {\r\n      state.isLoading = true;\r\n    },\r\n    searchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.result = action.payload;\r\n      state.error = null;\r\n    },\r\n    searchItemsFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearItemsSearch(state, action) {\r\n      state.result = [];\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default inventorySearchSlice.reducer;\r\n\r\nexport const {\r\n  searchItemsFailure,\r\n  searchItemsStart,\r\n  searchItemsSuccess,\r\n  clearItemsSearch,\r\n} = inventorySearchSlice.actions;\r\n\r\nexport const searchItems = (searchTerm) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(searchItemsStart());\r\n    const items = await getItemsWithSearchTerm(searchTerm, user.branchName);\r\n    dispatch(searchItemsSuccess(items));\r\n  } catch (error) {\r\n    dispatch(searchItemsFailure(error));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment } from \"../../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  client,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(client.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.salesCategory}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{currentDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientTransactionsTableHeader from \"./ClientTransactionsTableHeader\";\r\nimport { ClientTransactionsTableAddItemRow } from \"./ClientTransactionsTableAddItemRow\";\r\nimport { showModal } from \"../../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTable = ({ data, columns, client }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClientTransactionsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientTransactionsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              client={client}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientTransactionsTable } from \"./ClientTransactionsTable\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientTransactionsTableContainer = ({ paymentHistory, client }) => {\r\n  const data = useMemo(() => {\r\n    return paymentHistory.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item.name,\r\n        col3: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col4: itemSale.quantity,\r\n        col5: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col8: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [paymentHistory]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    client,\r\n  };\r\n\r\n  return <ClientTransactionsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientTransactionsTableContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Dialog,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { fetchClientPaymentHistory } from \"../../clientsSlice\";\r\nimport ClientTransactionsTableContainer from \"./ClientTransactionsTable/ClientTransactionsTableContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients, paymentHistory, isPaymentsLoading } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[index];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientPaymentHistory(client.ID));\r\n  }, [dispatch, client]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isPaymentsLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n    return (\r\n      <ClientTransactionsTableContainer\r\n        paymentHistory={paymentHistory}\r\n        client={client}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullScreen\r\n    >\r\n      <DialogTitle>Payment History</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        {renderContent()}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          DONE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useState, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { updateClient } from \"../../clientsSlice\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"400px\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const VeterinarianNoteModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients } = useSelector((state) => state.clients);\r\n  const client = useMemo(() => clients[index], [index, clients]);\r\n  const [veterinarianNote, setVeterinarianNote] = useState(\r\n    client.veterinarianNote ? client.veterinarianNote : \"\"\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    const newClient = { ...client, veterinarianNote: veterinarianNote };\r\n    dispatch(updateClient(newClient));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>Add Veterinarian Note</DialogTitle>\r\n      <div className={classes.content}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Note\"\r\n          multiline\r\n          rows={10}\r\n          value={veterinarianNote}\r\n          onChange={(e) => setVeterinarianNote(e.target.value)}\r\n        />\r\n      </div>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleOnSubmit}>\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Autocomplete,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport {\r\n  appointmentFollowUpReoccuranceTypes,\r\n  appointmentFollowUpTypes,\r\n  appointmentVaccineReoccuranceTypes,\r\n  appointmentVaccineTypes,\r\n} from \"../../../../consts\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\nexport const AddAppointmentForm = ({\r\n  onSubmit,\r\n  startDate,\r\n  isVaccine,\r\n  clientIndex,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const defaultClient = clientIndex\r\n    ? {\r\n        ...clients[clientIndex],\r\n        clientName: `${clients[clientIndex].clientName} - ${clients[clientIndex].pet.petName}`,\r\n      }\r\n    : null;\r\n\r\n  const data = useMemo(\r\n    () =>\r\n      Object.keys(clients).map((key) => {\r\n        const client = clients[key];\r\n        // Modify the client name to be easily distinguishable with duplicate owner names.\r\n        const newClientName = `${client.clientName} - ${client.pet.petName}`;\r\n        return { ...client, clientName: newClientName };\r\n      }),\r\n    [clients]\r\n  );\r\n\r\n  const { handleSubmit, errors, control } = useForm();\r\n\r\n  const renderTypeFields = () => {\r\n    return (\r\n      <>\r\n        <Controller\r\n          name=\"type\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-type\">{`${\r\n                isVaccine ? \"Vaccine\" : \"Follow Up\"\r\n              } Type`}</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-type\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.type}>\r\n                {!!errors.type ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"reoccurance\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-reoccurance\">Next Visit</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-reoccurance\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.reoccurance}>\r\n                {!!errors.reoccurance ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      id=\"addAppointmentForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <Controller\r\n        name=\"client\"\r\n        control={control}\r\n        defaultValue={clientIndex ? defaultClient : null}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ onChange, ...restProps }) => (\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={data}\r\n            loading={isClientsLoading}\r\n            getOptionLabel={(option) => option.clientName}\r\n            getOptionSelected={(option, value) =>\r\n              option.clientName === value.clientName\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Client Name\"\r\n                fullWidth\r\n                error={!!errors.client}\r\n                helperText={!!errors.client ? \"Enter a client\" : \"\"}\r\n              />\r\n            )}\r\n            onChange={(_, val) => {\r\n              onChange(val);\r\n            }}\r\n            {...restProps}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        id=\"appointment-date\"\r\n        name=\"date\"\r\n        control={control}\r\n        defaultValue={moment(startDate).toDate()}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={(props) => (\r\n          <DatePicker\r\n            allowSameDateSelection\r\n            renderInput={(props) => (\r\n              <TextField {...props} size=\"small\" label=\"Appointment Date\" />\r\n            )}\r\n            {...props}\r\n          />\r\n        )}\r\n      />\r\n      {renderTypeFields()}\r\n      <Controller\r\n        name=\"veterinarianNotes\"\r\n        control={control}\r\n        defaultValue={\"\"}\r\n        rules={{}}\r\n        render={(props) => (\r\n          <TextField label=\"Notes\" multiline size=\"small\" rows={5} {...props} />\r\n        )}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { AddAppointmentForm } from \"./AddAppointmentForm\";\r\nimport { fetchClients, addAppointment } from \"../../clientsSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"100%\",\r\n      alignItems: \"flex-start\",\r\n      padding: theme.spacing(2),\r\n      flexDirection: \"column\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddAppointmentModal = ({ isVisible, startDate, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isVaccine, setIsVaccine] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!clientIndex) {\r\n      dispatch(fetchClients());\r\n    }\r\n  }, [dispatch, clientIndex]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = (data) => {\r\n    // Convert date to milliseconds\r\n    const formattedDate = moment(data.date).toISOString();\r\n    dispatch(\r\n      addAppointment({\r\n        clientId: data.client.ID,\r\n        appointment: { ...data, date: formattedDate },\r\n      })\r\n    );\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Schedule Appointment</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <FormControlLabel\r\n          label=\"For Vaccine\"\r\n          control={\r\n            <Checkbox\r\n              checked={isVaccine}\r\n              onChange={(e) => setIsVaccine(e.target.checked)}\r\n            />\r\n          }\r\n        />\r\n        <AddAppointmentForm\r\n          onSubmit={handleOnSubmit}\r\n          startDate={startDate}\r\n          isVaccine={isVaccine}\r\n          clientIndex={clientIndex}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button form=\"addAppointmentForm\" variant=\"outlined\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchClientAppointments } from \"../../clientsSlice\";\r\nimport { DayPicker, LocalizationProvider, PickersDay } from \"@material-ui/lab\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport moment from \"moment-timezone\";\r\nimport classnames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    loadingIndicator: {\r\n      width: \"300px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n    },\r\n    hasAppointment: {\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n    selected: {\r\n      backgroundColor: `#424242 !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsModal = ({ isVisible, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const history = useHistory();\r\n  const { isAppointmentsLoading, clientAppointments, clients } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[clientIndex];\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnDateChanged = (value) => {\r\n    setSelectedDate(value);\r\n    const appointment = clientAppointments.find((a) =>\r\n      moment(a.date).isSame(value, \"date\")\r\n    );\r\n\r\n    if (appointment) {\r\n      setOpen(!isVisible);\r\n\r\n      history.push(\"/clients/appointments\", {\r\n        appointment,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientAppointments({ clientId: client.ID }));\r\n  }, [dispatch, client]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DayPicker\r\n          date={selectedDate}\r\n          onChange={handleOnDateChanged}\r\n          disableHighlightToday\r\n          allowSameDateSelection\r\n          renderDay={(date, _selectedDates, PickersDayComponentProps) => (\r\n            <CustomDay\r\n              classes={classes}\r\n              date={date}\r\n              selectedDate={selectedDate}\r\n              _selectedDates={_selectedDates}\r\n              PickersDayComponentProps={PickersDayComponentProps}\r\n              appointments={clientAppointments}\r\n            />\r\n          )}\r\n          allowKeyboardControl={false}\r\n        />\r\n      </LocalizationProvider>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>Appointments</DialogTitle>\r\n      <DialogContent>{renderContent()}</DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>DONE</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst CustomDay = ({\r\n  date,\r\n  classes,\r\n  _selectedDates,\r\n  selectedDate,\r\n  PickersDayComponentProps,\r\n  appointments,\r\n}) => {\r\n  const adjustedDate = moment(date).tz(\"Asia/Manila\");\r\n  // Check if the client has an appointment\r\n  const hasAppointment =\r\n    appointments.find((a) => {\r\n      const appointmentDate = moment(a.date).tz(\"Asia/Manila\");\r\n      return appointmentDate.isSame(adjustedDate, \"date\");\r\n    }) !== undefined;\r\n\r\n  const isSelected = moment(selectedDate).isSame(date, \"date\");\r\n  return (\r\n    <PickersDay\r\n      className={classnames({\r\n        [classes.hasAppointment]: hasAppointment,\r\n        [classes.selected]: isSelected,\r\n      })}\r\n      {...PickersDayComponentProps}\r\n    ></PickersDay>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  deleteItem as deleteItemFromApi,\r\n  addItem as addItemToApi,\r\n  modifyItem as modifyItemFromApi,\r\n  discountItem as discountItemFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\n\r\nimport { showModal } from \"../../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  items: [],\r\n  itemSales: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySlice = createSlice({\r\n  name: \"inventoryItems\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemsStart: handleStart,\r\n    fetchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.items = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchItemsFailure: handleError,\r\n    addItemStart(_, __) {},\r\n    addItemSuccess(state, action) {\r\n      // state.items = [...state.items, action.payload];\r\n    },\r\n    addItemFailure: handleError,\r\n    modifyItemStart() {},\r\n    modifyItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    modifyItemFailure: handleError,\r\n    discountItemStart() {},\r\n    discountItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    discountItemFailure: handleError,\r\n    deleteItemStart() {},\r\n    deleteItemSuccess(state, action) {\r\n      state.items = state.items.filter((item) => item.ID !== action.payload);\r\n    },\r\n    deleteItemFailure: handleError,\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchItemsStart,\r\n  fetchItemsSuccess,\r\n  fetchItemsFailure,\r\n  addItemStart,\r\n  addItemSuccess,\r\n  addItemFailure,\r\n  modifyItemStart,\r\n  modifyItemSuccess,\r\n  modifyItemFailure,\r\n  discountItemStart,\r\n  discountItemFailure,\r\n  discountItemSuccess,\r\n  deleteItemStart,\r\n  deleteItemSuccess,\r\n  deleteItemFailure,\r\n} = inventorySlice.actions;\r\n\r\nexport default inventorySlice.reducer;\r\n\r\nexport const fetchItems = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchItemsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/items/${user.branchName}?jwt=${token}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const addItem = (itemDetails) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await addItemToApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Added!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemSuccess());\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const modifyItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(modifyItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await modifyItemFromApi(itemDetails, user.branchName);\r\n\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Modified!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemFailure());\r\n  }\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(deleteItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await deleteItemFromApi(itemId, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Deleted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n\r\n    dispatch(deleteItemSuccess(itemId));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemFailure());\r\n  }\r\n};\r\n\r\nexport const discountItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(discountItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await discountItemFromApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Discounted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemFailure());\r\n  }\r\n};\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemCategories = async () => {\r\n  const response = await axios.get(`/admin/item-categories`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItemCategory = async (itemCategoryDetails) => {\r\n  const response = await axios.post(\r\n    `/admin/item-categories`,\r\n    itemCategoryDetails\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItemCategory = async (itemCategoryId) => {\r\n  const response = await axios.delete(\r\n    `/admin/item-categories/${itemCategoryId}`\r\n  );\r\n\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getItemCategories as apiGetItemCategories,\r\n  addItemCategory as apiAddItemCategory,\r\n  deleteItemCategory as apiDeleteItemCategory,\r\n} from \"../../api/item_category\";\r\nimport { showInfoModal } from \"../modals/infoModalSlice\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst itemCategorySlice = createSlice({\r\n  name: \"itemCategorySlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemCategoriesStart(state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchItemCategoriesSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchItemCategoriesFailure(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    addItemCategoryStart(state) {\r\n      state.error = null;\r\n    },\r\n    addItemCategorySuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    addItemCategoryFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    deleteItemCategoryStart(state) {\r\n      state.error = null;\r\n    },\r\n    deleteItemCategorySuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    deleteItemCategoryFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default itemCategorySlice.reducer;\r\n\r\nexport const {\r\n  fetchItemCategoriesFailure,\r\n  fetchItemCategoriesStart,\r\n  fetchItemCategoriesSuccess,\r\n  addItemCategoryFailure,\r\n  addItemCategoryStart,\r\n  addItemCategorySuccess,\r\n  deleteItemCategoryFailure,\r\n  deleteItemCategoryStart,\r\n  deleteItemCategorySuccess,\r\n} = itemCategorySlice.actions;\r\n\r\nexport const fetchItemCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchItemCategoriesStart());\r\n    const result = await apiGetItemCategories();\r\n    dispatch(fetchItemCategoriesSuccess(result));\r\n  } catch (error) {\r\n    dispatch(fetchItemCategoriesFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const addItemCategory = (itemCategoryDetails) => async (dispatch) => {\r\n  try {\r\n    dispatch(addItemCategoryStart());\r\n    dispatch(showInfoModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const results = await apiAddItemCategory(itemCategoryDetails);\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Category Added!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemCategorySuccess(results));\r\n  } catch (error) {\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemCategoryFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteItemCategory = (itemCategoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch(deleteItemCategoryStart());\r\n    dispatch(showInfoModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const results = await apiDeleteItemCategory(itemCategoryId);\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Category Deleted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemCategorySuccess(results));\r\n  } catch (error) {\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemCategoryFailure(error.message));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  CircularProgress,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { addItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryAddItemModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const newItem = { ...data };\r\n    newItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      newItem.incentiveRate = 0;\r\n    } else {\r\n      newItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(addItem(newItem));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Add Item</DialogTitle>\r\n      <DialogContent>\r\n        <AddItemForm\r\n          onSubmit={handleSubmit}\r\n          dispatch={dispatch}\r\n          classes={classes}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addItemForm\" type=\"submit\">\r\n          Add Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst AddItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n  dispatch,\r\n}) => {\r\n  const { isLoading, categories } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  const onCategoriesFocused = () => {\r\n    dispatch(fetchItemCategories());\r\n  };\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: \"\",\r\n      category: \"Store Sales\",\r\n      incentiveRate: 0,\r\n      incentiveAmount: 0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"addItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onFocus={onCategoriesFocused}\r\n            endAdornment={\r\n              isLoading ? (\r\n                <InputAdornment>\r\n                  <CircularProgress />\r\n                </InputAdornment>\r\n              ) : null\r\n            }\r\n          >\r\n            <MenuItem value=\"\"></MenuItem>\r\n            {categories.map((category) => (\r\n              <MenuItem key={category.ID} value={category.name}>\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n\r\n      <div>\r\n        <FormControlLabel\r\n          className={classes.addItemFormField}\r\n          control={\r\n            <Checkbox\r\n              checked={isIncentiveFixed}\r\n              onChange={() => {\r\n                setIncentiveFixed(!isIncentiveFixed);\r\n              }}\r\n            />\r\n          }\r\n          label=\"Fixed Incentive Rate\"\r\n        />\r\n        <div className={classes.incentiveFieldsWrapper}>\r\n          <TextField\r\n            disabled={isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Rate\"\r\n            name=\"incentiveRate\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <Typography>%</Typography>,\r\n            }}\r\n            inputRef={register({\r\n              required: true,\r\n              max: 100.0,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveRate}\r\n          />\r\n          <TextField\r\n            disabled={!isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Amount\"\r\n            name=\"incentiveAmount\"\r\n            size=\"small\"\r\n            inputRef={register({\r\n              required: true,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveAmount}\r\n          />\r\n        </div>\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal, showModal } from \"../../modals/modalSlice\";\r\nimport { deleteItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"1em\",\r\n    },\r\n    deleteBtn: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryManageItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleModifyItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MODIFY_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleDiscountItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DISCOUNT_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteItemPressed = (itemId) => {\r\n    setOpen(!isVisible);\r\n\r\n    dispatch(deleteItem(item.ID));\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Manage Item</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <Button fullWidth variant=\"contained\" onClick={handleModifyItemPressed}>\r\n          Modify Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDiscountItemPressed}\r\n        >\r\n          Discount Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          className={classes.deleteBtn}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDeleteItemPressed}\r\n        >\r\n          Delete Item\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Select,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { modifyItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryModifyItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(item.isIncentiveFixed);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const updatedItem = { ...item, ...data };\r\n    updatedItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      updatedItem.incentiveRate = 0;\r\n    } else {\r\n      updatedItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(modifyItem(updatedItem, itemIndex));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Modify Item</DialogTitle>\r\n      <DialogContent>\r\n        <ModifyItemForm\r\n          dispatch={dispatch}\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"modifyItemForm\" type=\"submit\">\r\n          Modify Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModifyItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  itemDetails,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n  dispatch,\r\n}) => {\r\n  const { isLoading, categories } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  const onCategoriesFocused = () => {\r\n    dispatch(fetchItemCategories());\r\n  };\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: itemDetails.remarks !== null ? itemDetails.remarks : \"\",\r\n      category: itemDetails.category !== null ? itemDetails.category : \"\",\r\n      price: itemDetails.price !== null ? itemDetails.price : 0,\r\n      name: itemDetails.name !== null ? itemDetails.name : \"\",\r\n      incentiveRate:\r\n        itemDetails.incentiveRate !== null ? itemDetails.incentiveRate : 0,\r\n      incentiveAmount:\r\n        itemDetails.incentiveAmount !== null ? itemDetails.incentiveAmount : 0,\r\n      inStock: itemDetails.inStock !== null ? itemDetails.inStock : 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"modifyItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n        helperText={!!errors.inStock ? \"Invalid Value\" : \"\"}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onFocus={onCategoriesFocused}\r\n            endAdornment={\r\n              isLoading ? (\r\n                <InputAdornment>\r\n                  <CircularProgress />\r\n                </InputAdornment>\r\n              ) : null\r\n            }\r\n          >\r\n            {categories.map((category) => (\r\n              <MenuItem key={category.ID} value={category.name}>\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n      <FormControlLabel\r\n        className={classes.addItemFormField}\r\n        control={\r\n          <Checkbox\r\n            checked={isIncentiveFixed}\r\n            onChange={() => {\r\n              setIncentiveFixed(!isIncentiveFixed);\r\n            }}\r\n          />\r\n        }\r\n        label=\"Fixed Incentive Rate\"\r\n      />\r\n      <div className={classes.incentiveFieldsWrapper}>\r\n        <TextField\r\n          disabled={isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Rate\"\r\n          name=\"incentiveRate\"\r\n          size=\"small\"\r\n          InputProps={{\r\n            endAdornment: <Typography>%</Typography>,\r\n          }}\r\n          inputRef={register({\r\n            required: true,\r\n            max: 100.0,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveRate}\r\n        />\r\n        <TextField\r\n          disabled={!isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Amount\"\r\n          name=\"incentiveAmount\"\r\n          size=\"small\"\r\n          inputRef={register({\r\n            required: true,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveAmount}\r\n        />\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { discountItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryDiscountItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = ({ discount }) => {\r\n    setOpen(!isVisible);\r\n    dispatch(discountItem({ ...item, discount }, itemIndex));\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Discount Item</DialogTitle>\r\n      <DialogContent>\r\n        <DiscountItemForm\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"discountItemForm\" type=\"submit\">\r\n          Discount Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst DiscountItemForm = ({ onSubmit, classes, itemDetails }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      discount: itemDetails.discount !== null ? itemDetails.discount : 0.0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"discountItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Discount Amount\"\r\n        name=\"discount\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        helperText={\r\n          !!errors.discount ? \"Please input a value between 0.01 and 100\" : \"\"\r\n        }\r\n        InputProps={{\r\n          endAdornment: (\r\n            <Typography>\r\n              <strong>%</strong>\r\n            </Typography>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n          max: 100.0,\r\n        })}\r\n        autoFocus\r\n        error={!!errors.discount}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addItemSale as addItemSaleToApi,\r\n  deleteItemSale as deleteItemSaleFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\nimport { showModal, hideModal } from \"../../modals/modalSlice\";\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  itemSales: [],\r\n  dailySales: 0,\r\n  metadata: {\r\n    salesDateCateg: \"daily\",\r\n  },\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySalesSlice = createSlice({\r\n  name: \"inventorySales\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStart: handleOnStart,\r\n    fetchItemSalesSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.itemSales = action.payload.itemSales;\r\n      state.dailySales = action.payload.dailySales;\r\n      state.metadata = action.payload.metadata;\r\n      state.error = null;\r\n    },\r\n    fetchItemSalesError: handleOnError,\r\n    addItemSaleStart() {},\r\n    addItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    addItemSaleFailure: handleOnError,\r\n    deleteItemSaleStart() {},\r\n    deleteItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    deleteItemSaleFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default inventorySalesSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesError,\r\n  fetchItemSalesStart,\r\n  fetchItemSalesSuccess,\r\n  addItemSaleFailure,\r\n  addItemSaleStart,\r\n  addItemSaleSuccess,\r\n  deleteItemSaleFailure,\r\n  deleteItemSaleStart,\r\n  deleteItemSaleSuccess,\r\n} = inventorySalesSlice.actions;\r\n\r\nexport const fetchItemSales = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStart());\r\n    let ws;\r\n    ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/item-sales/${user.branchName}?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemSalesSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesError(error));\r\n  }\r\n};\r\n\r\nexport const addItemSale = (itemId, itemQuantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(addItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const newItemSale = await addItemSaleToApi(\r\n      user.branchName,\r\n      itemId,\r\n      itemQuantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(addItemSaleSuccess(newItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction Complete!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(addItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = (itemId) => async (dispatch, getState) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(deleteItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const deletedItemSale = await deleteItemSaleFromApi(\r\n      user.branchName,\r\n      itemId,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(deleteItemSaleSuccess(deletedItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction deleted successfully!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(deleteItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n  LogoutModal,\r\n} from \"../../components/modals\";\r\nimport {\r\n  AddClientModal,\r\n  ClientTransactionsModal,\r\n  VeterinarianNoteModal,\r\n  AddAppointmentModal,\r\n  ClientAppointmentsModal,\r\n} from \"../clients/clientsModals\";\r\n\r\nimport {\r\n  InventoryAddItemModal,\r\n  InventoryDiscountItemModal,\r\n  InventoryManageItemModal,\r\n  InventoryModifyItemModal,\r\n  InventoryAddItemSaleConfirmationModal,\r\n  InventoryDeleteItemSaleConfirmationModal,\r\n} from \"../inventory/inventoryModals\";\r\n\r\nconst modalComponents = {\r\n  ADD_ITEM_MODAL: InventoryAddItemModal,\r\n  ADD_SALE_CONFIRMATION_MODAL: InventoryAddItemSaleConfirmationModal,\r\n  DELETE_SALE_CONFIRMATION_MODAL: InventoryDeleteItemSaleConfirmationModal,\r\n  MANAGE_ITEM_MODAL: InventoryManageItemModal,\r\n  MODIFY_ITEM_MODAL: InventoryModifyItemModal,\r\n  DISCOUNT_ITEM_MODAL: InventoryDiscountItemModal,\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n  LOGOUT_MODAL: LogoutModal,\r\n  ADD_CLIENT_MODAL: AddClientModal,\r\n  ADD_APPOINTMENT_MODAL: AddAppointmentModal,\r\n  CLIENT_TRANSACTIONS_MODAL: ClientTransactionsModal,\r\n  CLIENT_APPOINTMENTS_MODAL: ClientAppointmentsModal,\r\n  CLIENT_VETERINARIAN_NOTE_MODAL: VeterinarianNoteModal,\r\n};\r\n\r\nconst ModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.modals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default ModalManager;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemSale } from \"../inventorySales/inventorySalesSlice\";\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\n\r\nexport const InventoryAddItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemDetails,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  const handlePositivePressed = () => {\r\n    dispatch(addItemSale(itemDetails.itemId, itemDetails.quantity));\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { deleteItemSale } from \"../inventorySales/inventorySalesSlice\";\r\n\r\nexport const InventoryDeleteItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemIndex,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { itemSales } = useSelector((state) => state.inventorySales);\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(deleteItemSale(itemSales[itemIndex].ID));\r\n  };\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n};\r\n\r\nconst drawerSlice = createSlice({\r\n  name: \"drawer\",\r\n  initialState,\r\n  reducers: {\r\n    toggleDrawer(state) {\r\n      state.isOpen = !state.isOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport default drawerSlice.reducer;\r\n\r\nexport const { toggleDrawer } = drawerSlice.actions;\r\n","import axios from \"./axios\";\r\n\r\nexport const clearNotifications = async ({ branchName }) => {\r\n  const response = await axios.delete(`/notifications/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateNotification = async ({ notificationId }) => {\r\n  const response = await axios.patch(`/notifications/${notificationId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\n\r\nimport {\r\n  clearNotifications as apiClearNotifications,\r\n  updateNotification as apiUpdateNotifications,\r\n} from \"../../api/notification\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  notifications: [],\r\n  error: null,\r\n};\r\n\r\nconst notificationsSlice = createSlice({\r\n  name: \"notificationsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsSuccess(state, action) {\r\n      // Convert the array to map\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    clearNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsSuccess(state, action) {\r\n      state.notifications = {};\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    updateNotificationStart() {},\r\n    updateNotificationSuccess(state, action) {\r\n      state.isLoading = false;\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.error = null;\r\n    },\r\n    updateNotificationError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchNotificationsError,\r\n  fetchNotificationsStart,\r\n  fetchNotificationsSuccess,\r\n  updateNotificationError,\r\n  updateNotificationStart,\r\n  updateNotificationSuccess,\r\n  clearNotificationsError,\r\n  clearNotificationsStart,\r\n  clearNotificationsSuccess,\r\n} = notificationsSlice.actions;\r\n\r\nexport default notificationsSlice.reducer;\r\n\r\nexport const fetchNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchNotificationsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/notifications/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchNotificationsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const clearNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(clearNotificationsStart());\r\n    await apiClearNotifications({ branchName: user.branchName });\r\n    dispatch(clearNotificationsSuccess());\r\n  } catch (error) {\r\n    dispatch(clearNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateNotification = ({ notificationId, index }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(updateNotificationStart());\r\n    const notifications = await apiUpdateNotifications({ notificationId });\r\n    dispatch(updateNotificationSuccess(notifications));\r\n  } catch (error) {\r\n    dispatch(updateNotificationError(error.message));\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { Divider, ListItem, Typography } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport className from \"classnames\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n      gap: theme.spacing(1),\r\n    },\r\n    title: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"1.2rem\",\r\n    },\r\n    message: {\r\n      fontSize: \"1rem\",\r\n    },\r\n    seen: {\r\n      opacity: \"50%\",\r\n    },\r\n    date: {\r\n      color: \"#FFFFFFB3\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationItem = ({ notif, index, onNotificationPressed }) => {\r\n  const classes = useStyles();\r\n  const [seen, setSeen] = useState(notif.seen);\r\n  const appointment = JSON.parse(notif.payload);\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => {\r\n          setSeen(true);\r\n          onNotificationPressed(notif, index);\r\n        }}\r\n        className={\r\n          seen ? className([classes.root, classes.seen]) : classes.root\r\n        }\r\n        key={notif.ID}\r\n      >\r\n        <Typography className={classes.title}>\r\n          {appointment.client.clientName}\r\n        </Typography>\r\n        <Typography className={classes.message}>{notif.message}</Typography>\r\n        <Typography className={classes.date}>\r\n          {moment(notif.CreatedAt).format(\"MMMM DD, YYYY\")}\r\n        </Typography>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, Button, Typography } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { NotificationItem } from \"./NotificationItem\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n      maxHeight: \"500px\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      gap: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationsList = ({\r\n  notifications,\r\n  onNotificationPressed,\r\n  onClearNotificationsPressed,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderListItems = () => {\r\n    return Object.keys(notifications).map((k, i) => {\r\n      const n = notifications[k];\r\n      return (\r\n        <NotificationItem\r\n          notif={n}\r\n          index={i}\r\n          onNotificationPressed={onNotificationPressed}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(notifications).length !== 0) {\r\n      return (\r\n        <>\r\n          {renderListItems()}\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"error\"\r\n            onClick={onClearNotificationsPressed}\r\n            startIcon={<Delete color=\"error\" />}\r\n          >\r\n            Clear Notifications\r\n          </Button>\r\n        </>\r\n      );\r\n    }\r\n    return <Typography align=\"center\">No Notifications</Typography>;\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IconButton, Badge, Menu, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Notifications as NotificationIcon } from \"@material-ui/icons\";\r\nimport {\r\n  fetchNotifications,\r\n  clearNotifications,\r\n  updateNotification,\r\n} from \"./notificationsSlice\";\r\n\r\nimport { NotificationsList } from \"./NotificationsList\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      width: \"400px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const Notifications = () => {\r\n  const { notifications, isLoading } = useSelector(\r\n    (state) => state.notifications\r\n  );\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications());\r\n  }, [dispatch]);\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnNotificationPressed = (notification, index) => {\r\n    const appointment = JSON.parse(notification.payload);\r\n    history.push(\"/clients/appointments\", {\r\n      appointment,\r\n    });\r\n    dispatch(updateNotification({ notificationId: notification.ID, index }));\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnClearNotificationsPressed = () => {\r\n    dispatch(clearNotifications());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <NotificationsList\r\n        notifications={notifications}\r\n        onNotificationPressed={handleOnNotificationPressed}\r\n        onClearNotificationsPressed={handleOnClearNotificationsPressed}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClick}>\r\n        <Badge\r\n          badgeContent={\r\n            Object.keys(notifications)\r\n              .map((k) => notifications[k])\r\n              .filter((n) => !n.seen).length\r\n          }\r\n        >\r\n          <NotificationIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\r\n        {renderContent()}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  AppBar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { AccountCircle, Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { showModal } from \"../features/modals/modalSlice\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\nimport { Notifications } from \"../features/notifications/Notifications\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    width: \"100%\",\r\n    backgroundColor: \"#272727\",\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none \",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst appbarTitles = {\r\n  dashboard: \"Dashboard\",\r\n  \"pet-queues\": \"Pet Queues\",\r\n  \"all-clients\": \"All Clients\",\r\n  payments: \"Payments\",\r\n  appointments: \"Appointments\",\r\n  \"appointment-form\": \"Appointment Form\",\r\n  \"item-categories\": \"Item Categories\",\r\n  items: \"All Items\",\r\n  sales: \"All Sales\",\r\n};\r\n\r\nexport const CustomAppBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [appbarTitle, setAppbarTitle] = useState(\"\");\r\n  const location = useLocation();\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname;\r\n    const splittedPathname = pathname.split(\"/\");\r\n    const appbarTitle =\r\n      appbarTitles[splittedPathname[splittedPathname.length - 1]];\r\n    setAppbarTitle(appbarTitle);\r\n  }, [location, appbarTitle, setAppbarTitle]);\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.target);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const handleOnSignoutPressed = () => {\r\n    handleMenuClose();\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOGOUT_MODAL\",\r\n        modalProps: {\r\n          title: \"Logout\",\r\n          message: \"Are you sure you want to logout from the session?\",\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderMenu = () => {\r\n    return (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleOnSignoutPressed}>Logout</MenuItem>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return \"Petshield Veterinary Clinic - \" + appbarTitle;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography>{renderTitle()}</Typography>\r\n          <div className={classes.grow}></div>\r\n\r\n          <Notifications />\r\n          <IconButton edge=\"end\" onClick={handleMenuOpen}>\r\n            <AccountCircle style={{ fontSize: \"2rem\" }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu()}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/house.7d774967.svg\";","export default __webpack_public_path__ + \"static/media/all_clients.2a3b6270.svg\";","export default __webpack_public_path__ + \"static/media/all_items.e153111f.svg\";","export default __webpack_public_path__ + \"static/media/appointments.f3506a0a.svg\";","export default __webpack_public_path__ + \"static/media/clients.b5a069e7.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.99dfeff1.svg\";","export default __webpack_public_path__ + \"static/media/inventory.c084951b.svg\";","export default __webpack_public_path__ + \"static/media/item_transactions.a4256305.svg\";","export default __webpack_public_path__ + \"static/media/payments.8026a3af.svg\";","export default __webpack_public_path__ + \"static/media/pet_queue.25ef2fa6.svg\";","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { ExpandLess, ExpandMore, Settings, Category } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"../assets/house.svg\";\r\nimport AllClientsIcon from \"../assets/all_clients.svg\";\r\nimport AllItemsIcon from \"../assets/all_items.svg\";\r\nimport AppointmentsIcon from \"../assets/appointments.svg\";\r\nimport ClientsIcon from \"../assets/clients.svg\";\r\nimport DashboardIcon from \"../assets/dashboard.svg\";\r\nimport InventoryIcon from \"../assets/inventory.svg\";\r\nimport ItemTransactionIcon from \"../assets/item_transactions.svg\";\r\nimport PetQueueIcon from \"../assets/pet_queue.svg\";\r\nimport PaymentsIcon from \"../assets/payments.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#343434\",\r\n  },\r\n\r\n  nested: {\r\n    paddingLeft: `${theme.spacing(4)}`,\r\n  },\r\n  drawerIcon: {\r\n    width: \"34px\",\r\n    height: \"34px\",\r\n    fill: `${theme.palette.primary.main} !important`,\r\n  },\r\n}));\r\n\r\nexport const CustomDrawer = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isOpen } = useSelector((state) => state.drawer);\r\n  const [expandedItems, setExpandedItems] = useState({\r\n    home: false,\r\n    clients: false,\r\n    inventory: false,\r\n    admin: false,\r\n  });\r\n\r\n  const menuItems = [\r\n    {\r\n      label: \"Home\",\r\n      type: \"home\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, home: !expandedItems.home }),\r\n      icon: HomeIcon,\r\n      subItems: [\r\n        {\r\n          label: \"Dashboard\",\r\n          icon: DashboardIcon,\r\n          path: \"/home/dashboard\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Clients\",\r\n      type: \"clients\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, clients: !expandedItems.clients }),\r\n      icon: ClientsIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Clients\",\r\n          icon: AllClientsIcon,\r\n          path: \"/clients/all-clients\",\r\n        },\r\n        {\r\n          label: \"Payments\",\r\n          icon: PaymentsIcon,\r\n          path: \"/clients/payments\",\r\n        },\r\n        {\r\n          label: \"Appointments\",\r\n          icon: AppointmentsIcon,\r\n          path: \"/clients/appointments\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Inventory\",\r\n      type: \"inventory\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({\r\n          ...expandedItems,\r\n          inventory: !expandedItems.inventory,\r\n        }),\r\n      icon: InventoryIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Items\",\r\n          icon: AllItemsIcon,\r\n          path: \"/inventory/items\",\r\n        },\r\n        {\r\n          label: \"Item Transactions\",\r\n          icon: ItemTransactionIcon,\r\n          path: \"/inventory/sales\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Admin\",\r\n      type: \"admin\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, admin: !expandedItems.admin }),\r\n      mIcon: Settings,\r\n      subItems: [\r\n        {\r\n          label: \"Item Category\",\r\n          mIcon: Category,\r\n          path: \"/admin/item-categories\",\r\n        },\r\n        // {\r\n        //   label: \"Pet Queue\",\r\n        //   icon: PetQueueIcon,\r\n        //   path: \"/home/pet-queues\",\r\n        // },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const drawer = (\r\n    <>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((item) => {\r\n          return (\r\n            <React.Fragment key={item.label}>\r\n              <ListItem key={item.label} button onClick={item.handleOnClick}>\r\n                <ListItemIcon>\r\n                  {item.icon ? (\r\n                    <ReactSVG\r\n                      key={item.label}\r\n                      src={item.icon}\r\n                      beforeInjection={(svg) => {\r\n                        svg.classList.add(classes.drawerIcon);\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <item.mIcon color=\"primary\" size=\"lg\" />\r\n                  )}\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label}></ListItemText>\r\n                {expandedItems[item.type] ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse\r\n                in={expandedItems[item.type]}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <List component=\"div\">\r\n                  {item.subItems.map((subItem) => {\r\n                    return (\r\n                      <ListItem\r\n                        key={subItem.label}\r\n                        button\r\n                        component={Link}\r\n                        to={subItem.path}\r\n                        className={classes.nested}\r\n                      >\r\n                        <ListItemIcon>\r\n                          {subItem.icon ? (\r\n                            <ReactSVG\r\n                              key={subItem.label}\r\n                              src={subItem.icon}\r\n                              beforeInjection={(svg) => {\r\n                                svg.classList.add(classes.drawerIcon);\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <subItem.mIcon color=\"primary\" size=\"lg\" />\r\n                          )}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={subItem.label}></ListItemText>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <>\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={isOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return renderContent();\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CustomAppBar } from \"./CustomAppBar\";\r\nimport { CustomDrawer } from \"./CustomDrawer\";\r\n\r\nconst PrivateLayout = ({ component: Component, ...restProps }) => {\r\n  // Get Authentication Reducer\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  if (Object.keys(user).length !== 0) {\r\n    return (\r\n      <Route\r\n        {...restProps}\r\n        render={(props) => (\r\n          <>\r\n            <CustomAppBar />\r\n            <CustomDrawer />\r\n            <Component {...props} />\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/auth/login\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-evenly\",\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      paddingBottom: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const handleShowPasswordPressed = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      id=\"loginForm\"\r\n      className={classes.root}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        size=\"small\"\r\n        helperText={!!errors.username ? \"This field is required!\" : \"\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.username}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        size=\"small\"\r\n        helperText={!!errors.password ? \"This field is required!\" : \"\"}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <IconButton onClick={handleShowPasswordPressed}>\r\n                {showPassword ? (\r\n                  <VisibilityOff color=\"secondary\" />\r\n                ) : (\r\n                  <Visibility color=\"secondary\" />\r\n                )}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        error={!!errors.password}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/login_background.102072f5.png\";","export default __webpack_public_path__ + \"static/media/logo.68ea1519.png\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress, Paper, Typography } from \"@material-ui/core\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { logIn } from \"../authSlice\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport bg from \"../../../assets/login_background.png\";\r\nimport logo from \"../../../assets/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    background: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundImage: `url(${bg})`,\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      filter: \"blur(4px)\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      maxHeight: \"500px\",\r\n      maxWidth: \"500px\",\r\n      gridTemplate: \"1fr 1fr 1fr/ 1fr\",\r\n      placeContent: \"center\",\r\n      padding: \"1em\",\r\n      zIndex: 2,\r\n    },\r\n    loading: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      placeContent: \"center\",\r\n    },\r\n\r\n    centerItem: {\r\n      display: \"grid\",\r\n      placeSelf: \"center\",\r\n    },\r\n\r\n    logo: {\r\n      position: \"fixed\",\r\n      top: \"0\",\r\n      margin: \"1em auto\",\r\n      width: \"80px\",\r\n      height: \"80px\",\r\n      zIndex: 2,\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(logIn(data));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loading}>\r\n          <CircularProgress color=\"primary\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (Object.keys(user).length === 0) {\r\n      return (\r\n        <Paper variant={\"outlined\"} className={classes.container}>\r\n          <Typography\r\n            className={classes.centerItem}\r\n            align=\"center\"\r\n            variant={\"h5\"}\r\n          >\r\n            Petshield Veterinary Clinic\r\n          </Typography>\r\n          <div>\r\n            <LoginForm onSubmit={handleSubmit} />\r\n            <Button\r\n              color=\"primary\"\r\n              form=\"loginForm\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/home/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <img className={classes.logo} src={logo} alt=\"logo\"></img>\r\n      <div className={classes.background}></div>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemSalesStats = async (\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.get(\r\n    `/stats/${branchName}/item-sales?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemSalesStats as getItemSalesStatesFromApi } from \"../../../../api/stats\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  stats: {},\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst homeSalesStatsSlice = createSlice({\r\n  name: \"homeSalesStats\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStatsStart: handleOnStart,\r\n    fetchItemSalesStatsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.stats = action.payload;\r\n    },\r\n    fetchItemSalesStatsFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default homeSalesStatsSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesStatsFailure,\r\n  fetchItemSalesStatsStart,\r\n  fetchItemSalesStatsSuccess,\r\n} = homeSalesStatsSlice.actions;\r\n\r\nexport const fetchItemSalesStats = (salesDate, salesDateCateg) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStatsStart());\r\n    const stats = await getItemSalesStatesFromApi(\r\n      user.branchName,\r\n      salesDate,\r\n      salesDateCateg\r\n    );\r\n    dispatch(fetchItemSalesStatsSuccess(stats));\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesStatsFailure(error));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { fetchItemSalesStats } from \"./homeSalesStatsSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsDatePicker = ({\r\n  setSalesDateCateg,\r\n  salesDateCateg,\r\n  salesDate,\r\n  setSalesDate,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const datePickerViews = {\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const handleSalesDateChanged = (val) => {\r\n    setSalesDate(moment(val).format(\"MM-DD-YYYY\"));\r\n  };\r\n\r\n  const handleSalesDateCategChanged = ({ target: { value } }) => {\r\n    setSalesDateCateg(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemSalesStats(salesDate, salesDateCateg));\r\n  }, [dispatch, salesDate, salesDateCateg]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        value={salesDateCateg}\r\n        onChange={handleSalesDateCategChanged}\r\n        variant=\"outlined\"\r\n      >\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n      </Select>\r\n      <DatePicker\r\n        value={salesDate}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n        )}\r\n        views={datePickerViews[salesDateCateg]}\r\n        onChange={handleSalesDateChanged}\r\n      ></DatePicker>\r\n    </div>\r\n  );\r\n};\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStatsToolip = ({ payload, active }) => {\r\n  const classes = useStyles();\r\n  if (active && payload) {\r\n    const title = payload[0].payload[\"name\"];\r\n    const value = payload[0].payload[\"sales\"];\r\n\r\n    const renderData = () => {\r\n      if (Object.keys(value).length !== 0) {\r\n        const filteredSales = Object.keys(value)\r\n          .filter((key) => key !== \"Net Sales\")\r\n          .map((key) => {\r\n            return <Typography key={key}>{`${key}: ${value[key]}`}</Typography>;\r\n          });\r\n        return (\r\n          <>\r\n            {filteredSales}\r\n            <Typography>\r\n              {`Net Sales: ${\r\n                value[\"Net Sales\"] !== undefined ? value[\"Net Sales\"] : 0\r\n              }`}\r\n            </Typography>\r\n          </>\r\n        );\r\n      }\r\n\r\n      return <Typography>No Sales</Typography>;\r\n    };\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {title}\r\n        </Typography>\r\n        <br />\r\n        {renderData()}\r\n      </Card>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  YAxis,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  Tooltip,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { HomeSalesStatsToolip } from \"./components/HomeSalesStatsTooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-evenly\",\r\n      gridGap: \"1em\",\r\n    },\r\n    tooltip: {\r\n      backgroundColor: \"red\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsGraph = () => {\r\n  const classes = useStyles();\r\n  const { isLoading, stats } = useSelector((state) => state.homeSalesStats);\r\n  const [lineData, setLineData] = useState([]);\r\n  const [pieData, setPieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const pieColors = {\r\n      Grooming: \"#8884D8\",\r\n      \"Vet Sales\": \"#8CDEDC\",\r\n      \"Store Sales\": \"#B2ECE1\",\r\n      \"Blood Test\": \"#D295BF\",\r\n      default: \"#DE9151\",\r\n    };\r\n\r\n    if (Object.keys(stats).length !== 0) {\r\n      const data = stats.data.map((item) => {\r\n        return {\r\n          name: item.category,\r\n          sales: item.value,\r\n          netSales:\r\n            item.value[\"Net Sales\"] !== undefined ? item.value[\"Net Sales\"] : 0,\r\n        };\r\n      });\r\n\r\n      let pieMap = {};\r\n\r\n      for (let i = 0; i < stats.data.length; i++) {\r\n        if (Object.keys(stats.data[i].value).length !== 0) {\r\n          Object.keys(stats.data[i].value)\r\n            .filter((key) => key !== \"Net Sales\")\r\n            .forEach((key) => {\r\n              if (!pieMap[key]) {\r\n                pieMap[key] = 0;\r\n              }\r\n              pieMap[key] += stats.data[i].value[key];\r\n            });\r\n        }\r\n      }\r\n      const pieData = Object.keys(pieMap).map((key) => {\r\n        return {\r\n          name: key,\r\n          value: pieMap[key],\r\n          fill:\r\n            pieColors[key] !== undefined\r\n              ? pieColors[key]\r\n              : pieColors[\"default\"],\r\n        };\r\n      });\r\n\r\n      setPieData(pieData);\r\n      setLineData(data);\r\n    }\r\n  }, [stats, isLoading, setPieData, setLineData]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    if (lineData.length !== 0) {\r\n      return (\r\n        <>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <LineChart data={lineData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" type=\"category\" />\r\n              <YAxis type=\"number\" dataKey=\"netSales\" name=\"Net Sales\" />\r\n              <Tooltip content={<HomeSalesStatsToolip />} />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"netSales\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <PieChart>\r\n              <Tooltip />\r\n              <Legend />\r\n              <Pie data={pieData} dataKey=\"value\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  return <div className={classes.root}>{renderContent()}</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { HomeSalesStatsDatePicker } from \"./HomeSalesStatsDatePicker\";\r\nimport { HomeSalesStatsGraph } from \"./HomeSalesStatsGraph\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n    graphWrapper: {},\r\n    title: {\r\n      margin: `${theme.spacing(2)} 0`,\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStats = () => {\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const [salesDateCateg, setSalesDateCateg] = useState(\"monthly\");\r\n  const [salesDate, setSalesDate] = useState(currentDate);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <HomeSalesStatsDatePicker\r\n        salesDate={salesDate}\r\n        setSalesDate={setSalesDate}\r\n        salesDateCateg={salesDateCateg}\r\n        setSalesDateCateg={setSalesDateCateg}\r\n      />\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        className={classes.title}\r\n      >{`${salesDateCateg.toUpperCase()} Sales`}</Typography>\r\n      <div className={classes.graphWrapper}>\r\n        <HomeSalesStatsGraph />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { HomeSalesStats } from \"./homeSalesStats/HomeSalesStats\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n  };\r\n});\r\n\r\nconst HomeDashboard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <HomeSalesStats />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomeDashboard;\r\n","export default __webpack_public_path__ + \"static/media/consultations.524fbfbc.svg\";","export default __webpack_public_path__ + \"static/media/rx_icon.edf0143d.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Check,\r\n  LibraryBooksOutlined,\r\n  Person,\r\n  PostAdd,\r\n  Event,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    owner: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.owner}>Owner: Paolo</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.finish)}\r\n        >\r\n          <Check />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Event />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport ConsultationsIcon from \"../../../assets/consultations.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { ConsultationCard } from \"./ConsultationCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    consultationList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationsCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Consultations</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets to consult:{\" \"}\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={ConsultationsIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.consultationList}>\r\n          <ConsultationCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admitted.d82cca45.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport { LibraryBooksOutlined, Person, PostAdd } from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const AdmittanceCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.subTitle}>Owner: Paolo</Typography>\r\n          <Typography className={classes.subTitle}>Days admitted: 0</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AdmittedIcon from \"../../../assets/admitted.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { AdmittanceCard } from \"./AdmittanceCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    admittancesList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\nexport const AdmittancesCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Admitted</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets admitted:\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={AdmittedIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.admittancesList}>\r\n          <AdmittanceCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { ConsultationsCard } from \"./ConsultationsCard\";\r\nimport { AdmittancesCard } from \"./AdmittancesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(3),\r\n    },\r\n  };\r\n});\r\n\r\nconst HomePetQueues = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.container}>\r\n        <ConsultationsCard />\r\n        <AdmittancesCard />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomePetQueues;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomeDashboard from \"./homeDashboard/HomeDashboard\";\r\nimport HomePetQueues from \"./homePetQueues/HomePetQueues\";\r\n\r\nconst HomePage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.url}/dashboard`} component={HomeDashboard} />\r\n      <Route exact path={`${match.url}/pet-queues`} component={HomePetQueues} />\r\n      <Redirect to={`${match.url}/dashboard`} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Typography,\r\n  ListItem,\r\n  Collapse,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport {\r\n  Person,\r\n  PostAdd,\r\n  AccountBalance,\r\n  Event,\r\n  EventNote,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#2f2f2f\",\r\n    },\r\n    infoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    buttonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      zIndex: \"10\",\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n    clientMoreDetails: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientCard = ({ client, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnPaymentHistoryPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_TRANSACTIONS_MODAL\",\r\n        modalProps: {\r\n          index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddVeterinarianNotePressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_VETERINARIAN_NOTE_MODAL\",\r\n        modalProps: { index },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddAppointmentPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n          startDate: Date().toString(),\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleOnAppointmentsPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_APPOINTMENTS_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemPressed = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ListItem\r\n        button\r\n        className={classes.container}\r\n        onClick={handleOnItemPressed}\r\n      >\r\n        <div className={classes.infoContainer}>\r\n          <Avatar className={classes.petAvatar}></Avatar>\r\n          <div>\r\n            <Typography variant=\"h6\">{`Pet Name: ${client.pet.petName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Owner: ${client.clientName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Species: ${client.pet.species}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Breed: ${client.pet.petBreed}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Last Visit: ${moment(\r\n              client.lastVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Next Visit: ${moment(\r\n              client.nextVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.buttonsContainer}>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnPaymentHistoryPressed}\r\n          >\r\n            <AccountBalance />\r\n          </ButtonBase>\r\n          <ButtonBase className={classes.consultationButton}>\r\n            <Person />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAddVeterinarianNotePressed}\r\n          >\r\n            <PostAdd />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAppointmentsPressed}\r\n          >\r\n            <EventNote />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classes.consultationButton}\r\n            onClick={handleOnAddAppointmentPressed}\r\n          >\r\n            <Event />\r\n          </ButtonBase>\r\n          <ButtonBase\r\n            className={classNames(classes.consultationButton, classes.rxIcon)}\r\n          >\r\n            <img src={RxIcon} alt=\"rx\"></img>\r\n          </ButtonBase>\r\n        </div>\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <div className={classes.clientMoreDetails}>\r\n          <Typography>{`Address: ${client.address}`}</Typography>\r\n          <Typography>{`Contact Number: ${client.contactNumber}`}</Typography>\r\n          <Typography>{`Email: ${client.email}`}</Typography>\r\n          <Typography>{`Veterinarian Note: ${client.veterinarianNote}`}</Typography>\r\n        </div>\r\n      </Collapse>\r\n    </Paper>\r\n  );\r\n};\r\n","import { List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ClientCard } from \"./ClientCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      minHeight: \"100%\",\r\n      overflowY: \"auto\",\r\n      overflowX: \"hidden\",\r\n      padding: `0 ${theme.spacing(2)}`,\r\n      paddingBottom: theme.spacing(5), // This is added in order to have space in the end of the list.\r\n    },\r\n  };\r\n});\r\nexport const ClientsAllClientsList = ({ clients }) => {\r\n  const classes = useStyles();\r\n\r\n  const renderContent = () => {\r\n    return Object.keys(clients).map((key) => (\r\n      <ClientCard key={clients[key].ID} client={clients[key]} index={key} />\r\n    ));\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { Add, Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientsAllClientsHeader = ({ fuse, setClientResultsSearch }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const handleOnAddClientPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_CLIENT_MODAL\",\r\n      })\r\n    );\r\n  };\r\n  const handleSearchClientChanged = (value) => {\r\n    if (value !== \"\") {\r\n      const results = fuse.search(value);\r\n      setClientResultsSearch(results.map((result) => result.item));\r\n    } else {\r\n      setClientResultsSearch(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Search\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <Search color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onChange={(e) => {\r\n          handleSearchClientChanged(e.target.value);\r\n        }}\r\n      ></TextField>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<Add />}\r\n        onClick={handleOnAddClientPressed}\r\n      >\r\n        Add Client\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress, Paper } from \"@material-ui/core\";\r\n\r\nimport { fetchClients } from \"../clientsSlice\";\r\nimport { ClientsAllClientsList } from \"./ClientsAllClientsList\";\r\nimport { ClientsAllClientsHeader } from \"./ClientsAllClientListHeader\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAllClients = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const [clientsSearchResult, setClientsSearchResult] = useState(null);\r\n\r\n  // Create fuzzy text search\r\n  const options = useMemo(() => {\r\n    return {\r\n      includeScore: true,\r\n      keys: [\"clientName\"],\r\n    };\r\n  }, []);\r\n\r\n  const fuse = useMemo(() => new Fuse(clients, options), [clients, options]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (!isClientsLoading) {\r\n      return (\r\n        <>\r\n          <ClientsAllClientsHeader\r\n            setClientResultsSearch={setClientsSearchResult}\r\n            fuse={fuse}\r\n          />\r\n          <ClientsAllClientsList\r\n            clients={clientsSearchResult ? clientsSearchResult : clients}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <Paper className={classes.root}>{renderContent()}</Paper>;\r\n};\r\n\r\nexport default ClientsAllClients;\r\n","import { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, TextField, Button } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateAppointment, removeAppointment } from \"../../clientsSlice\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    icon: {\r\n      color: theme.palette.action.active,\r\n    },\r\n    textCenter: {\r\n      textAlign: \"center\",\r\n    },\r\n    commandButton: {\r\n      backgroundColor: \"rgba(255,255,255,0.65)\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n\r\n      justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      marginTop: theme.spacing(2),\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentTooltipHeader = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n\r\n  ...restProps\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleOnDeletePressed = () => {\r\n    const { appointment } = appointmentData;\r\n    dispatch(removeAppointment({ appointmentId: appointment.ID }));\r\n    setAppointmentVisible(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <AppointmentTooltip.Header\r\n      className={classes.header}\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <IconButton onClick={handleOnDeletePressed}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n      <IconButton onClick={() => setIsEditing(!isEditing)}>\r\n        <Edit color={isEditing ? \"primary\" : \"action\"} />\r\n      </IconButton>\r\n    </AppointmentTooltip.Header>\r\n  );\r\n};\r\n\r\nexport const ClientAppointmentTooltipContent = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n  onAppointmentMetaChanged,\r\n  ...restProps\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, control } = useForm();\r\n  const { appointment } = appointmentData;\r\n\r\n  const onSubmit = (data) => {\r\n    const formattedDate = moment(data.date).toISOString();\r\n    const newAppointment = {\r\n      ...appointment,\r\n      date: formattedDate,\r\n      veterinarianNote: data.veterinarianNotes,\r\n    };\r\n    setAppointmentVisible(false);\r\n    dispatch(updateAppointment({ appointment: newAppointment }));\r\n  };\r\n\r\n  return (\r\n    <AppointmentTooltip.Content\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <form\r\n        className={classes.form}\r\n        id=\"updateAppointmentForm\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Controller\r\n          id=\"appointment-date\"\r\n          name=\"date\"\r\n          control={control}\r\n          defaultValue={moment(appointment.date).toDate()}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={(props) => (\r\n            <DatePicker\r\n              disabled={!isEditing}\r\n              renderInput={(props) => (\r\n                <TextField\r\n                  {...props}\r\n                  size=\"small\"\r\n                  label=\"Appointment Date\"\r\n                  readOnly={!isEditing}\r\n                />\r\n              )}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"veterinarianNotes\"\r\n          control={control}\r\n          defaultValue={appointment.veterinarianNote}\r\n          rules={{}}\r\n          render={(props) => (\r\n            <TextField\r\n              disabled={!isEditing}\r\n              label=\"Notes\"\r\n              multiline\r\n              size=\"small\"\r\n              rows={5}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        {isEditing ? (\r\n          <Button form=\"updateAppointmentForm\">Update Appointment</Button>\r\n        ) : null}\r\n      </form>\r\n    </AppointmentTooltip.Content>\r\n  );\r\n};\r\n","import { MonthView } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const MonthCell = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnCellPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          startDate: String(props.startDate),\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return <MonthView.TimeTableCell onClick={handleOnCellPressed} {...props} />;\r\n};\r\n","import { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport React from \"react\";\r\n\r\nclass ClientAppointment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      data,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      notificationState,\r\n      setNotificationState,\r\n    } = this.props;\r\n    if (notificationState) {\r\n      const { appointment } = notificationState;\r\n\r\n      if (Array.isArray(appointment)) {\r\n        if (appointment[0].ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      } else {\r\n        if (appointment.ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      onClick,\r\n      classes,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      location,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    return (\r\n      <Appointments.Appointment\r\n        ref={this.ref}\r\n        onClick={({ target }) => {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: target.parentElement.parentElement,\r\n            data,\r\n          });\r\n        }}\r\n        {...restProps}\r\n      >\r\n        <div ref={this.ref}>{restProps.children}</div>\r\n      </Appointments.Appointment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientAppointment;\r\n// export const ClientAppointment = ({\r\n//   data,\r\n//   onClick,\r\n//   classes,\r\n//   setAppointmentVisible,\r\n//   onAppointmentMetaChange,\r\n//   location,\r\n//   ...restProps\r\n// }) => {\r\n//   useEffect(() => {}, [\r\n//     location,\r\n//     data,\r\n//     setAppointmentVisible,\r\n//     onAppointmentMetaChange,\r\n//   ]);\r\n\r\n//   return (\r\n//     <Appointments.Appointment\r\n//       onClick={({ target }) => {\r\n//         setAppointmentVisible(true);\r\n//         onAppointmentMetaChange({\r\n//           target: target.parentElement.parentElement,\r\n//           data,\r\n//         });\r\n//       }}\r\n//       {...restProps}\r\n//     />\r\n//   );\r\n// };\r\n","import { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  MonthView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport {\r\n  ClientAppointmentTooltipContent,\r\n  ClientAppointmentTooltipHeader,\r\n} from \"./ClientAppointmentTooltip\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MonthCell } from \"./ClientAppointmentsSchedulerMonthCell\";\r\nimport ClientAppointment from \"./ClientAppointment\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      borderRadius: \"10px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    appointmentWrapper: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsScheduler = ({ data }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [appointmentVisible, setAppointmentVisible] = useState(false);\r\n  const [notificationState, setNotificationState] = useState(location.state);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [appointmentMeta, setAppointmentMeta] = useState({\r\n    target: null,\r\n    data: {},\r\n  });\r\n\r\n  const handleOnAppointmentMetaChanged = ({ data, target }) => {\r\n    setIsEditing(false);\r\n    setAppointmentMeta({ data, target });\r\n  };\r\n\r\n  const tooltipHeader = connectProps(ClientAppointmentTooltipHeader, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n    };\r\n  });\r\n  const tooltipContent = connectProps(ClientAppointmentTooltipContent, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChanged: handleOnAppointmentMetaChanged,\r\n    };\r\n  });\r\n\r\n  const appointment = connectProps(ClientAppointment, () => {\r\n    return {\r\n      classes,\r\n      setAppointmentVisible: setAppointmentVisible,\r\n      onAppointmentMetaChange: handleOnAppointmentMetaChanged,\r\n      notificationState,\r\n      setNotificationState,\r\n    };\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Scheduler height=\"auto\" data={data} className={classes.root}>\r\n        <ViewState />\r\n\r\n        <MonthView timeTableCellComponent={MonthCell} />\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <Appointments appointmentComponent={appointment} />\r\n        <AppointmentTooltip\r\n          headerComponent={tooltipHeader}\r\n          contentComponent={tooltipContent}\r\n          visible={appointmentVisible}\r\n          onVisibilityChange={(visible) => setAppointmentVisible(visible)}\r\n          appointmentMeta={appointmentMeta}\r\n          onAppointmentMetaChange={handleOnAppointmentMetaChanged}\r\n        />\r\n\r\n        <AppointmentForm />\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n};\r\n","import { ClientAppointmentsScheduler } from \"./ClientAppointmentsScheduler\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientAppointmentsSchedulerContainer = () => {\r\n  const { appointments } = useSelector((state) => state.clients);\r\n  const data = appointments.map((ap) => {\r\n    return {\r\n      id: ap.ID,\r\n      startDate: new Date(ap.date),\r\n      endDate: moment(new Date(ap.date)).add(2, \"hours\").toDate(),\r\n      title: `${ap.client.clientName} - ${ap.client.pet.petName} : ${ap.type}`,\r\n      client: ap.client,\r\n      appointment: ap,\r\n    };\r\n  });\r\n\r\n  return <ClientAppointmentsScheduler data={data} />;\r\n};\r\nexport default ClientAppointmentsSchedulerContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAppointments } from \"../clientsSlice\";\r\nimport ClientAppointmentsScheduler from \"./ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAppointments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isAppointmentsLoading } = useSelector((state) => state.clients);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAppointments());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return <ClientAppointmentsScheduler />;\r\n  };\r\n\r\n  return <Card className={classes.root}>{renderContent()}</Card>;\r\n};\r\n\r\nexport default ClientsAppointments;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n  setSelectedClient,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { isClientsLoading, clients } = useSelector((state) => state.clients);\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  const renderClientNameField = () => {\r\n    if (!showAddItemSaleRow) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Autocomplete\r\n        loading={isClientsLoading}\r\n        options={clients}\r\n        getOptionLabel={(option) => option.clientName}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            variant=\"outlined\"\r\n            helperText=\"Enter client name here.\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {isClientsLoading ? (\r\n                    <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n        onChange={(_, data, reason) => {\r\n          if (reason === \"select-option\") {\r\n            setSelectedClient(data);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>{renderClientNameField()}</div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment, fetchClients } from \"../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: theme.spacing(1),\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  selectedClient,\r\n  setSelectedClient,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedClient({});\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(selectedClient.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>₱{Number(selectedItem.price).toFixed(2)}</TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            margin=\"dense\"\r\n            onChange={handleOnQuantityChange}\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>₱{Number(sales).toFixed(2)}</TableCell>\r\n        <TableCell>\r\n          {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n        </TableCell>\r\n        <TableCell>\r\n          {selectedItem.isIncentiveFixed\r\n            ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n            : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                2\r\n              )}`}\r\n        </TableCell>\r\n        <TableCell>₱{Number(netSales).toFixed(2)}</TableCell>\r\n        <TableCell>{selectedItem.category}</TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderItemField = () => {\r\n    if (Object.keys(selectedClient).length === 0) {\r\n      return \"Select a client first\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Product Name\"\r\n              size=\"small\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n        {selectedItem.name}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>{currentDate}</TableCell>\r\n      <TableCell>{selectedClient.clientName}</TableCell>\r\n      <TableCell>{renderItemField()}</TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientPaymentsTableHeader from \"./ClientPaymentsTableHeader\";\r\nimport { ClientPaymentsTableAddItemRow } from \"./ClientPaymentsTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTable = ({ data, columns }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ClientPaymentsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n        setSelectedClient={setSelectedClient}\r\n        selectedClient={selectedClient}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientPaymentsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              selectedClient={selectedClient}\r\n              setSelectedClient={setSelectedClient}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {cell.render(\"Cell\")}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientPaymentsTable } from \"./ClientPaymentsTable\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientPaymentsTableContainer = ({ itemSales }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.client.clientName,\r\n        col3: itemSale.item.name,\r\n        col4: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col5: itemSale.quantity,\r\n        col6: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col7: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col8: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col9: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col10: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Client\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col9\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col10\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    itemSales,\r\n  };\r\n\r\n  return <ClientPaymentsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientPaymentsTableContainer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      height: \"150px\",\r\n      alignItems: \"center\",\r\n      padding: \"1em\",\r\n      backgroundColor: \"#1D1D1D\",\r\n      \"&::before\": {\r\n        content: '\" \"',\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: \"8px\",\r\n        width: \"50%\",\r\n        top: \"-3px\",\r\n        borderRadius: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesCard = ({ title, value }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} elevation={0}>\r\n      <Typography style={{ fontWeight: \"bold\" }} align=\"center\">\r\n        {title}\r\n      </Typography>\r\n      <Typography>{`P${Number(value).toFixed(2)}`}</Typography>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      marginBottom: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    picker: {\r\n      height: \"100% !important\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesDatePicker = ({\r\n  onSalesDateChanged,\r\n  onSalesDateCategChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n\r\n  const datePickerViews = {\r\n    daily: [\"date\"],\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const [selectedSalesDateCateg, setSelectedSalesDateCateg] = useState(\"daily\");\r\n  const [selectedSalesDate, setSelectedSalesDate] = useState(currentDate);\r\n\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    setSelectedSalesDateCateg(value);\r\n    onSalesDateCategChanged({\r\n      salesDate: selectedSalesDate,\r\n      salesDateCateg: value,\r\n    });\r\n  };\r\n\r\n  const handleOnSalesDateChanged = (date) => {\r\n    const formattedDate = date.format(\"MM-DD-YYYY\").toString();\r\n    setSelectedSalesDate(formattedDate);\r\n    onSalesDateChanged({\r\n      salesDate: formattedDate,\r\n      salesDateCateg: selectedSalesDateCateg,\r\n    });\r\n  };\r\n\r\n  const renderPicker = () => {\r\n    if (selectedSalesDateCateg === \"overall\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <DatePicker\r\n        value={selectedSalesDate}\r\n        views={datePickerViews[selectedSalesDateCateg]}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n        )}\r\n        onChange={(value) => {\r\n          handleOnSalesDateChanged(value);\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        variant=\"outlined\"\r\n        value={selectedSalesDateCateg}\r\n        onChange={(e) => handleOnSalesDateCategChanged(e.target.value)}\r\n      >\r\n        <MenuItem value=\"overall\">All</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"daily\">Daily</MenuItem>\r\n      </Select>\r\n      {renderPicker()}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SalesCard } from \"./SalesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n\r\n      gridGap: \"1.5em\",\r\n      paddingBottom: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        gridTemplate: \"1fr / 1fr 1fr 1fr 1fr 1fr 1fr\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesStats = ({ dailySales, metadata }) => {\r\n  const classes = useStyles();\r\n\r\n  const [computedSales, setComputedSales] = useState(0);\r\n  const [computedSalesBloodTest, setComputedSalesBloodTest] = useState(0);\r\n  const [computedSalesGrooming, setComputedSalesGrooming] = useState(0);\r\n  const [computedSalesVetSales, setComputedSalesVetSales] = useState(0);\r\n  const [computedSalesStoreSales, setComputedSalesStoreSales] = useState(0);\r\n  const [salesTitle, setSalesTitle] = useState(\"\");\r\n\r\n  const computeSales = useCallback(() => {\r\n    let totalSales = 0;\r\n    let totalIncentives = 0;\r\n    Object.keys(dailySales).forEach((val) => {\r\n      if (val === \"Blood Test\") {\r\n        setComputedSalesBloodTest(dailySales[val].netSales);\r\n      } else if (val === \"Grooming\") {\r\n        setComputedSalesGrooming(dailySales[val].netSales);\r\n      } else if (val === \"Vet Sales\") {\r\n        setComputedSalesVetSales(dailySales[val].netSales);\r\n      } else if (val === \"Store Sales\") {\r\n        setComputedSalesStoreSales(dailySales[val].netSales);\r\n      } else {\r\n        totalSales += dailySales[val].netSales;\r\n      }\r\n    });\r\n    setComputedSales(totalSales - totalIncentives);\r\n  }, [setComputedSales, dailySales]);\r\n\r\n  const getSalesTitle = useCallback(() => {\r\n    const title =\r\n      String(metadata.salesDateCateg[0]).toUpperCase() +\r\n      String(metadata.salesDateCateg).substring(\r\n        1,\r\n        metadata.salesDateCateg.length\r\n      );\r\n    setSalesTitle(title);\r\n  }, [setSalesTitle, metadata]);\r\n\r\n  useEffect(() => {\r\n    computeSales();\r\n    getSalesTitle();\r\n  }, [computeSales, getSalesTitle]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesCard title={`${salesTitle} Sales`} value={computedSales} />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Blood Test`}\r\n        value={computedSalesBloodTest}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Grooming`}\r\n        value={computedSalesGrooming}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Store Sales`}\r\n        value={computedSalesStoreSales}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Vet Sales`}\r\n        value={computedSalesVetSales}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Net Sales `}\r\n        value={\r\n          computedSales +\r\n          computedSalesBloodTest +\r\n          computedSalesGrooming +\r\n          computedSalesStoreSales +\r\n          computedSalesVetSales\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchAllClientPayments } from \"../clientsSlice\";\r\nimport ClientPaymentsTableContainer from \"./ClientPaymentsTable/ClientPaymentsTableContainer\";\r\n\r\nimport moment from \"moment\";\r\nimport { SalesStats, SalesDatePicker } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientPayments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isPaymentsLoading, clientPayments, error } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n    dispatch(\r\n      fetchAllClientPayments({\r\n        salesDate: currentDate,\r\n        salesDateCateg: \"daily\",\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(clientPayments).length !== 0 && !isPaymentsLoading) {\r\n      return (\r\n        <>\r\n          <SalesStats\r\n            metadata={clientPayments.metadata}\r\n            dailySales={clientPayments.dailySales}\r\n          />\r\n          <ClientPaymentsTableContainer\r\n            itemSales={clientPayments.itemSales ? clientPayments.itemSales : []}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ClientsAllClients from \"./clientsAllClients/ClientsAllClients\";\r\nimport ClientsAppointments from \"./clientsAppointments/ClientsAppointments\";\r\nimport ClientPayments from \"./clientsPayments/ClientPayments\";\r\n\r\nconst ClientsPage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/all-clients`} component={ClientsAllClients} />\r\n\r\n      <Route\r\n        path={`${match.url}/appointments`}\r\n        component={ClientsAppointments}\r\n      />\r\n      <Route path={`${match.url}/payments`} component={ClientPayments} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ClientsPage;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\nconst InventoryItemsTableFooter = ({\r\n  gotoPage,\r\n  nextPage,\r\n  previousPage,\r\n  canNextPage,\r\n  canPreviousPage,\r\n  pageCount,\r\n  pageSize,\r\n  pageIndex,\r\n  itemsCount,\r\n}) => {\r\n  const classes = useStyles();\r\n  const renderCurrPageItemCount = () => {\r\n    const currPageItemCount =\r\n      pageSize * (pageIndex + 1) >= itemsCount\r\n        ? itemsCount\r\n        : pageSize * (pageIndex + 1);\r\n\r\n    return (\r\n      <Typography>{`Showing ${currPageItemCount} out of ${itemsCount} items`}</Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {renderCurrPageItemCount()}\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          FIRST\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          PREV\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          NEXT\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          LAST\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableFooter;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      alignItem: \"center\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItem: \"center\",\r\n      marginBottom: \"1em\",\r\n    },\r\n\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItemsTableHeader = ({\r\n  setPageSize,\r\n  pageSize,\r\n  handleSearchItemChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const showItemCountValues = [10, 20, 30, 40, 50];\r\n\r\n  const handleAddItemPressed = (_) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_ITEM_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemCountChange = (e) => {\r\n    setPageSize(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.container}>\r\n        <div></div>\r\n        <Button\r\n          className={classes.addItemButton}\r\n          variant=\"outlined\"\r\n          endIcon={<AddIcon />}\r\n          onClick={handleAddItemPressed}\r\n        >\r\n          Add Item\r\n        </Button>\r\n      </div>\r\n      <div className={classes.container}>\r\n        <div className={classes.itemCount}>\r\n          <Typography>Show &nbsp;</Typography>\r\n          <Select value={pageSize} onChange={handleOnItemCountChange}>\r\n            {showItemCountValues.map((itemCount) => (\r\n              <MenuItem key={itemCount} value={itemCount}>\r\n                {itemCount}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <Typography>&nbsp; entries</Typography>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Search\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <Search color=\"primary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(e) => {\r\n              handleSearchItemChanged(e.target.value);\r\n            }}\r\n          ></TextField>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableHeader;\r\n","import React from \"react\";\r\nimport { useTable, usePagination, useSortBy, useFilters } from \"react-table\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport InventoryItemsTableFooter from \"./InventoryItemsTableFooter\";\r\nimport InventoryItemsTableHeader from \"./InventoryItemsTableHeader\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n\r\n      backgroundColor: \"#1d1d1d\",\r\n      padding: \"1.5em\",\r\n      overflowX: \"auto\",\r\n    },\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryItemsTable = ({ data, columns, items }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setFilter,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const getCellProps = (cellInfo) => {\r\n    if (cellInfo.value === \"Out of Stock\") {\r\n      return {\r\n        className: classes.outOfStock,\r\n      };\r\n    } else if (cellInfo.value === \"In Stock\") {\r\n      return {\r\n        className: classes.inStock,\r\n      };\r\n    } else if (cellInfo.value === \"Discounted\") {\r\n      return {\r\n        className: classes.itemDiscounted,\r\n      };\r\n    }\r\n    return {\r\n      className: \"\",\r\n    };\r\n  };\r\n\r\n  const renderCell = (cell) => {\r\n    if (cell.column.id === \"col5\") {\r\n      return <Typography>₱{cell.render(\"Cell\")}</Typography>;\r\n    } else if (cell.column.id === \"col7\") {\r\n      const discountAmount =\r\n        (cell.row.values.col6 / 100) * cell.row.values.col5;\r\n      return (\r\n        <Typography>\r\n          ₱{cell.render(\"Cell\")}\r\n          {` (${discountAmount.toFixed(2)})`}\r\n        </Typography>\r\n      );\r\n    } else if (cell.column.id === \"col6\") {\r\n      return <Typography>{cell.render(\"Cell\")}%</Typography>;\r\n    }\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleManageItemPress = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MANAGE_ITEM_MODAL\",\r\n        modalProps: {\r\n          item: items[itemIndex],\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchItemChanged = (searchTerm) => {\r\n    setFilter(\"col1\", searchTerm);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventoryItemsTableHeader\r\n        pageSize={pageSize}\r\n        setPageSize={setPageSize}\r\n        handleSearchItemChanged={handleSearchItemChanged}\r\n      />\r\n      <Table {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <TableCell\r\n                  {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                >\r\n                  <div key={header.id} className={classes.tableHeader}>\r\n                    {header.render(\"Header\")}\r\n                    {header.isSorted ? (\r\n                      header.isSortedDesc ? (\r\n                        <ArrowDownwardIcon fontSize=\"small\" />\r\n                      ) : (\r\n                        <ArrowUpwardIcon fontSize=\"small\" />\r\n                      )\r\n                    ) : null}\r\n                  </div>\r\n                </TableCell>\r\n              ))}\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody>\r\n          {page.map((row, _) => {\r\n            prepareRow(row);\r\n            return (\r\n              <>\r\n                <TableRow key={row.id} {...row.getRowProps()}>\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <TableCell key={`col${index}`}>\r\n                        <div\r\n                          {...cell.getCellProps([\r\n                            {\r\n                              className: cell.column.className,\r\n                            },\r\n                            getCellProps(cell),\r\n                          ])}\r\n                        >\r\n                          {renderCell(cell)}\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell key={row.id}>\r\n                    <Button\r\n                      fullWidth\r\n                      endIcon={<EditIcon></EditIcon>}\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        handleManageItemPress(row.index);\r\n                      }}\r\n                    >\r\n                      Manage Item\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      <InventoryItemsTableFooter\r\n        canPreviousPage={canPreviousPage}\r\n        canNextPage={canNextPage}\r\n        previousPage={previousPage}\r\n        nextPage={nextPage}\r\n        gotoPage={gotoPage}\r\n        pageCount={pageCount}\r\n        pageSize={pageSize}\r\n        pageIndex={pageIndex}\r\n        itemsCount={rows.length}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { InventoryItemsTable } from \"./InventoryItemsTable\";\r\n\r\nconst InventoryItemsTableContainer = ({ items }) => {\r\n  const data = useMemo(() => {\r\n    return items.map((item) => {\r\n      let status = \"\";\r\n      const isDiscounted = item.discount > 0;\r\n      const discountAmount = isDiscounted\r\n        ? item.price * (item.discount / 100)\r\n        : 0;\r\n      // Check if the item is In Stock and if has discount\r\n      if (item.discount > 0 && item.inStock > 0) {\r\n        status = \"Discounted\";\r\n      } else if (item.discount === 0 && item.inStock > 0) {\r\n        status = \"In Stock\";\r\n      } else {\r\n        status = \"Out of Stock\";\r\n      }\r\n\r\n      return {\r\n        col1: item.name,\r\n        col2: item.category,\r\n        col3: item.inStock,\r\n        col4: status,\r\n        col5: Number(item.price).toFixed(2),\r\n        col6: item.discount,\r\n        col7: (item.price - discountAmount).toFixed(2),\r\n      };\r\n    });\r\n  }, [items]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Stock\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Original Price\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Discount\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Total Price\",\r\n        accessor: \"col7\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const mapStateToProps = {\r\n    data,\r\n    columns,\r\n    items,\r\n  };\r\n\r\n  return <InventoryItemsTable {...mapStateToProps} />;\r\n};\r\n\r\nexport default InventoryItemsTableContainer;\r\n","import { CircularProgress, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItems } from \"./inventoryItemsSlice\";\r\nimport InventoryItemsTableContainer from \"./InventoryItemsTable/InventoryItemsTableContainer\";\r\n\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItems = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, items, error } = useSelector(\r\n    (state) => state.inventoryItems\r\n  );\r\n  const { isLoading: isSearching, result } = useSelector(\r\n    (state) => state.inventorySearch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(clearItemsSearch());\r\n    dispatch(fetchItems());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading || isSearching) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <InventoryItemsTableContainer\r\n        items={result.length > 0 ? result : items}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InventoryItems;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\nimport { addItemSale } from \"../inventorySalesSlice\";\r\nimport { searchItems, clearItemsSearch } from \"../../inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addItemSale(selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.category}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{currentDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport InventorySalesTableHeader from \"./InventorySalesTableHeader\";\r\nimport { InventorySalesTableAddItemRow } from \"./InventorySalesTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTable = ({ data, columns }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventorySalesTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <InventorySalesTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { InventorySalesTable } from \"./InventorySalesTable\";\r\nimport moment from \"moment\";\r\n\r\nconst InventorySalesTableContainer = ({ itemSales }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item.name,\r\n        col3: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col4: itemSale.quantity,\r\n        col5: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col8: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    itemSales,\r\n  };\r\n\r\n  return <InventorySalesTable {...stateToProps} />;\r\n};\r\n\r\nexport default InventorySalesTableContainer;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItemSales } from \"./inventorySalesSlice\";\r\nimport InventorySalesTableContainer from \"./InventorySalesTable/InventorySalesTableContainer\";\r\nimport moment from \"moment\";\r\nimport { SalesDatePicker, SalesStats } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySales = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, itemSales, dailySales, metadata, error } = useSelector(\r\n    (state) => state.inventorySales\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n    dispatch(\r\n      fetchItemSales({ salesDate: currentDate, salesDateCateg: \"daily\" })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <>\r\n        <SalesStats metadata={metadata} dailySales={dailySales} />\r\n        <InventorySalesTableContainer itemSales={itemSales} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySales;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport InventoryItems from \"./inventoryItems/InventoryItems\";\r\nimport InventorySales from \"./inventorySales/InventorySales\";\r\n\r\nconst InventoryPage = ({ match, ...restProps }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/items`} component={InventoryItems} />\r\n      <Route path={`${match.url}/sales`} component={InventorySales} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n} from \"../../components/modals\";\r\n\r\nconst modalComponents = {\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n};\r\n\r\nconst InfoModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.infoModals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default InfoModalManager;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ItemCategoriesTableHeader = ({\r\n  toggleAddItemCategoryRow,\r\n  showAddItemCategoryRow,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemCategoryRow(!showAddItemCategoryRow);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemCategoryRow ? \"Cancel\" : \"Add\"}  Category`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemCategoriesTableHeader;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, TableCell, TableRow, Button } from \"@material-ui/core\";\r\nimport { addItemCategory } from \"../../../itemCategory/itemCategorySlice\";\r\n\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { showInfoModal } from \"../../../modals/infoModalSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr / 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ItemCategoriesTableAddItemRow = ({\r\n  showAddItemCategoryRow,\r\n  toggleAddItemCategoryRow,\r\n}) => {\r\n  const { categories } = useSelector((state) => state.itemCategories);\r\n  const { reset, handleSubmit, register, errors } = useForm({\r\n    defaultValues: {\r\n      name: \"\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemCategoryRow) {\r\n    return null;\r\n  }\r\n\r\n  const onSubmitPressed = (values) => {\r\n    if (\r\n      !categories.find(\r\n        (categ) =>\r\n          String(categ.name).toLowerCase() === String(values.name).toLowerCase()\r\n      )\r\n    ) {\r\n      dispatch(addItemCategory(values));\r\n    } else {\r\n      dispatch(\r\n        showInfoModal({\r\n          modalType: \"ERROR_MODAL\",\r\n          modalProps: {\r\n            message: \"Existing Category\",\r\n            isInfoModal: true,\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    reset();\r\n    toggleAddItemCategoryRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    reset();\r\n    toggleAddItemCategoryRow(false);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <form id=\"addItemCategoryForm\" onSubmit={handleSubmit(onSubmitPressed)}>\r\n          <TextField\r\n            fullWidth\r\n            name={\"name\"}\r\n            label=\"Category Name\"\r\n            inputRef={register({\r\n              required: true,\r\n            })}\r\n            error={!!errors.name}\r\n            helperText={!!errors.name ? \"Invalid Input\" : \"\"}\r\n          />\r\n        </form>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <div className={classes.buttonRows}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.submitButton}\r\n            form=\"addItemCategoryForm\"\r\n            type=\"submit\"\r\n          >\r\n            <Check />\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.cancelButton}\r\n            onClick={onCancelPressed}\r\n          >\r\n            <Cancel />\r\n          </Button>\r\n        </div>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ItemCategoriesTableHeader from \"./ItemCategoriesTableHeader\";\r\nimport { ItemCategoriesTableAddItemRow } from \"./ItemCategoriesTableAddItemRow\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteItemCategory } from \"../../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ItemCategoriesTable = ({ data, columns, categories }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemCategoryRow, toggleAddItemCategoryRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemCategoryDeleteButtonPressed = (itemIndex) => {\r\n    const itemCategory = categories[itemIndex];\r\n\r\n    dispatch(deleteItemCategory(itemCategory.ID));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ItemCategoriesTableHeader\r\n        toggleAddItemCategoryRow={toggleAddItemCategoryRow}\r\n        showAddItemCategoryRow={showAddItemCategoryRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ItemCategoriesTableAddItemRow\r\n              showAddItemCategoryRow={showAddItemCategoryRow}\r\n              toggleAddItemCategoryRow={toggleAddItemCategoryRow}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemCategoryDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ItemCategoriesTable } from \"./ItemCategoriesTable\";\r\nconst ItemCategoriesTableContainer = ({ categories }) => {\r\n  const data = useMemo(() => {\r\n    return categories.map((category) => {\r\n      return {\r\n        col1: category.name,\r\n      };\r\n    });\r\n  }, [categories]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col1\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    categories,\r\n  };\r\n\r\n  return <ItemCategoriesTable {...stateToProps} />;\r\n};\r\n\r\nexport default ItemCategoriesTableContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ItemCategoriesTableContainer from \"./ItemCategoriesTable/ItemCategoriesTableContainer\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ItemCategories = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, categories, error } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemCategories());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return <ItemCategoriesTableContainer categories={categories} />;\r\n  };\r\n\r\n  return <div className={classes.root}>{renderContent()}</div>;\r\n};\r\n\r\nexport default ItemCategories;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ItemCategories from \"./ItemCategories/ItemCategories\";\r\n\r\nconst AdminPage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/item-categories`} component={ItemCategories} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ModalManager from \"../features/modals/ModalManager\";\r\n\r\nimport PrivateLayout from \"../components/PrivateLayout\";\r\nimport LoginPage from \"../features/auth/login/loginPage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { checkAuth } from \"../features/auth/authSlice\";\r\n\r\nimport HomePage from \"../features/home/HomePage\";\r\nimport ClientsPage from \"../features/clients/ClientsPage\";\r\nimport InventoryPage from \"../features/inventory/InventoryPage\";\r\nimport InfoModalManager from \"../features/modals/InfoModalManager\";\r\nimport AdminPage from \"../features/admin/AdminPage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    padding: 0,\r\n    margin: 0,\r\n  }, // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  toastContainer: {\r\n    zIndex: \"1000000\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(checkAuth());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/auth/login\" component={LoginPage} />\r\n            <PrivateLayout path=\"/home\" component={HomePage} />\r\n            <PrivateLayout path=\"/clients\" component={ClientsPage} />\r\n            <PrivateLayout path=\"/inventory\" component={InventoryPage} />\r\n            <PrivateLayout path=\"/admin\" component={AdminPage} />\r\n            <Redirect from=\"/\" to=\"/home/dashboard\" />\r\n          </Switch>\r\n          <ModalManager />\r\n          <InfoModalManager />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  };\r\n  return renderContent();\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport inventoryItemsReducer from \"../features/inventory/inventoryItems/inventoryItemsSlice\";\r\nimport inventorySalesReducer from \"../features/inventory/inventorySales/inventorySalesSlice\";\r\nimport inventorySearchReducer from \"../features/inventory/inventorySearchSlice\";\r\nimport homeSalesStats from \"../features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice\";\r\nimport modalsReducer from \"../features/modals/modalSlice\";\r\nimport infoModalsReducer from \"../features/modals/infoModalSlice\";\r\nimport authReducer from \"../features/auth/authSlice\";\r\nimport drawerReducer from \"../features/drawer/drawerSlice\";\r\nimport notificationsReducer from \"../features/notifications/notificationsSlice\";\r\nimport clientsReducer from \"../features/clients/clientsSlice\";\r\nimport itemCategoriesReducer from \"../features/itemCategory/itemCategorySlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  inventoryItems: inventoryItemsReducer,\r\n  inventorySales: inventorySalesReducer,\r\n  inventorySearch: inventorySearchReducer,\r\n  homeSalesStats: homeSalesStats,\r\n  modals: modalsReducer,\r\n  infoModals: infoModalsReducer,\r\n  auth: authReducer,\r\n  drawer: drawerReducer,\r\n  clients: clientsReducer,\r\n  notifications: notificationsReducer,\r\n  itemCategories: itemCategoriesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot){\r\n    module.hot.accept(\"./rootReducer\", () => {\r\n        const newRootReducer = require('./rootReducer');\r\n        store.replaceReducer(newRootReducer);\r\n    })\r\n}\r\n\r\nexport default store;","import { CssBaseline, StylesProvider, ThemeProvider } from \"@material-ui/core\";\r\nimport { LocalizationProvider } from \"@material-ui/lab\";\r\nimport AdapterMoment from \"@material-ui/lab/AdapterMoment\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./app/App\";\r\nimport store from \"./app/store\";\r\nimport { darkTheme } from \"./consts\";\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <CssBaseline />\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </LocalizationProvider>\r\n      </ThemeProvider>\r\n    </StylesProvider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrender();\r\n"],"sourceRoot":""}