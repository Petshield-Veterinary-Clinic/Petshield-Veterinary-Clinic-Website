{"version":3,"sources":["features/modals/modalSlice.js","features/modals/infoModalSlice.js","components/modals/ErrorModal.jsx","components/modals/LoadingModal.jsx","components/modals/SuccessModal.jsx","consts/config.js","consts/theme.js","consts/index.js","api/axios.js","api/auth.js","features/auth/authSlice.js","components/modals/ConfirmationModal.jsx","app/history.js","components/modals/LogoutModal.jsx","utils/formatter.js","components/modals/SalesBreakdownModal.jsx","components/modals/NetSalesBreakdownModal.jsx","api/clients.js","features/clients/clientsSlice.js","features/clients/clientsModals/AddClientModal/AddClientForm.jsx","features/clients/clientsModals/AddClientModal/AddClientModal.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableHeader.jsx","api/inventory.js","features/inventory/inventorySearchSlice.js","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableAddItemRow.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTable.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsTable/ClientTransactionsTableContainer.jsx","features/clients/clientsModals/ClientTransactionsModal/ClientTransactionsModal.jsx","features/clients/clientsModals/VeterinarianNoteModal/VeterinarianNoteModal.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentForm.jsx","features/clients/clientsModals/AddAppointmentModal/AddAppointmentModal.jsx","features/clients/clientsModals/ClientAppointmentsModal/ClientAppointmentsModal.jsx","features/inventory/inventoryItems/inventoryItemsSlice.js","api/item_category.js","features/itemCategory/itemCategorySlice.js","features/inventory/inventoryModals/InventoryAddItemModal.jsx","features/inventory/inventoryModals/InventoryManageItemModal.jsx","features/inventory/inventoryModals/InventoryModifyItemModal.jsx","features/inventory/inventoryModals/InventoryDiscountItemModal.jsx","features/inventory/inventorySales/inventorySalesSlice.js","features/modals/ModalManager.jsx","features/inventory/inventoryModals/InventoryAddItemSaleConfirmationModal.jsx","features/inventory/inventoryModals/InventoryDeleteItemSaleConfirmationModal.jsx","features/drawer/drawerSlice.js","api/notification.js","features/notifications/notificationsSlice.js","features/notifications/NotificationItem.jsx","features/notifications/NotificationsList.jsx","features/notifications/Notifications.jsx","components/CustomAppBar.jsx","assets/house.svg","assets/all_clients.svg","assets/all_items.svg","assets/appointments.svg","assets/clients.svg","assets/dashboard.svg","assets/inventory.svg","assets/item_transactions.svg","assets/payments.svg","assets/pet_queue.svg","components/CustomDrawer.jsx","components/PrivateLayout.jsx","features/auth/login/loginForm.jsx","assets/login_background.png","assets/logo.png","features/auth/login/loginPage.jsx","api/stats.js","features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice.js","features/home/homeDashboard/homeSalesStats/HomeSalesStatsDatePicker.jsx","features/home/homeDashboard/homeSalesStats/components/HomeSalesStatsTooltip.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStatsGraph.jsx","features/home/homeDashboard/homeSalesStats/HomeSalesStats.jsx","features/home/homeDashboard/HomeDashboard.jsx","assets/consultations.svg","assets/rx_icon.png","features/home/homePetQueues/ConsultationCard.jsx","features/home/homePetQueues/ConsultationsCard.jsx","assets/admitted.svg","features/home/homePetQueues/AdmittanceCard.jsx","features/home/homePetQueues/AdmittancesCard.jsx","features/home/homePetQueues/HomePetQueues.jsx","features/home/HomePage.jsx","features/clients/clientsAllClients/ClientCard.jsx","features/clients/clientsAllClients/ClientsAllClientsList.jsx","features/clients/clientsAllClients/ClientsAllClientListHeader.jsx","features/clients/clientsAllClients/ClientsAllClients.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentTooltip.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerMonthCell.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointment.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsScheduler.jsx","features/clients/clientsAppointments/ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer.jsx","features/clients/clientsAppointments/ClientsAppointments.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableHeader.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableAddItemRow.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTable.jsx","features/clients/clientsPayments/ClientPaymentsTable/ClientPaymentsTableContainer.jsx","components/sales/SalesCard.jsx","components/sales/SalesDatePicker.jsx","components/sales/SalesStats.jsx","features/clients/clientsPayments/ClientPayments.jsx","features/clients/ClientsPage.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableFooter.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableHeader.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTable.jsx","features/inventory/inventoryItems/InventoryItemsTable/InventoryItemsTableContainer.jsx","features/inventory/inventoryItems/InventoryItems.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableHeader.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableAddItemRow.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTable.jsx","features/inventory/inventorySales/InventorySalesTable/InventorySalesTableContainer.jsx","features/inventory/inventorySales/InventorySales.jsx","features/inventory/InventoryPage.jsx","features/modals/InfoModalManager.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableHeader.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableAddItemRow.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTable.jsx","features/admin/ItemCategories/ItemCategoriesTable/ItemCategoriesTableContainer.jsx","features/admin/ItemCategories/ItemCategories.jsx","features/admin/AdminPage.jsx","app/App.jsx","app/rootReducer.js","app/store.js","index.jsx"],"names":["modalsSlice","createSlice","name","initialState","modalType","modalProps","reducers","showModal","state","action","payload","hideModal","_","actions","infoModals","showInfoModal","hideInfoModal","ErrorModal","isVisible","message","duration","isInfoModal","useState","open","setOpen","dispatch","useDispatch","Dialog","onClose","TransitionProps","onExited","onEnter","setTimeout","DialogTitle","DialogContent","DialogContentText","useStyles","makeStyles","theme","loadingIndicator","display","justifyContent","alignItems","padding","spacing","LoadingModal","classes","className","CircularProgress","color","SuccessModal","config","API_BASE_URL","WS_BASE_URL","WS_TIMEOUT","darkTheme","responsiveFontSizes","createMuiTheme","palette","mode","primary","main","secondary","components","MuiMenu","styleOverrides","MuiCard","root","backgroundColor","MuiPaper","MuiTableCell","textAlign","disableAlign","drawerWidth","appointmentVaccineTypes","appointmentVaccineReoccuranceTypes","appointmentFollowUpReoccuranceTypes","appointmentFollowUpTypes","instance","axios","create","baseURL","headers","setToken","token","defaults","common","Authorization","login","credentials","a","post","response","data","Error","error","loginWithToken","get","authSlice","user","isLoading","loginStart","loginSuccess","authToken","localStorage","setItem","loginFailure","logoutStart","logoutSuccess","logoutFailure","checkAuthStart","checkAuthSuccess","checkAuthFailure","ConfirmationModal","title","handleNegativePressed","handlePositivePressed","DialogActions","Button","variant","onClick","createBrowserHistory","LogoutModal","clear","history","replace","currencyFormatter","number","Intl","NumberFormat","style","currency","format","header","gridTemplate","placeItems","fontWeight","content","flexDirection","gap","item","column","fontSize","headerTitle","footer","addClient","client","branchName","searchClients","searchTerm","updateClient","patch","ID","addClientPayment","clientId","itemId","quantity","salesDate","salesDateCateg","fetchClientPaymentHistory","fetchClientAppointments","removeAppointment","appointmentId","delete","addAppointment","appointment","updateAppointment","handleOnFailure","clientsSlice","clients","paymentHistory","appointments","clientAppointments","clientPayments","isClientsLoading","isPaymentsLoading","isAppointmentsLoading","isClientSearchingLoading","fetchClientsStart","fetchClientsSuccess","newClients","forEach","fetchClientsError","searchClientsStart","searchClientsSuccess","searchClientsError","addClientStart","addClientSuccess","addClientError","updateClientStart","updateClientSuccess","updateClientsError","addClientPaymentStart","addClientPaymentSuccess","addClientPaymentError","fetchClientPaymentHistoryStart","fetchClientPaymentHistorySuccess","fetchClientPaymentHistoryError","fetchAllClientPaymentsStart","fetchAllClientPaymentsSuccess","fetchAllClientPaymentsError","addAppointmentStart","addAppointmentSuccess","addAppointmentError","updateAppointmentStart","updateAppointmentSuccess","updateAppointmentError","removeAppointmentStart","removeAppointmentSuccess","removeAppointmentError","fetchAppointmentsStart","fetchAppointmentsSuccess","fetchAppointmentsError","fetchClientAppointmentsStart","fetchClientAppointmentsSuccess","fetchClientAppointmentsError","updateClientError","fetchClients","getState","auth","getItem","WebSocket","onmessage","e","JSON","parse","metadata","apiAddClientPayment","newPayment","fetchAllClientPayments","AddClientForm","onSubmit","useForm","handleSubmit","register","errors","form","id","TextField","field","label","inputRef","required","clientName","address","fieldGroup","type","InputProps","startAdornment","InputAdornment","position","pattern","contactNumber","petName","petSpecies","petBreed","marginBottom","gridGap","paddingBottom","breakpoints","up","width","itemCount","ClientTransactionsTableHeader","toggleAddItemSaleRow","startIcon","getItemsWithSearchTerm","addItem","parsedItem","price","Number","incentive","modifyItem","incentiveAmount","incentiveRate","discount","deleteItem","discountItem","addItemSale","itemQuantity","deleteItemSale","inventorySearchSlice","result","searchItemsStart","searchItemsSuccess","searchItemsFailure","clearItemsSearch","searchItems","items","height","quantityCell","buttonRows","gridTemplateColumns","submitButton","borderColor","cancelButton","ClientTransactionsTableAddItemRow","showAddItemSaleRow","selectedItem","setSelectedItem","setQuantity","currentDate","moment","Date","now","useSelector","inventorySearch","handleOnQuantityChange","value","target","parseInt","inStock","resetValues","onSubmitPressed","onCancelPressed","debouncedSearch","debounce","handleOnSearchTermChange","TableRow","TableCell","Typography","Autocomplete","loading","options","filter","getOptionLabel","option","renderInput","params","size","onChange","endAdornment","reason","sales","netSales","isIncentiveFixed","toFixed","Object","keys","length","fullWidth","salesCategory","Check","Cancel","renderItemDetails","overflow","showItemCountButtons","showItemCountField","tableHeader","pagination","paddingTop","border","borderRadius","itemDiscounted","blue","outOfStock","deleteButton","ClientTransactionsTable","columns","page","setPage","rowsPerPage","setRowsPerPage","useTable","useSortBy","getTableProps","headerGroups","prepareRow","rows","renderCell","cell","render","TableContainer","Table","stickyHeader","TableHead","map","headerGroup","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","TableBody","container","slice","row","getRowProps","cells","index","getCellProps","itemIndex","Delete","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","event","ClientTransactionsTableContainer","stateToProps","useMemo","itemSale","col1","CreatedAt","col2","col3","col4","col5","col6","col7","incentives","col8","col9","category","Header","accessor","AddAppointmentForm","startDate","isVaccine","clientIndex","defaultClient","pet","key","newClientName","control","defaultValue","rules","restProps","getOptionSelected","helperText","val","toDate","props","DatePicker","allowSameDateSelection","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","reoccurance","multiline","hasAppointment","white","dark","selected","CustomDay","date","selectedDate","_selectedDates","PickersDayComponentProps","adjustedDate","tz","undefined","find","isSame","isSelected","PickersDay","classnames","handleError","inventorySlice","itemSales","fetchItemsStart","fetchItemsSuccess","fetchItemsFailure","addItemStart","__","addItemSuccess","addItemFailure","modifyItemStart","modifyItemSuccess","newItem","modifyItemFailure","discountItemStart","discountItemSuccess","discountItemFailure","deleteItemStart","deleteItemSuccess","deleteItemFailure","getItemCategories","addItemCategory","itemCategoryDetails","deleteItemCategory","itemCategoryId","itemCategorySlice","categories","fetchItemCategoriesStart","fetchItemCategoriesSuccess","fetchItemCategoriesFailure","addItemCategoryStart","addItemCategorySuccess","addItemCategoryFailure","deleteItemCategoryStart","deleteItemCategorySuccess","deleteItemCategoryFailure","fetchItemCategories","apiGetItemCategories","addItemForm","addItemFormField","margin","flexGrow","incentiveFieldsWrapper","AddItemForm","setIncentiveFixed","itemCategories","defaultValues","remarks","noValidate","min","as","onFocus","FormControlLabel","Checkbox","checked","disabled","max","deleteBtn","ModifyItemForm","itemDetails","DiscountItemForm","autoFocus","handleOnError","inventorySalesSlice","dailySales","fetchItemSalesStart","fetchItemSalesSuccess","fetchItemSalesError","addItemSaleStart","addItemSaleSuccess","addItemSaleFailure","deleteItemSaleStart","deleteItemSaleSuccess","deleteItemSaleFailure","fetchItemSales","inventorySales","addItemSaleToApi","newItemSale","modalComponents","ADD_ITEM_MODAL","handleOnClose","addItemToApi","ADD_SALE_CONFIRMATION_MODAL","DELETE_SALE_CONFIRMATION_MODAL","deleteItemSaleFromApi","deletedItemSale","MANAGE_ITEM_MODAL","deleteItemFromApi","MODIFY_ITEM_MODAL","updatedItem","modifyItemFromApi","DISCOUNT_ITEM_MODAL","discountItemFromApi","LOADING_MODAL","ERROR_MODAL","SUCCESS_MODAL","LOGOUT_MODAL","ADD_CLIENT_MODAL","align","parsedData","species","apiAddClient","newClient","ADD_APPOINTMENT_MODAL","setIsVaccine","useEffect","formattedDate","toISOString","apiAddAppointment","newAppointment","CLIENT_TRANSACTIONS_MODAL","apiFetchClientPaymentHistory","fullScreen","CLIENT_APPOINTMENTS_MODAL","setSelectedDate","useHistory","handleOnDateChanged","push","apiFetchClientAppointments","LocalizationProvider","dateAdapter","AdapterDateFns","DayPicker","disableHighlightToday","renderDay","allowKeyboardControl","CLIENT_VETERINARIAN_NOTE_MODAL","veterinarianNote","setVeterinarianNote","apiUpdateClient","updatedClient","SALES_BREAKDOWN_MODAL","breakdown","setBreakdown","generateBreakdown","useCallback","groupedItems","console","log","v","prevValue","NET_SALES_BREAKDOWN_MODAL","breakdowns","setBreakdowns","breakdownItem","ModalManager","modals","Modal","drawerSlice","isOpen","toggleDrawer","clearNotifications","updateNotification","notificationId","notificationsSlice","notifications","fetchNotificationsStart","fetchNotificationsSuccess","notificationsMap","n","i","fetchNotificationsError","clearNotificationsStart","clearNotificationsSuccess","clearNotificationsError","updateNotificationStart","updateNotificationSuccess","updateNotificationError","seen","opacity","NotificationItem","notif","onNotificationPressed","setSeen","ListItem","button","Divider","maxHeight","NotificationsList","onClearNotificationsPressed","List","k","Notifications","anchorEl","setAnchorEl","Boolean","handleOnNotificationPressed","notification","apiUpdateNotifications","handleOnClearNotificationsPressed","apiClearNotifications","IconButton","currentTarget","Badge","badgeContent","Menu","keepMounted","appBar","marginLeft","menuButton","marginRight","grow","appbarTitles","dashboard","payments","CustomAppBar","appbarTitle","setAppbarTitle","location","useLocation","isMenuOpen","splittedPathname","pathname","split","handleMenuClose","handleOnSignoutPressed","AppBar","Toolbar","aria-label","edge","AccountCircle","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","toolbar","mixins","drawer","flexShrink","drawerPaper","nested","paddingLeft","drawerIcon","fill","CustomDrawer","home","inventory","admin","expandedItems","setExpandedItems","menuItems","handleOnClick","icon","HomeIcon","subItems","DashboardIcon","path","ClientsIcon","AllClientsIcon","PaymentsIcon","AppointmentsIcon","InventoryIcon","AllItemsIcon","ItemTransactionIcon","mIcon","Settings","Category","Fragment","ListItemIcon","src","beforeInjection","svg","classList","add","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","subItem","Link","to","handleDrawerToggle","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","smDown","PrivateLayout","Component","textField","LoginForm","showPassword","setShowPassword","username","password","background","top","left","backgroundImage","bg","backgroundPosition","backgroundSize","backgroundRepeat","maxWidth","placeContent","zIndex","centerItem","placeSelf","logo","LoginPage","loginUser","Paper","elevation","alt","getItemSalesStats","homeSalesStatsSlice","stats","fetchItemSalesStatsStart","fetchItemSalesStatsSuccess","fetchItemSalesStatsFailure","HomeSalesStatsDatePicker","setSalesDateCateg","setSalesDate","getItemSalesStatesFromApi","fetchItemSalesStats","views","monthly","yearly","HomeSalesStatsToolip","active","Card","filteredSales","renderData","tooltip","HomeSalesStatsGraph","homeSalesStats","lineData","setLineData","pieData","setPieData","pieColors","Grooming","default","pieMap","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","PieChart","Pie","HomeSalesStats","toUpperCase","HomeDashboard","consultationInfoContainer","consultationButtonsContainer","consultationButton","petAvatar","owner","finish","rxIcon","ConsultationCard","Avatar","ButtonBase","PostAdd","Person","LibraryBooksOutlined","classNames","Event","RxIcon","subTitle","consultationList","marginTop","ConsultationsCard","CardContent","ConsultationsIcon","AdmittanceCard","admittancesList","AdmittancesCard","AdmittedIcon","HomePetQueues","HomePage","match","exact","url","infoContainer","buttonsContainer","clientMoreDetails","ClientCard","handleOnPaymentHistoryPressed","handleOnAddVeterinarianNotePressed","handleOnAddAppointmentPressed","toString","handleOnAppointmentsPressed","lastVisit","nextVisit","AccountBalance","EventNote","email","minHeight","overflowY","overflowX","ClientsAllClientsList","ClientsAllClientsHeader","apiSearchClients","results","handleSearchClientChanged","Search","ClientsAllClients","clientsSearchResult","setClientsSearchResult","setClientResultsSearch","textCenter","commandButton","ClientAppointmentTooltipHeader","children","appointmentData","setIsEditing","isEditing","setAppointmentVisible","apiRemoveAppointment","Edit","ClientAppointmentTooltipContent","onAppointmentMetaChanged","Content","veterinarianNotes","apiUpdateAppointment","newAppointments","readOnly","MonthCell","TimeTableCell","String","ClientAppointment","ref","React","createRef","this","onAppointmentMetaChange","notificationState","setNotificationState","Array","isArray","current","parentElement","Appointment","appointmentWrapper","flexWrap","ClientAppointmentsScheduler","appointmentVisible","appointmentMeta","setAppointmentMeta","handleOnAppointmentMetaChanged","tooltipHeader","connectProps","tooltipContent","timeTableCellComponent","appointmentComponent","headerComponent","contentComponent","visible","onVisibilityChange","ClientAppointmentsSchedulerContainer","ap","endDate","ClientsAppointments","InventorySalesTableHeader","setSelectedClient","ClientPaymentsTableAddItemRow","selectedClient","ClientPaymentsTable","ClientPaymentsTableHeader","ClientPaymentsTableContainer","col10","SalesCard","includes","picker","SalesDatePicker","onSalesDateChanged","onSalesDateCategChanged","datePickerViews","daily","selectedSalesDateCateg","setSelectedSalesDateCateg","selectedSalesDate","setSelectedSalesDate","handleOnSalesDateCategChanged","handleOnSalesDateChanged","SalesStats","miscSales","setMiscSales","bloodTestSales","setBloodTestSales","groomingSales","setGroomingSales","vetSales","setVetSales","storeSales","setStoreSales","setNetSales","salesTitle","setSalesTitle","computeSales","totalSales","totalNetSales","miscSalesItems","salesItems","getSalesTitle","substring","ClientPayments","ClientsPage","buttonContainer","InventoryItemsTableFooter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","pageCount","pageSize","pageIndex","itemsCount","currPageItemCount","renderCurrPageItemCount","alignItem","InventoryItemsTableHeader","setPageSize","handleSearchItemChanged","addItemButton","endIcon","InventoryItemsTable","useFilters","usePagination","setFilter","discountAmount","values","cellInfo","InventoryItemsTableContainer","mapStateToProps","status","InventoryItems","inventoryItems","isSearching","InventorySalesTableAddItemRow","InventorySalesTable","InventorySalesTableContainer","InventorySales","InventoryPage","InfoModalManager","ItemCategoriesTableHeader","toggleAddItemCategoryRow","showAddItemCategoryRow","ItemCategoriesTableAddItemRow","reset","categ","toLowerCase","apiAddItemCategory","ItemCategoriesTable","onItemCategoryDeleteButtonPressed","itemCategory","apiDeleteItemCategory","ItemCategoriesTableContainer","ItemCategories","AdminPage","toastContainer","App","currentToken","from","rootReducer","combineReducers","inventoryItemsReducer","inventorySalesReducer","inventorySearchReducer","modalsReducer","infoModalsReducer","authReducer","drawerReducer","clientsReducer","notificationsReducer","itemCategoriesReducer","store","configureStore","reducer","ReactDOM","StylesProvider","injectFirst","ThemeProvider","AdapterMoment","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.557eab04.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nlet initialState = {\r\n    modalType : null,\r\n    modalProps: {},\r\n}\r\n\r\nconst modalsSlice = createSlice({\r\n    name: \"modals\",\r\n    initialState,\r\n    reducers: {\r\n        showModal(state, action) {\r\n            state.modalType = action.payload.modalType;\r\n            state.modalProps = action.payload.modalProps;\r\n        },\r\n        hideModal(state, _) {\r\n            state.modalType = '';\r\n            state.modalProps = {};\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default modalsSlice.reducer;\r\n\r\nexport const {showModal, hideModal} = modalsSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n  modalType: null,\r\n  modalProps: {},\r\n};\r\n\r\nconst infoModals = createSlice({\r\n  name: \"infoModal\",\r\n  initialState,\r\n  reducers: {\r\n    showInfoModal(state, action) {\r\n      state.modalType = action.payload.modalType;\r\n      state.modalProps = action.payload.modalProps;\r\n    },\r\n    hideInfoModal(state, _) {\r\n      state.modalType = \"\";\r\n      state.modalProps = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport default infoModals.reducer;\r\n\r\nexport const { showInfoModal, hideInfoModal } = infoModals.actions;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nimport { hideInfoModal } from \"../../features/modals/infoModalSlice\";\r\n\r\nexport const ErrorModal = ({ isVisible, message, duration, isInfoModal }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    if (isInfoModal) {\r\n      dispatch(hideInfoModal());\r\n    } else {\r\n      dispatch(hideModal());\r\n    }\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 2000\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited, onEnter: handleOnEnter }}\r\n    >\r\n      <DialogTitle>Error!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CircularProgress, Dialog, DialogContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const LoadingModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogContent className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nexport const SuccessModal = ({ isVisible, message, duration }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setTimeout(\r\n      () => {\r\n        setOpen(!isVisible);\r\n      },\r\n      duration ? duration : 800\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited, onEnter: handleOnEnter }}\r\n    >\r\n      <DialogTitle>Success!</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","const prod = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-prod.herokuapp.com\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-prod.herokuapp.com`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst dev = {\r\n  API_BASE_URL: \"https://petshield-veterinary-api-dev.herokuapp.com\",\r\n  WS_BASE_URL: `wss://petshield-veterinary-api-dev.herokuapp.com`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nconst localDev = {\r\n  API_BASE_URL: \"http://localhost:8000\",\r\n  WS_BASE_URL: `ws://localhost:8000`,\r\n  WS_TIMEOUT: 25000,\r\n};\r\n\r\nexport const config =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? prod\r\n    : process.env.NODE_ENV === \"production\"\r\n    ? prod\r\n    : localDev;\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nexport const darkTheme = responsiveFontSizes(\r\n  createMuiTheme({\r\n    palette: {\r\n      mode: \"dark\",\r\n      primary: {\r\n        main: \"#1e88e5\",\r\n      },\r\n      secondary: {\r\n        main: \"#26a69a\",\r\n      },\r\n    },\r\n    components: {\r\n      MuiMenu: {\r\n        styleOverrides: {\r\n          padding: \"1em\",\r\n        },\r\n      },\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: \"#1D1D1D\",\r\n          },\r\n        },\r\n      },\r\n      MuiTableCell: {\r\n        styleOverrides: {\r\n          root: {\r\n            textAlign: \"center\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  {\r\n    disableAlign: true,\r\n  }\r\n);\r\n","export const drawerWidth = 240;\r\nexport const itemCategories = [\r\n  \"Store Sales\",\r\n  \"Vet Sales\",\r\n  \"Service\",\r\n  \"Grooming\",\r\n  \"Blood Test\",\r\n  \"Confinement/Boarding\",\r\n];\r\n\r\n/**\r\n-Deworming\r\n-5 in 1\r\n-6 in 1\r\n-8 in 1\r\n-Kennel Cough\r\n-ProHeart\r\n-4 in 1\r\n-Anti-Rabies\r\n- Canglob P\r\n-Canglob D\r\n\r\n */\r\n\r\nexport const appointmentVaccineTypes = [\r\n  \"Deworming\",\r\n  \"5 in 1\",\r\n  \"6 in 1\",\r\n  \"8 in 1\",\r\n  \"Kennel Cough\",\r\n  \"ProHeart\",\r\n  \"4 in 1\",\r\n  \"Anti-Rabies\",\r\n  \"Canglob P\",\r\n  \"Canglob D\",\r\n];\r\n\r\nexport const appointmentVaccineReoccuranceTypes = [\r\n  \"1 Weeks\",\r\n  \"2 Weeks\",\r\n  \"1 Year\",\r\n];\r\n\r\nexport const appointmentFollowUpReoccuranceTypes = [\r\n  \"3 Days\",\r\n  \"7 Days\",\r\n  \"14 Days\",\r\n  \"30 Days\",\r\n];\r\n\r\nexport const appointmentFollowUpTypes = [\r\n  \"Check-Up\",\r\n  \"Long Term Medication\",\r\n  \"Post Surgery\",\r\n  \"Screening\",\r\n];\r\n\r\nexport * from \"./config\";\r\nexport * from \"./theme\";\r\n","import axios from \"axios\";\r\nimport { config } from \"../consts\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: config.API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const setToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default instance;\r\n","import axios from \"./axios\";\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`/auth/login`, credentials);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n\r\nexport const loginWithToken = async () => {\r\n  const response = await axios.get(`/users/token`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error.message);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login as loginUser, loginWithToken } from \"../../api/auth\";\r\nimport { setToken } from \"../../api/axios\";\r\nimport { showModal } from \"../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  user: {},\r\n  token: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    loginStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    loginSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.authToken;\r\n      setToken(action.payload.authToken);\r\n      localStorage.setItem(\"token\", action.payload.authToken);\r\n    },\r\n    loginFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logoutStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    logoutSuccess(state, _) {\r\n      state.user = {};\r\n      state.token = null;\r\n      state.isLoading = false;\r\n    },\r\n    logoutFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    checkAuthStart(state, _) {\r\n      state.isLoading = true;\r\n    },\r\n    checkAuthSuccess(state, action) {\r\n      state.user = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    checkAuthFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  checkAuthStart,\r\n  checkAuthSuccess,\r\n  checkAuthFailure,\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logoutFailure,\r\n  logoutStart,\r\n  logoutSuccess,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const logIn = (credentials) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginStart());\r\n    const user = await loginUser(credentials);\r\n    dispatch(loginSuccess(user));\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.message));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n  const currentToken = localStorage.getItem(\"token\");\r\n  setToken(currentToken);\r\n  try {\r\n    dispatch(checkAuthStart());\r\n    const user = await loginWithToken(currentToken);\r\n\r\n    dispatch(checkAuthSuccess(user));\r\n  } catch (error) {\r\n    dispatch(checkAuthFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.clear();\r\n  try {\r\n    dispatch(logoutStart());\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutFailure(error));\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nconst ConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  handleNegativePressed,\r\n  handlePositivePressed,\r\n}) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"text\" onClick={handleNegativePressed}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"text\" onClick={handlePositivePressed}>\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nimport { logout } from \"../../features/auth/authSlice\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport history from \"../../app/history\";\r\n\r\nexport const LogoutModal = ({ isVisible, title, message }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(logout());\r\n    history.replace(\"/auth/login\");\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LogoutModal;\r\n","export const currencyFormatter = (number) => {\r\n  const formatter = new Intl.NumberFormat(\"en-PH\", {\r\n    style: \"currency\",\r\n    currency: \"PHP\",\r\n  });\r\n  return formatter.format(number);\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { currencyFormatter } from \"../../utils/formatter\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    header: {\r\n      display: \"grid\",\r\n      gridTemplate: \" 1fr / 1fr 1fr 1fr 1fr 1fr\",\r\n      placeItems: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    content: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"1em\",\r\n    },\r\n    item: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr 1fr 1fr 1fr\",\r\n    },\r\n    column: {\r\n      textAlign: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesBreakdownModal = ({\r\n  isVisible,\r\n  title,\r\n  dailySales,\r\n  duration,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [breakdown, setBreakdown] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const generateBreakdown = useCallback(() => {\r\n    let groupedItems = {};\r\n    console.log(dailySales);\r\n    dailySales.items.forEach((v) => {\r\n      const prevValue = groupedItems[v.item.name];\r\n      if (prevValue) {\r\n        groupedItems[v.item.name] = {\r\n          ...groupedItems[v.item.name],\r\n          netSales: prevValue.netSales + v.netSales,\r\n          sales: prevValue.sales + v.sales,\r\n          incentives: prevValue.incentives + v.incentives,\r\n          count: prevValue.count + 1,\r\n        };\r\n      } else {\r\n        groupedItems[v.item.name] = {\r\n          ...groupedItems[v.item.name],\r\n          netSales: v.netSales,\r\n          sales: v.sales,\r\n          incentives: v.incentives,\r\n          count: 1,\r\n        };\r\n      }\r\n    });\r\n    setBreakdown(groupedItems);\r\n  }, [dailySales]);\r\n\r\n  useEffect(() => {\r\n    generateBreakdown();\r\n  }, [generateBreakdown]);\r\n\r\n  const renderContent = () => {\r\n    if (breakdown) {\r\n      return Object.keys(breakdown).map((key) => {\r\n        const item = breakdown[key];\r\n        return (\r\n          <div key={key} className={classes.item}>\r\n            <div>{key}</div>\r\n            <div className={classes.column}>{item.count}</div>\r\n            <div className={classes.column}>\r\n              {currencyFormatter(item.incentives)}\r\n            </div>\r\n            <div className={classes.column}>\r\n              {currencyFormatter(item.sales)}\r\n            </div>\r\n            <div className={classes.column}>\r\n              {currencyFormatter(item.netSales)}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      fullWidth\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle\r\n        style={{ textAlign: \"center\" }}\r\n      >{`${title} Breakdown`}</DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        <div className={classes.header}>\r\n          <div></div>\r\n          <div>Quantity</div>\r\n          <div>Incentives</div>\r\n          <div>Sales</div>\r\n          <div>Net Sales</div>\r\n        </div>\r\n        <div className={classes.content}>{renderContent()}</div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"text\" onClick={handleOnClose}>\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../features/modals/modalSlice\";\r\nimport { currencyFormatter } from \"../../utils/formatter\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"1.25em\",\r\n    },\r\n    header: {\r\n      display: \"grid\",\r\n      gridTemplate: \" 1fr / 1fr 1fr 1fr 1fr 1fr\",\r\n      placeItems: \"center\",\r\n      fontWeight: \"bold\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    headerTitle: {\r\n      fontSize: \"1.4rem\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\",\r\n    },\r\n    footer: {\r\n      display: \"flex\",\r\n      alignItems: \"flex-end\",\r\n      flexDirection: \"column\",\r\n      gap: \"1em\",\r\n      fontSize: \"0.9rem\",\r\n      \"& span\": {\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n    content: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"1em\",\r\n    },\r\n    item: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr 1fr 1fr 1fr\",\r\n    },\r\n    column: {\r\n      textAlign: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const NetSalesBreakdownModal = ({ isVisible, title, dailySales }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [breakdowns, setBreakdowns] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const generateBreakdown = useCallback(() => {\r\n    let breakdowns = {};\r\n    Object.keys(dailySales).forEach((key) => {\r\n      let groupedItems = {};\r\n      const dailySale = dailySales[key];\r\n      dailySale.items.forEach((v) => {\r\n        const prevValue = groupedItems[v.item.name];\r\n        if (prevValue) {\r\n          groupedItems[v.item.name] = {\r\n            ...groupedItems[v.item.name],\r\n            netSales: prevValue.netSales + v.netSales,\r\n            sales: prevValue.sales + v.sales,\r\n            incentives: prevValue.incentives + v.incentives,\r\n            count: prevValue.count + 1,\r\n          };\r\n        } else {\r\n          groupedItems[v.item.name] = {\r\n            ...groupedItems[v.item.name],\r\n            netSales: v.netSales,\r\n            sales: v.sales,\r\n            incentives: v.incentives,\r\n            count: 1,\r\n          };\r\n        }\r\n      });\r\n      breakdowns[key] = {\r\n        items: groupedItems,\r\n        sales: dailySales[key].sales,\r\n        netSales: dailySales[key].netSales,\r\n        incentives: dailySales[key].incentives,\r\n      };\r\n    });\r\n    setBreakdowns(breakdowns);\r\n  }, [dailySales]);\r\n\r\n  useEffect(() => {\r\n    generateBreakdown();\r\n  }, [generateBreakdown]);\r\n\r\n  const renderContent = () => {\r\n    if (breakdowns) {\r\n      return Object.keys(breakdowns).map((key) => {\r\n        const breakdownItem = breakdowns[key];\r\n        return (\r\n          <>\r\n            <div className={classes.headerTitle}>{key}</div>\r\n            <div className={classes.header}>\r\n              <div></div>\r\n              <div>Quantity</div>\r\n              <div>Incentives</div>\r\n              <div>Sales</div>\r\n              <div>Net Sales</div>\r\n            </div>\r\n            <div className={classes.content}>\r\n              {Object.keys(breakdownItem.items).map((key) => {\r\n                const item = breakdownItem.items[key];\r\n                return (\r\n                  <div key={key} className={classes.item}>\r\n                    <div>{key}</div>\r\n                    <div className={classes.column}>{item.count}</div>\r\n                    <div className={classes.column}>\r\n                      {currencyFormatter(item.incentives)}\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                      {currencyFormatter(item.sales)}\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                      {currencyFormatter(item.netSales)}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className={classes.footer}>\r\n              <div>\r\n                Total Incentives:\r\n                <span>{currencyFormatter(breakdownItem.incentives)}</span>\r\n              </div>\r\n              <div>\r\n                Total Sales:\r\n                <span>{currencyFormatter(breakdownItem.sales)}</span>\r\n              </div>\r\n              <div>\r\n                Total Net Sales:\r\n                <span>{currencyFormatter(breakdownItem.netSales)}</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      fullWidth\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle\r\n        style={{ textAlign: \"center\" }}\r\n      >{`${title} Breakdown`}</DialogTitle>\r\n      <DialogContent className={classes.root}>{renderContent()}</DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"text\" onClick={handleOnClose}>\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import axios from \"./axios\";\r\n\r\nexport const addClient = async (client, branchName) => {\r\n  const response = await axios.post(`/clients/${branchName}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\nexport const searchClients = async (searchTerm, branchName) => {\r\n  const response = await axios.get(`/clients/${branchName}/${searchTerm}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\nexport const updateClient = async (client) => {\r\n  const response = await axios.patch(`/clients/${client.ID}`, client);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addClientPayment = async (\r\n  clientId,\r\n  itemId,\r\n  quantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/payments/${itemId}/${quantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = async (clientId) => {\r\n  const response = await axios.get(`/clients/${clientId}/payments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = async ({\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg,\r\n}) => {\r\n  const response = await axios.get(\r\n    `/clients/${branchName}/all-payments?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const fetchClientAppointments = async ({ clientId }) => {\r\n  const response = await axios.get(`/clients/${clientId}/appointments`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const removeAppointment = async ({ appointmentId, branchName }) => {\r\n  const response = await axios.delete(\r\n    `/clients/${branchName}/appointments/${appointmentId}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addAppointment = async ({ clientId, appointment }) => {\r\n  const response = await axios.post(\r\n    `/clients/${clientId}/appointments`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateAppointment = async ({ branchName, appointment }) => {\r\n  const response = await axios.patch(\r\n    `/clients/${branchName}/appointments/${appointment.ID}`,\r\n    appointment\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\nimport {\r\n  addClient as apiAddClient,\r\n  addClientPayment as apiAddClientPayment,\r\n  fetchClientPaymentHistory as apiFetchClientPaymentHistory,\r\n  updateClient as apiUpdateClient,\r\n  addAppointment as apiAddAppointment,\r\n  updateAppointment as apiUpdateAppointment,\r\n  fetchClientAppointments as apiFetchClientAppointments,\r\n  removeAppointment as apiRemoveAppointment,\r\n  searchClients as apiSearchClients,\r\n} from \"../../api/clients\";\r\nimport { showInfoModal, hideInfoModal } from \"../modals/infoModalSlice\";\r\n\r\nconst initialState = {\r\n  clients: {},\r\n  paymentHistory: [],\r\n  appointments: [],\r\n  clientAppointments: [],\r\n  clientPayments: {},\r\n  isClientsLoading: false,\r\n  isPaymentsLoading: false,\r\n  isAppointmentsLoading: false,\r\n  isClientSearchingLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleOnFailure = (state, action) => {\r\n  state.error = action.payload;\r\n};\r\n\r\nconst clientsSlice = createSlice({\r\n  name: \"clientsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchClientsStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    fetchClientsSuccess(state, action) {\r\n      state.isClientsLoading = false;\r\n      let newClients = {};\r\n      action.payload.forEach((client) => {\r\n        newClients[client.ID] = client;\r\n      });\r\n      state.clients = newClients;\r\n    },\r\n    fetchClientsError: handleOnFailure,\r\n    searchClientsStart(state) {\r\n      state.isClientsLoading = true;\r\n      state.error = null;\r\n    },\r\n    searchClientsSuccess(state, action) {\r\n      state.isClientsLoading = false;\r\n      state.clients = action.payload;\r\n      state.error = null;\r\n    },\r\n    searchClientsError: handleOnFailure,\r\n    addClientStart(state) {\r\n      state.isClientsLoading = true;\r\n    },\r\n    addClientSuccess(state) {\r\n      state.isClientsLoading = false;\r\n      state.error = null;\r\n    },\r\n    addClientError: handleOnFailure,\r\n    updateClientStart(state) {\r\n      state.error = null;\r\n    },\r\n    updateClientSuccess(state, action) {\r\n      state.clients[action.payload.ID] = action.payload;\r\n      state.error = null;\r\n    },\r\n    updateClientsError: handleOnFailure,\r\n    addClientPaymentStart() {},\r\n    addClientPaymentSuccess(state, action) {\r\n      state.paymentHistory = [action.payload, ...state.paymentHistory];\r\n      state.error = false;\r\n    },\r\n    addClientPaymentError: handleOnFailure,\r\n    fetchClientPaymentHistoryStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchClientPaymentHistorySuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.paymentHistory = action.payload;\r\n      state.error = false;\r\n    },\r\n    fetchClientPaymentHistoryError: handleOnFailure,\r\n    fetchAllClientPaymentsStart(state) {\r\n      state.isPaymentsLoading = true;\r\n    },\r\n    fetchAllClientPaymentsSuccess(state, action) {\r\n      state.isPaymentsLoading = false;\r\n      state.clientPayments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAllClientPaymentsError: handleOnFailure,\r\n    addAppointmentStart(state) {\r\n      state.error = null;\r\n    },\r\n    addAppointmentSuccess(state, action) {},\r\n    addAppointmentError: handleOnFailure,\r\n    updateAppointmentStart(state) {},\r\n    updateAppointmentSuccess(state, action) {\r\n      state.appointments = [...action.payload];\r\n      state.error = null;\r\n    },\r\n    updateAppointmentError: handleOnFailure,\r\n    removeAppointmentStart() {},\r\n    removeAppointmentSuccess(state, action) {\r\n      state.appointments = action.payload;\r\n    },\r\n    removeAppointmentError: handleOnFailure,\r\n    fetchAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.appointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchAppointmentsError: handleOnFailure,\r\n    fetchClientAppointmentsStart(state) {\r\n      state.isAppointmentsLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsSuccess(state, action) {\r\n      state.isAppointmentsLoading = false;\r\n      state.clientAppointments = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchClientAppointmentsError: handleOnFailure,\r\n  },\r\n});\r\n\r\nexport const {\r\n  searchClientsError,\r\n  searchClientsStart,\r\n  searchClientsSuccess,\r\n  fetchClientsSuccess,\r\n  fetchClientsError,\r\n  fetchClientsStart,\r\n  addClientStart,\r\n  addClientError,\r\n  addClientSuccess,\r\n  updateClientStart,\r\n  updateClientSuccess,\r\n  updateClientError,\r\n  addClientPaymentStart,\r\n  addClientPaymentSuccess,\r\n  addClientPaymentError,\r\n  fetchClientPaymentHistoryStart,\r\n  fetchClientPaymentHistorySuccess,\r\n  fetchClientPaymentHistoryError,\r\n  fetchAllClientPaymentsStart,\r\n  fetchAllClientPaymentsSuccess,\r\n  fetchAllClientPaymentsError,\r\n  addAppointmentStart,\r\n  addAppointmentSuccess,\r\n  addAppointmentError,\r\n\r\n  fetchAppointmentsError,\r\n  fetchAppointmentsStart,\r\n  fetchAppointmentsSuccess,\r\n  fetchClientAppointmentsError,\r\n  fetchClientAppointmentsStart,\r\n  fetchClientAppointmentsSuccess,\r\n  updateAppointmentError,\r\n  updateAppointmentStart,\r\n  updateAppointmentSuccess,\r\n  removeAppointmentError,\r\n  removeAppointmentSuccess,\r\n  removeAppointmentStart,\r\n} = clientsSlice.actions;\r\n\r\nexport default clientsSlice.reducer;\r\n\r\nexport const searchClients = (searchTerm) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(searchClientsStart());\r\n    const results = await apiSearchClients(searchTerm, user.branchName);\r\n    dispatch(searchClientsSuccess(results));\r\n  } catch (error) {\r\n    dispatch(searchClientsError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchClients = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchClientsStart());\r\n\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchClientsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchClientsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addClient = (client) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newClient = await apiAddClient(client, user.branchName);\r\n    dispatch(addClientSuccess(newClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(addClientError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateClient = (client) => async (dispatch) => {\r\n  try {\r\n    dispatch(updateClientStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const updatedClient = await apiUpdateClient(client);\r\n    dispatch(updateClientSuccess(updatedClient));\r\n    dispatch(hideInfoModal());\r\n  } catch (error) {\r\n    dispatch(updateClientError(error.message));\r\n  }\r\n};\r\nexport const addClientPayment = (clientId, itemId, quantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { metadata } = getState().clients.clientPayments;\r\n  try {\r\n    dispatch(addClientPaymentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newPayment = await apiAddClientPayment(\r\n      clientId,\r\n      itemId,\r\n      quantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(hideInfoModal());\r\n    dispatch(addClientPaymentSuccess(newPayment));\r\n  } catch (error) {\r\n    dispatch(addClientPaymentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchClientPaymentHistory = (clientId) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientPaymentHistoryStart());\r\n\r\n    const clientPayments = await apiFetchClientPaymentHistory(clientId);\r\n    dispatch(fetchClientPaymentHistorySuccess(clientPayments));\r\n  } catch (error) {\r\n    dispatch(fetchClientPaymentHistoryError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAllClientPayments = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAllClientPaymentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/all-payments?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAllClientPaymentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAllClientPaymentsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addAppointment = ({ clientId, appointment }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(addAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    // Adjust the date of the appoinment\r\n\r\n    const newAppointment = await apiAddAppointment({ clientId, appointment });\r\n    dispatch(hideInfoModal());\r\n    dispatch(addAppointmentSuccess(newAppointment));\r\n  } catch (error) {\r\n    dispatch(addAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeAppointment = ({ appointmentId }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(removeAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const appointments = await apiRemoveAppointment({\r\n      appointmentId,\r\n      branchName: user.branchName,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(removeAppointmentSuccess(appointments));\r\n  } catch (error) {\r\n    dispatch(removeAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateAppointment = ({ appointment }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(updateAppointmentStart());\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"LOADING_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n    const newAppointments = await apiUpdateAppointment({\r\n      branchName: user.branchName,\r\n      appointment,\r\n    });\r\n    dispatch(hideInfoModal());\r\n    dispatch(updateAppointmentSuccess(newAppointments));\r\n  } catch (error) {\r\n    dispatch(updateAppointmentError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAppointments = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchAppointmentsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/clients/${user.branchName}/appointments?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchAppointmentsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchAppointmentsError(error.message));\r\n  }\r\n};\r\nexport const fetchClientAppointments = ({ clientId }) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchClientAppointmentsStart());\r\n    const result = await apiFetchClientAppointments({ clientId });\r\n    dispatch(fetchClientAppointmentsSuccess(result));\r\n  } catch (error) {\r\n    dispatch(fetchClientAppointmentsError(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\nimport { MdEmail, MdPets } from \"react-icons/md\";\r\n\r\nexport const AddClientForm = ({ classes, onSubmit }) => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  return (\r\n    <form\r\n      className={classes.form}\r\n      id=\"addClientForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Full Name\"\r\n        name=\"clientName\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.clientName}\r\n      />\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.address}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MdEmail />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({})}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Contact Number\"\r\n          name=\"contactNumber\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <FaPhoneAlt />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          inputRef={register({\r\n            pattern: /((^(\\+)(\\d){12}$)|(^\\d{11}$))/,\r\n          })}\r\n          error={!!errors.contactNumber}\r\n        />\r\n      </div>\r\n      <br></br>\r\n      <TextField\r\n        className={classes.field}\r\n        variant=\"outlined\"\r\n        label=\"Pet Name\"\r\n        name=\"petName\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <MdPets />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.petName}\r\n      />\r\n      <div className={classes.fieldGroup}>\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Species\"\r\n          name=\"petSpecies\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petSpecies}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          variant=\"outlined\"\r\n          label=\"Pet Breed\"\r\n          name=\"petBreed\"\r\n          inputRef={register({\r\n            required: true,\r\n          })}\r\n          error={!!errors.petBreed}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { addClient } from \"../../clientsSlice\";\r\nimport { AddClientForm } from \"./AddClientForm\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    form: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    field: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    fieldGroup: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddClientModal = ({ isVisible }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnSubmit = (data) => {\r\n    const parsedData = {\r\n      ...data,\r\n      pet: {\r\n        petName: data.petName,\r\n        species: data.petSpecies,\r\n        petBreed: data.petBreed,\r\n      },\r\n    };\r\n\r\n    dispatch(addClient(parsedData));\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Add Client\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <AddClientForm classes={classes} onSubmit={handleOnSubmit} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addClientForm\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientTransactionsTableHeader = ({ toggleAddItemSaleRow }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          Add Transaction\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientTransactionsTableHeader;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemsWithSearchTerm = async (searchTerm, branchName) => {\r\n  const response = await axios.get(`/items/search/${branchName}/${searchTerm}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItems = async (branchName) => {\r\n  const response = await axios.get(`/items/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n  };\r\n  const response = await axios.post(`/items/${branchName}`, parsedItem);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const modifyItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentiveAmount: Number(item.incentiveAmount),\r\n    incentiveRate: Number(item.incentiveRate),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (itemId, branchName) => {\r\n  const response = await axios.delete(`/items/item/${branchName}/${itemId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const discountItem = async (item, branchName) => {\r\n  const parsedItem = {\r\n    ...item,\r\n    price: Number(item.price),\r\n    incentive: Number(item.incentive),\r\n    discount: Number(item.discount),\r\n  };\r\n  const response = await axios.patch(\r\n    `/items/item/${branchName}/${item.ID}`,\r\n    parsedItem\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const getItemSales = async (branchName) => {\r\n  const response = await axios.get(`/item-sales/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  itemQuantity,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.post(\r\n    `/item-sales/${branchName}/${itemId}/${itemQuantity}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = async (\r\n  branchName,\r\n  itemId,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.delete(\r\n    `/item-sales/${branchName}/${itemId}?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemsWithSearchTerm } from \"../../api/inventory\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  result: [],\r\n  error: null,\r\n};\r\n\r\nconst inventorySearchSlice = createSlice({\r\n  name: \"inventorySearchResultSlice\",\r\n  initialState,\r\n  reducers: {\r\n    searchItemsStart(state) {\r\n      state.isLoading = true;\r\n    },\r\n    searchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.result = action.payload;\r\n      state.error = null;\r\n    },\r\n    searchItemsFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearItemsSearch(state, action) {\r\n      state.result = [];\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default inventorySearchSlice.reducer;\r\n\r\nexport const {\r\n  searchItemsFailure,\r\n  searchItemsStart,\r\n  searchItemsSuccess,\r\n  clearItemsSearch,\r\n} = inventorySearchSlice.actions;\r\n\r\nexport const searchItems = (searchTerm) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(searchItemsStart());\r\n    const items = await getItemsWithSearchTerm(searchTerm, user.branchName);\r\n    dispatch(searchItemsSuccess(items));\r\n  } catch (error) {\r\n    dispatch(searchItemsFailure(error));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment } from \"../../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  client,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(client.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.salesCategory}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{currentDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientTransactionsTableHeader from \"./ClientTransactionsTableHeader\";\r\nimport { ClientTransactionsTableAddItemRow } from \"./ClientTransactionsTableAddItemRow\";\r\nimport { showModal } from \"../../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsTable = ({ data, columns, client }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClientTransactionsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientTransactionsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              client={client}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientTransactionsTable } from \"./ClientTransactionsTable\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientTransactionsTableContainer = ({ paymentHistory, client }) => {\r\n  const data = useMemo(() => {\r\n    return paymentHistory.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item.name,\r\n        col3: `₱${Number(itemSale.item.price).toFixed(2)}`,\r\n        col4: itemSale.quantity,\r\n        col5: `₱${Number(itemSale.sales).toFixed(2)}`,\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? `₱${Number(itemSale.item.incentiveAmount).toFixed(2)}`\r\n          : `₱${Number(itemSale.incentives * itemSale.quantity).toFixed(2)}`,\r\n        col8: `₱${Number(itemSale.netSales).toFixed(2)}`,\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [paymentHistory]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    client,\r\n  };\r\n\r\n  return <ClientTransactionsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientTransactionsTableContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Dialog,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { fetchClientPaymentHistory } from \"../../clientsSlice\";\r\nimport ClientTransactionsTableContainer from \"./ClientTransactionsTable/ClientTransactionsTableContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientTransactionsModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients, paymentHistory, isPaymentsLoading } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[index];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientPaymentHistory(client.ID));\r\n  }, [dispatch, client]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isPaymentsLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n    return (\r\n      <ClientTransactionsTableContainer\r\n        paymentHistory={paymentHistory}\r\n        client={client}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullScreen\r\n    >\r\n      <DialogTitle>Payment History</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        {renderContent()}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          DONE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useState, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { updateClient } from \"../../clientsSlice\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"400px\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const VeterinarianNoteModal = ({ isVisible, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const { clients } = useSelector((state) => state.clients);\r\n  const client = useMemo(() => clients[index], [index, clients]);\r\n  const [veterinarianNote, setVeterinarianNote] = useState(\r\n    client.veterinarianNote ? client.veterinarianNote : \"\"\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    const newClient = { ...client, veterinarianNote: veterinarianNote };\r\n    dispatch(updateClient(newClient));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>Add Veterinarian Note</DialogTitle>\r\n      <div className={classes.content}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Note\"\r\n          multiline\r\n          rows={10}\r\n          value={veterinarianNote}\r\n          onChange={(e) => setVeterinarianNote(e.target.value)}\r\n        />\r\n      </div>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleOnSubmit}>\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Autocomplete,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport {\r\n  appointmentFollowUpReoccuranceTypes,\r\n  appointmentFollowUpTypes,\r\n  appointmentVaccineReoccuranceTypes,\r\n  appointmentVaccineTypes,\r\n} from \"../../../../consts\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\nexport const AddAppointmentForm = ({\r\n  onSubmit,\r\n  startDate,\r\n  isVaccine,\r\n  clientIndex,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const defaultClient = clientIndex\r\n    ? {\r\n        ...clients[clientIndex],\r\n        clientName: `${clients[clientIndex].clientName} - ${clients[clientIndex].pet.petName}`,\r\n      }\r\n    : null;\r\n\r\n  const data = useMemo(\r\n    () =>\r\n      Object.keys(clients).map((key) => {\r\n        const client = clients[key];\r\n        // Modify the client name to be easily distinguishable with duplicate owner names.\r\n        const newClientName = `${client.clientName} - ${client.pet.petName}`;\r\n        return { ...client, clientName: newClientName };\r\n      }),\r\n    [clients]\r\n  );\r\n\r\n  const { handleSubmit, errors, control } = useForm();\r\n\r\n  const renderTypeFields = () => {\r\n    return (\r\n      <>\r\n        <Controller\r\n          name=\"type\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-type\">{`${\r\n                isVaccine ? \"Vaccine\" : \"Follow Up\"\r\n              } Type`}</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-type\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.type}>\r\n                {!!errors.type ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"reoccurance\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          defaultValue={\"\"}\r\n          render={({ onChange, ...restProps }) => (\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"appointment-reoccurance\">Next Visit</InputLabel>\r\n              <Select\r\n                labelId=\"appointment-reoccurance\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                {...restProps}\r\n              >\r\n                {isVaccine\r\n                  ? appointmentVaccineReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))\r\n                  : appointmentFollowUpReoccuranceTypes.map((type) => (\r\n                      <MenuItem key={type} value={type}>\r\n                        {type}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n              <FormHelperText error={!!errors.reoccurance}>\r\n                {!!errors.reoccurance ? \"Please enter a type\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      id=\"addAppointmentForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <Controller\r\n        name=\"client\"\r\n        control={control}\r\n        defaultValue={clientIndex ? defaultClient : null}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ onChange, ...restProps }) => (\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={data}\r\n            loading={isClientsLoading}\r\n            getOptionLabel={(option) => option.clientName}\r\n            getOptionSelected={(option, value) =>\r\n              option.clientName === value.clientName\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Client Name\"\r\n                fullWidth\r\n                error={!!errors.client}\r\n                helperText={!!errors.client ? \"Enter a client\" : \"\"}\r\n              />\r\n            )}\r\n            onChange={(_, val) => {\r\n              onChange(val);\r\n            }}\r\n            {...restProps}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        id=\"appointment-date\"\r\n        name=\"date\"\r\n        control={control}\r\n        defaultValue={moment(startDate).toDate()}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={(props) => (\r\n          <DatePicker\r\n            allowSameDateSelection\r\n            renderInput={(props) => (\r\n              <TextField {...props} size=\"small\" label=\"Appointment Date\" />\r\n            )}\r\n            {...props}\r\n          />\r\n        )}\r\n      />\r\n      {renderTypeFields()}\r\n      <Controller\r\n        name=\"veterinarianNotes\"\r\n        control={control}\r\n        defaultValue={\"\"}\r\n        rules={{}}\r\n        render={(props) => (\r\n          <TextField label=\"Notes\" multiline size=\"small\" rows={5} {...props} />\r\n        )}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { AddAppointmentForm } from \"./AddAppointmentForm\";\r\nimport { fetchClients, addAppointment } from \"../../clientsSlice\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      height: \"400px\",\r\n      width: \"100%\",\r\n      alignItems: \"flex-start\",\r\n      padding: theme.spacing(2),\r\n      flexDirection: \"column\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const AddAppointmentModal = ({ isVisible, startDate, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isVaccine, setIsVaccine] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!clientIndex) {\r\n      dispatch(fetchClients());\r\n    }\r\n  }, [dispatch, clientIndex]);\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnSubmit = (data) => {\r\n    // Convert date to milliseconds\r\n    const formattedDate = moment(data.date).toISOString();\r\n    dispatch(\r\n      addAppointment({\r\n        clientId: data.client.ID,\r\n        appointment: { ...data, date: formattedDate },\r\n      })\r\n    );\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      className={classes.root}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Schedule Appointment</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <FormControlLabel\r\n          label=\"For Vaccine\"\r\n          control={\r\n            <Checkbox\r\n              checked={isVaccine}\r\n              onChange={(e) => setIsVaccine(e.target.checked)}\r\n            />\r\n          }\r\n        />\r\n        <AddAppointmentForm\r\n          onSubmit={handleOnSubmit}\r\n          startDate={startDate}\r\n          isVaccine={isVaccine}\r\n          clientIndex={clientIndex}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleOnClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button form=\"addAppointmentForm\" variant=\"outlined\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../../modals/modalSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchClientAppointments } from \"../../clientsSlice\";\r\nimport { DayPicker, LocalizationProvider, PickersDay } from \"@material-ui/lab\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport moment from \"moment-timezone\";\r\nimport classnames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    loadingIndicator: {\r\n      width: \"300px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center,\",\r\n    },\r\n    hasAppointment: {\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n    selected: {\r\n      backgroundColor: `#424242 !important`,\r\n      color: theme.palette.common.white,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsModal = ({ isVisible, clientIndex }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const history = useHistory();\r\n  const { isAppointmentsLoading, clientAppointments, clients } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  const client = clients[clientIndex];\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleOnDateChanged = (value) => {\r\n    setSelectedDate(value);\r\n    const appointment = clientAppointments.find((a) =>\r\n      moment(a.date).isSame(value, \"date\")\r\n    );\r\n\r\n    if (appointment) {\r\n      setOpen(!isVisible);\r\n\r\n      history.push(\"/clients/appointments\", {\r\n        appointment,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientAppointments({ clientId: client.ID }));\r\n  }, [dispatch, client]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DayPicker\r\n          date={selectedDate}\r\n          onChange={handleOnDateChanged}\r\n          disableHighlightToday\r\n          allowSameDateSelection\r\n          renderDay={(date, _selectedDates, PickersDayComponentProps) => (\r\n            <CustomDay\r\n              classes={classes}\r\n              date={date}\r\n              selectedDate={selectedDate}\r\n              _selectedDates={_selectedDates}\r\n              PickersDayComponentProps={PickersDayComponentProps}\r\n              appointments={clientAppointments}\r\n            />\r\n          )}\r\n          allowKeyboardControl={false}\r\n        />\r\n      </LocalizationProvider>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>Appointments</DialogTitle>\r\n      <DialogContent>{renderContent()}</DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>DONE</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst CustomDay = ({\r\n  date,\r\n  classes,\r\n  _selectedDates,\r\n  selectedDate,\r\n  PickersDayComponentProps,\r\n  appointments,\r\n}) => {\r\n  const adjustedDate = moment(date).tz(\"Asia/Manila\");\r\n  // Check if the client has an appointment\r\n  const hasAppointment =\r\n    appointments.find((a) => {\r\n      const appointmentDate = moment(a.date).tz(\"Asia/Manila\");\r\n      return appointmentDate.isSame(adjustedDate, \"date\");\r\n    }) !== undefined;\r\n\r\n  const isSelected = moment(selectedDate).isSame(date, \"date\");\r\n  return (\r\n    <PickersDay\r\n      className={classnames({\r\n        [classes.hasAppointment]: hasAppointment,\r\n        [classes.selected]: isSelected,\r\n      })}\r\n      {...PickersDayComponentProps}\r\n    ></PickersDay>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  deleteItem as deleteItemFromApi,\r\n  addItem as addItemToApi,\r\n  modifyItem as modifyItemFromApi,\r\n  discountItem as discountItemFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\n\r\nimport { showModal } from \"../../modals/modalSlice\";\r\n\r\nlet initialState = {\r\n  items: [],\r\n  itemSales: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handleStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySlice = createSlice({\r\n  name: \"inventoryItems\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemsStart: handleStart,\r\n    fetchItemsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.items = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchItemsFailure: handleError,\r\n    addItemStart(_, __) {},\r\n    addItemSuccess(state, action) {\r\n      // state.items = [...state.items, action.payload];\r\n    },\r\n    addItemFailure: handleError,\r\n    modifyItemStart() {},\r\n    modifyItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    modifyItemFailure: handleError,\r\n    discountItemStart() {},\r\n    discountItemSuccess(state, action) {\r\n      state.items = state.items.map((item, index) => {\r\n        if (index === action.payload.itemIndex) {\r\n          return action.payload.newItem;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    discountItemFailure: handleError,\r\n    deleteItemStart() {},\r\n    deleteItemSuccess(state, action) {\r\n      state.items = state.items.filter((item) => item.ID !== action.payload);\r\n    },\r\n    deleteItemFailure: handleError,\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchItemsStart,\r\n  fetchItemsSuccess,\r\n  fetchItemsFailure,\r\n  addItemStart,\r\n  addItemSuccess,\r\n  addItemFailure,\r\n  modifyItemStart,\r\n  modifyItemSuccess,\r\n  modifyItemFailure,\r\n  discountItemStart,\r\n  discountItemFailure,\r\n  discountItemSuccess,\r\n  deleteItemStart,\r\n  deleteItemSuccess,\r\n  deleteItemFailure,\r\n} = inventorySlice.actions;\r\n\r\nexport default inventorySlice.reducer;\r\n\r\nexport const fetchItems = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    dispatch(fetchItemsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/items/${user.branchName}?jwt=${token}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const addItem = (itemDetails) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(addItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await addItemToApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Added!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemSuccess());\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const modifyItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(modifyItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await modifyItemFromApi(itemDetails, user.branchName);\r\n\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Modified!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(modifyItemFailure());\r\n  }\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(deleteItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    await deleteItemFromApi(itemId, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Successfully Deleted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n\r\n    dispatch(deleteItemSuccess(itemId));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemFailure());\r\n  }\r\n};\r\n\r\nexport const discountItem = (itemDetails, itemIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(discountItemStart());\r\n    dispatch(showModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const newItem = await discountItemFromApi(itemDetails, user.branchName);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Discounted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemSuccess({ newItem, itemIndex }));\r\n  } catch (error) {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(discountItemFailure());\r\n  }\r\n};\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemCategories = async () => {\r\n  const response = await axios.get(`/admin/item-categories`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const addItemCategory = async (itemCategoryDetails) => {\r\n  const response = await axios.post(\r\n    `/admin/item-categories`,\r\n    itemCategoryDetails\r\n  );\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const deleteItemCategory = async (itemCategoryId) => {\r\n  const response = await axios.delete(\r\n    `/admin/item-categories/${itemCategoryId}`\r\n  );\r\n\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getItemCategories as apiGetItemCategories,\r\n  addItemCategory as apiAddItemCategory,\r\n  deleteItemCategory as apiDeleteItemCategory,\r\n} from \"../../api/item_category\";\r\nimport { showInfoModal } from \"../modals/infoModalSlice\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst itemCategorySlice = createSlice({\r\n  name: \"itemCategorySlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemCategoriesStart(state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchItemCategoriesSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchItemCategoriesFailure(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    addItemCategoryStart(state) {\r\n      state.error = null;\r\n    },\r\n    addItemCategorySuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    addItemCategoryFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    deleteItemCategoryStart(state) {\r\n      state.error = null;\r\n    },\r\n    deleteItemCategorySuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.categories = action.payload;\r\n      state.error = null;\r\n    },\r\n    deleteItemCategoryFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default itemCategorySlice.reducer;\r\n\r\nexport const {\r\n  fetchItemCategoriesFailure,\r\n  fetchItemCategoriesStart,\r\n  fetchItemCategoriesSuccess,\r\n  addItemCategoryFailure,\r\n  addItemCategoryStart,\r\n  addItemCategorySuccess,\r\n  deleteItemCategoryFailure,\r\n  deleteItemCategoryStart,\r\n  deleteItemCategorySuccess,\r\n} = itemCategorySlice.actions;\r\n\r\nexport const fetchItemCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchItemCategoriesStart());\r\n    const result = await apiGetItemCategories();\r\n    dispatch(fetchItemCategoriesSuccess(result));\r\n  } catch (error) {\r\n    dispatch(fetchItemCategoriesFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const addItemCategory = (itemCategoryDetails) => async (dispatch) => {\r\n  try {\r\n    dispatch(addItemCategoryStart());\r\n    dispatch(showInfoModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const results = await apiAddItemCategory(itemCategoryDetails);\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Category Added!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemCategorySuccess(results));\r\n  } catch (error) {\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(addItemCategoryFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteItemCategory = (itemCategoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch(deleteItemCategoryStart());\r\n    dispatch(showInfoModal({ modalType: \"LOADING_MODAL\", modalProps: {} }));\r\n    const results = await apiDeleteItemCategory(itemCategoryId);\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Item Category Deleted!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemCategorySuccess(results));\r\n  } catch (error) {\r\n    dispatch(\r\n      showInfoModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(deleteItemCategoryFailure(error.message));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  CircularProgress,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { addItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryAddItemModal = ({ isVisible }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const newItem = { ...data };\r\n    newItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      newItem.incentiveRate = 0;\r\n    } else {\r\n      newItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(addItem(newItem));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Add Item</DialogTitle>\r\n      <DialogContent>\r\n        <AddItemForm\r\n          onSubmit={handleSubmit}\r\n          dispatch={dispatch}\r\n          classes={classes}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"addItemForm\" type=\"submit\">\r\n          Add Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst AddItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n  dispatch,\r\n}) => {\r\n  const { isLoading, categories } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  const onCategoriesFocused = () => {\r\n    dispatch(fetchItemCategories());\r\n  };\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: \"\",\r\n      category: \"Store Sales\",\r\n      incentiveRate: 0,\r\n      incentiveAmount: 0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"addItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onFocus={onCategoriesFocused}\r\n            endAdornment={\r\n              isLoading ? (\r\n                <InputAdornment>\r\n                  <CircularProgress />\r\n                </InputAdornment>\r\n              ) : null\r\n            }\r\n          >\r\n            <MenuItem value=\"\"></MenuItem>\r\n            {categories.map((category) => (\r\n              <MenuItem key={category.ID} value={category.name}>\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n\r\n      <div>\r\n        <FormControlLabel\r\n          className={classes.addItemFormField}\r\n          control={\r\n            <Checkbox\r\n              checked={isIncentiveFixed}\r\n              onChange={() => {\r\n                setIncentiveFixed(!isIncentiveFixed);\r\n              }}\r\n            />\r\n          }\r\n          label=\"Fixed Incentive Rate\"\r\n        />\r\n        <div className={classes.incentiveFieldsWrapper}>\r\n          <TextField\r\n            disabled={isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Rate\"\r\n            name=\"incentiveRate\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: <Typography>%</Typography>,\r\n            }}\r\n            inputRef={register({\r\n              required: true,\r\n              max: 100.0,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveRate}\r\n          />\r\n          <TextField\r\n            disabled={!isIncentiveFixed}\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            label=\"Incentive Amount\"\r\n            name=\"incentiveAmount\"\r\n            size=\"small\"\r\n            inputRef={register({\r\n              required: true,\r\n              min: 0.0,\r\n            })}\r\n            error={!!errors.incentiveAmount}\r\n          />\r\n        </div>\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal, showModal } from \"../../modals/modalSlice\";\r\nimport { deleteItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    content: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"1em\",\r\n    },\r\n    deleteBtn: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryManageItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const handleModifyItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MODIFY_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleDiscountItemPressed = () => {\r\n    setOpen(!isVisible);\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DISCOUNT_ITEM_MODAL\",\r\n        modalProps: {\r\n          item,\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteItemPressed = (itemId) => {\r\n    setOpen(!isVisible);\r\n\r\n    dispatch(deleteItem(item.ID));\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Manage Item</DialogTitle>\r\n      <DialogContent className={classes.content}>\r\n        <Button fullWidth variant=\"contained\" onClick={handleModifyItemPressed}>\r\n          Modify Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDiscountItemPressed}\r\n        >\r\n          Discount Item\r\n        </Button>\r\n        <br />\r\n        <Button\r\n          className={classes.deleteBtn}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={handleDeleteItemPressed}\r\n        >\r\n          Delete Item\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Select,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { modifyItem } from \"../inventoryItems/inventoryItemsSlice\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n      flexGrow: \"1\",\r\n    },\r\n    incentiveFieldsWrapper: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryModifyItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const [isIncentiveFixed, setIncentiveFixed] = useState(item.isIncentiveFixed);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    const updatedItem = { ...item, ...data };\r\n    updatedItem.isIncentiveFixed = isIncentiveFixed;\r\n    if (isIncentiveFixed) {\r\n      updatedItem.incentiveRate = 0;\r\n    } else {\r\n      updatedItem.incentiveAmount = 0;\r\n    }\r\n\r\n    dispatch(modifyItem(updatedItem, itemIndex));\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Modify Item</DialogTitle>\r\n      <DialogContent>\r\n        <ModifyItemForm\r\n          dispatch={dispatch}\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n          isIncentiveFixed={isIncentiveFixed}\r\n          setIncentiveFixed={setIncentiveFixed}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"modifyItemForm\" type=\"submit\">\r\n          Modify Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModifyItemForm = ({\r\n  onSubmit,\r\n  classes,\r\n  itemDetails,\r\n  isIncentiveFixed,\r\n  setIncentiveFixed,\r\n  dispatch,\r\n}) => {\r\n  const { isLoading, categories } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  const onCategoriesFocused = () => {\r\n    dispatch(fetchItemCategories());\r\n  };\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    defaultValues: {\r\n      remarks: itemDetails.remarks !== null ? itemDetails.remarks : \"\",\r\n      category: itemDetails.category !== null ? itemDetails.category : \"\",\r\n      price: itemDetails.price !== null ? itemDetails.price : 0,\r\n      name: itemDetails.name !== null ? itemDetails.name : \"\",\r\n      incentiveRate:\r\n        itemDetails.incentiveRate !== null ? itemDetails.incentiveRate : 0,\r\n      incentiveAmount:\r\n        itemDetails.incentiveAmount !== null ? itemDetails.incentiveAmount : 0,\r\n      inStock: itemDetails.inStock !== null ? itemDetails.inStock : 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"modifyItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Name\"\r\n        name=\"name\"\r\n        size=\"small\"\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.name}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Stock\"\r\n        name=\"inStock\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0,\r\n        })}\r\n        error={!!errors.inStock}\r\n        helperText={!!errors.inStock ? \"Invalid Value\" : \"\"}\r\n      />\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Item Price\"\r\n        name=\"price\"\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: <Typography>₱</Typography>,\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n        })}\r\n        error={!!errors.price}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"category\"\r\n        as={\r\n          <Select\r\n            className={classes.addItemFormField}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onFocus={onCategoriesFocused}\r\n            endAdornment={\r\n              isLoading ? (\r\n                <InputAdornment>\r\n                  <CircularProgress />\r\n                </InputAdornment>\r\n              ) : null\r\n            }\r\n          >\r\n            {categories.map((category) => (\r\n              <MenuItem key={category.ID} value={category.name}>\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        }\r\n      />\r\n      <FormControlLabel\r\n        className={classes.addItemFormField}\r\n        control={\r\n          <Checkbox\r\n            checked={isIncentiveFixed}\r\n            onChange={() => {\r\n              setIncentiveFixed(!isIncentiveFixed);\r\n            }}\r\n          />\r\n        }\r\n        label=\"Fixed Incentive Rate\"\r\n      />\r\n      <div className={classes.incentiveFieldsWrapper}>\r\n        <TextField\r\n          disabled={isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Rate\"\r\n          name=\"incentiveRate\"\r\n          size=\"small\"\r\n          InputProps={{\r\n            endAdornment: <Typography>%</Typography>,\r\n          }}\r\n          inputRef={register({\r\n            required: true,\r\n            max: 100.0,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveRate}\r\n        />\r\n        <TextField\r\n          disabled={!isIncentiveFixed}\r\n          className={classes.addItemFormField}\r\n          variant=\"outlined\"\r\n          label=\"Incentive Amount\"\r\n          name=\"incentiveAmount\"\r\n          size=\"small\"\r\n          inputRef={register({\r\n            required: true,\r\n            min: 0.0,\r\n          })}\r\n          error={!!errors.incentiveAmount}\r\n        />\r\n      </div>\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Remarks\"\r\n        name=\"remarks\"\r\n        size=\"small\"\r\n        inputRef={register}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { discountItem } from \"../inventoryItems/inventoryItemsSlice\";\r\n\r\nconst useStyles = makeStyles((_) => {\r\n  return {\r\n    addItemForm: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"column\",\r\n    },\r\n    addItemFormField: {\r\n      margin: \"0.5em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryDiscountItemModal = ({ isVisible, item, itemIndex }) => {\r\n  const [open, setOpen] = useState(isVisible);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = ({ discount }) => {\r\n    setOpen(!isVisible);\r\n    dispatch(discountItem({ ...item, discount }, itemIndex));\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    setOpen(!isVisible);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnClose}\r\n      TransitionProps={{ onExited: handleOnExited }}\r\n    >\r\n      <DialogTitle>Discount Item</DialogTitle>\r\n      <DialogContent>\r\n        <DiscountItemForm\r\n          onSubmit={handleSubmit}\r\n          classes={classes}\r\n          itemDetails={item}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        <Button form=\"discountItemForm\" type=\"submit\">\r\n          Discount Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst DiscountItemForm = ({ onSubmit, classes, itemDetails }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      discount: itemDetails.discount !== null ? itemDetails.discount : 0.0,\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      noValidate\r\n      className={classes.addItemForm}\r\n      id=\"discountItemForm\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.addItemFormField}\r\n        variant=\"outlined\"\r\n        label=\"Discount Amount\"\r\n        name=\"discount\"\r\n        size=\"small\"\r\n        type=\"number\"\r\n        helperText={\r\n          !!errors.discount ? \"Please input a value between 0.01 and 100\" : \"\"\r\n        }\r\n        InputProps={{\r\n          endAdornment: (\r\n            <Typography>\r\n              <strong>%</strong>\r\n            </Typography>\r\n          ),\r\n        }}\r\n        inputRef={register({\r\n          required: true,\r\n          min: 0.0,\r\n          max: 100.0,\r\n        })}\r\n        autoFocus\r\n        error={!!errors.discount}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addItemSale as addItemSaleToApi,\r\n  deleteItemSale as deleteItemSaleFromApi,\r\n} from \"../../../api/inventory\";\r\nimport { config } from \"../../../consts\";\r\nimport { showModal, hideModal } from \"../../modals/modalSlice\";\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  itemSales: [],\r\n  dailySales: 0,\r\n  metadata: {\r\n    salesDateCateg: \"daily\",\r\n  },\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst inventorySalesSlice = createSlice({\r\n  name: \"inventorySales\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStart: handleOnStart,\r\n    fetchItemSalesSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.itemSales = action.payload.itemSales.filter(\r\n        (itemSale) => itemSale.item !== null\r\n      );\r\n      state.dailySales = action.payload.dailySales;\r\n      state.metadata = action.payload.metadata;\r\n      state.error = null;\r\n    },\r\n    fetchItemSalesError: handleOnError,\r\n    addItemSaleStart() {},\r\n    addItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    addItemSaleFailure: handleOnError,\r\n    deleteItemSaleStart() {},\r\n    deleteItemSaleSuccess(state, _) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    deleteItemSaleFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default inventorySalesSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesError,\r\n  fetchItemSalesStart,\r\n  fetchItemSalesSuccess,\r\n  addItemSaleFailure,\r\n  addItemSaleStart,\r\n  addItemSaleSuccess,\r\n  deleteItemSaleFailure,\r\n  deleteItemSaleStart,\r\n  deleteItemSaleSuccess,\r\n} = inventorySalesSlice.actions;\r\n\r\nexport const fetchItemSales = ({ salesDate, salesDateCateg }) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStart());\r\n    let ws;\r\n    ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/item-sales/${user.branchName}?jwt=${token}&salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n    );\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n      dispatch(fetchItemSalesSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesError(error));\r\n  }\r\n};\r\n\r\nexport const addItemSale = (itemId, itemQuantity) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(addItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const newItemSale = await addItemSaleToApi(\r\n      user.branchName,\r\n      itemId,\r\n      itemQuantity,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(addItemSaleSuccess(newItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction Complete!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(addItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteItemSale = (itemId) => async (dispatch, getState) => {\r\n  try {\r\n    const { user } = getState().auth;\r\n    const { metadata } = getState().inventorySales;\r\n    dispatch(deleteItemSaleStart());\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOADING_MODAL\",\r\n      })\r\n    );\r\n    const deletedItemSale = await deleteItemSaleFromApi(\r\n      user.branchName,\r\n      itemId,\r\n      metadata.salesDate,\r\n      metadata.salesDateCateg\r\n    );\r\n    dispatch(deleteItemSaleSuccess(deletedItemSale));\r\n    dispatch(hideModal());\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"SUCCESS_MODAL\",\r\n        modalProps: {\r\n          message: \"Transaction deleted successfully!\",\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n    dispatch(clearItemsSearch());\r\n  } catch (error) {\r\n    dispatch(deleteItemSaleFailure(error));\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ERROR_MODAL\",\r\n        modalProps: {\r\n          message: error.message,\r\n          duration: 3000,\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n  LogoutModal,\r\n  SalesBreakdownModal,\r\n  NetSalesBreakdownModal,\r\n} from \"../../components/modals\";\r\nimport {\r\n  AddClientModal,\r\n  ClientTransactionsModal,\r\n  VeterinarianNoteModal,\r\n  AddAppointmentModal,\r\n  ClientAppointmentsModal,\r\n} from \"../clients/clientsModals\";\r\n\r\nimport {\r\n  InventoryAddItemModal,\r\n  InventoryDiscountItemModal,\r\n  InventoryManageItemModal,\r\n  InventoryModifyItemModal,\r\n  InventoryAddItemSaleConfirmationModal,\r\n  InventoryDeleteItemSaleConfirmationModal,\r\n} from \"../inventory/inventoryModals\";\r\n\r\nconst modalComponents = {\r\n  ADD_ITEM_MODAL: InventoryAddItemModal,\r\n  ADD_SALE_CONFIRMATION_MODAL: InventoryAddItemSaleConfirmationModal,\r\n  DELETE_SALE_CONFIRMATION_MODAL: InventoryDeleteItemSaleConfirmationModal,\r\n  MANAGE_ITEM_MODAL: InventoryManageItemModal,\r\n  MODIFY_ITEM_MODAL: InventoryModifyItemModal,\r\n  DISCOUNT_ITEM_MODAL: InventoryDiscountItemModal,\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n  LOGOUT_MODAL: LogoutModal,\r\n  ADD_CLIENT_MODAL: AddClientModal,\r\n  ADD_APPOINTMENT_MODAL: AddAppointmentModal,\r\n  CLIENT_TRANSACTIONS_MODAL: ClientTransactionsModal,\r\n  CLIENT_APPOINTMENTS_MODAL: ClientAppointmentsModal,\r\n  CLIENT_VETERINARIAN_NOTE_MODAL: VeterinarianNoteModal,\r\n  SALES_BREAKDOWN_MODAL: SalesBreakdownModal,\r\n  NET_SALES_BREAKDOWN_MODAL: NetSalesBreakdownModal,\r\n};\r\n\r\nconst ModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.modals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default ModalManager;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemSale } from \"../inventorySales/inventorySalesSlice\";\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\n\r\nexport const InventoryAddItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemDetails,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n  const handlePositivePressed = () => {\r\n    dispatch(addItemSale(itemDetails.itemId, itemDetails.quantity));\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConfirmationModal from \"../../../components/modals/ConfirmationModal\";\r\nimport { hideModal } from \"../../modals/modalSlice\";\r\nimport { deleteItemSale } from \"../inventorySales/inventorySalesSlice\";\r\n\r\nexport const InventoryDeleteItemSaleConfirmationModal = ({\r\n  isVisible,\r\n  title,\r\n  message,\r\n  itemIndex,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { itemSales } = useSelector((state) => state.inventorySales);\r\n\r\n  const handlePositivePressed = () => {\r\n    dispatch(deleteItemSale(itemSales[itemIndex].ID));\r\n  };\r\n  const handleNegativePressed = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ConfirmationModal\r\n      isVisible={isVisible}\r\n      title={title}\r\n      message={message}\r\n      handleNegativePressed={handleNegativePressed}\r\n      handlePositivePressed={handlePositivePressed}\r\n    />\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n};\r\n\r\nconst drawerSlice = createSlice({\r\n  name: \"drawer\",\r\n  initialState,\r\n  reducers: {\r\n    toggleDrawer(state) {\r\n      state.isOpen = !state.isOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport default drawerSlice.reducer;\r\n\r\nexport const { toggleDrawer } = drawerSlice.actions;\r\n","import axios from \"./axios\";\r\n\r\nexport const clearNotifications = async ({ branchName }) => {\r\n  const response = await axios.delete(`/notifications/${branchName}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n\r\nexport const updateNotification = async ({ notificationId }) => {\r\n  const response = await axios.patch(`/notifications/${notificationId}`);\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { config } from \"../../consts\";\r\n\r\nimport {\r\n  clearNotifications as apiClearNotifications,\r\n  updateNotification as apiUpdateNotifications,\r\n} from \"../../api/notification\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  notifications: [],\r\n  error: null,\r\n};\r\n\r\nconst notificationsSlice = createSlice({\r\n  name: \"notificationsSlice\",\r\n  initialState,\r\n  reducers: {\r\n    fetchNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsSuccess(state, action) {\r\n      // Convert the array to map\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    fetchNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    clearNotificationsStart(state, action) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsSuccess(state, action) {\r\n      state.notifications = {};\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    clearNotificationsError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    updateNotificationStart() {},\r\n    updateNotificationSuccess(state, action) {\r\n      state.isLoading = false;\r\n      const notificationsMap = {};\r\n\r\n      action.payload.forEach((n, i) => {\r\n        notificationsMap[i] = n;\r\n      });\r\n\r\n      state.notifications = notificationsMap;\r\n      state.error = null;\r\n    },\r\n    updateNotificationError(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchNotificationsError,\r\n  fetchNotificationsStart,\r\n  fetchNotificationsSuccess,\r\n  updateNotificationError,\r\n  updateNotificationStart,\r\n  updateNotificationSuccess,\r\n  clearNotificationsError,\r\n  clearNotificationsStart,\r\n  clearNotificationsSuccess,\r\n} = notificationsSlice.actions;\r\n\r\nexport default notificationsSlice.reducer;\r\n\r\nexport const fetchNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  try {\r\n    dispatch(fetchNotificationsStart());\r\n    const ws = new WebSocket(\r\n      `${config.WS_BASE_URL}/notifications/${user.branchName}?jwt=${token}`\r\n    );\r\n\r\n    ws.onmessage = (e) => {\r\n      const response = JSON.parse(e.data);\r\n\r\n      dispatch(fetchNotificationsSuccess(response.data));\r\n    };\r\n  } catch (error) {\r\n    dispatch(fetchNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const clearNotifications = () => async (dispatch, getState) => {\r\n  const { user } = getState().auth;\r\n  try {\r\n    dispatch(clearNotificationsStart());\r\n    await apiClearNotifications({ branchName: user.branchName });\r\n    dispatch(clearNotificationsSuccess());\r\n  } catch (error) {\r\n    dispatch(clearNotificationsError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateNotification = ({ notificationId, index }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(updateNotificationStart());\r\n    const notifications = await apiUpdateNotifications({ notificationId });\r\n    dispatch(updateNotificationSuccess(notifications));\r\n  } catch (error) {\r\n    dispatch(updateNotificationError(error.message));\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { Divider, ListItem, Typography } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport className from \"classnames\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n      gap: theme.spacing(1),\r\n    },\r\n    title: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"1.2rem\",\r\n    },\r\n    message: {\r\n      fontSize: \"1rem\",\r\n    },\r\n    seen: {\r\n      opacity: \"50%\",\r\n    },\r\n    date: {\r\n      color: \"#FFFFFFB3\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationItem = ({ notif, index, onNotificationPressed }) => {\r\n  const classes = useStyles();\r\n  const [seen, setSeen] = useState(notif.seen);\r\n  const appointment = JSON.parse(notif.payload);\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => {\r\n          setSeen(true);\r\n          onNotificationPressed(notif, index);\r\n        }}\r\n        className={\r\n          seen ? className([classes.root, classes.seen]) : classes.root\r\n        }\r\n        key={notif.ID}\r\n      >\r\n        <Typography className={classes.title}>\r\n          {appointment.client.clientName}\r\n        </Typography>\r\n        <Typography className={classes.message}>{notif.message}</Typography>\r\n        <Typography className={classes.date}>\r\n          {moment(notif.CreatedAt).format(\"MMMM DD, YYYY\")}\r\n        </Typography>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, Button, Typography } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { NotificationItem } from \"./NotificationItem\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n      maxHeight: \"500px\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      gap: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\n\r\nexport const NotificationsList = ({\r\n  notifications,\r\n  onNotificationPressed,\r\n  onClearNotificationsPressed,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderListItems = () => {\r\n    return Object.keys(notifications).map((k, i) => {\r\n      const n = notifications[k];\r\n      return (\r\n        <NotificationItem\r\n          notif={n}\r\n          index={i}\r\n          onNotificationPressed={onNotificationPressed}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(notifications).length !== 0) {\r\n      return (\r\n        <>\r\n          {renderListItems()}\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"error\"\r\n            onClick={onClearNotificationsPressed}\r\n            startIcon={<Delete color=\"error\" />}\r\n          >\r\n            Clear Notifications\r\n          </Button>\r\n        </>\r\n      );\r\n    }\r\n    return <Typography align=\"center\">No Notifications</Typography>;\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IconButton, Badge, Menu, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Notifications as NotificationIcon } from \"@material-ui/icons\";\r\nimport {\r\n  fetchNotifications,\r\n  clearNotifications,\r\n  updateNotification,\r\n} from \"./notificationsSlice\";\r\n\r\nimport { NotificationsList } from \"./NotificationsList\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    loadingIndicator: {\r\n      width: \"400px\",\r\n      height: \"300px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const Notifications = () => {\r\n  const { notifications, isLoading } = useSelector(\r\n    (state) => state.notifications\r\n  );\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications());\r\n  }, [dispatch]);\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnNotificationPressed = (notification, index) => {\r\n    const appointment = JSON.parse(notification.payload);\r\n    history.push(\"/clients/appointments\", {\r\n      appointment,\r\n    });\r\n    dispatch(updateNotification({ notificationId: notification.ID, index }));\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOnClearNotificationsPressed = () => {\r\n    dispatch(clearNotifications());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <NotificationsList\r\n        notifications={notifications}\r\n        onNotificationPressed={handleOnNotificationPressed}\r\n        onClearNotificationsPressed={handleOnClearNotificationsPressed}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClick}>\r\n        <Badge\r\n          badgeContent={\r\n            Object.keys(notifications)\r\n              .map((k) => notifications[k])\r\n              .filter((n) => !n.seen).length\r\n          }\r\n        >\r\n          <NotificationIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\r\n        {renderContent()}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  AppBar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { AccountCircle, Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { showModal } from \"../features/modals/modalSlice\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\nimport { Notifications } from \"../features/notifications/Notifications\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    width: \"100%\",\r\n    backgroundColor: \"#272727\",\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none \",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst appbarTitles = {\r\n  dashboard: \"Dashboard\",\r\n  \"pet-queues\": \"Pet Queues\",\r\n  \"all-clients\": \"All Clients\",\r\n  payments: \"Payments\",\r\n  appointments: \"Appointments\",\r\n  \"appointment-form\": \"Appointment Form\",\r\n  \"item-categories\": \"Item Categories\",\r\n  items: \"All Items\",\r\n  sales: \"All Sales\",\r\n};\r\n\r\nexport const CustomAppBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [appbarTitle, setAppbarTitle] = useState(\"\");\r\n  const location = useLocation();\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname;\r\n    const splittedPathname = pathname.split(\"/\");\r\n    const appbarTitle =\r\n      appbarTitles[splittedPathname[splittedPathname.length - 1]];\r\n    setAppbarTitle(appbarTitle);\r\n  }, [location, appbarTitle, setAppbarTitle]);\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.target);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const handleOnSignoutPressed = () => {\r\n    handleMenuClose();\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"LOGOUT_MODAL\",\r\n        modalProps: {\r\n          title: \"Logout\",\r\n          message: \"Are you sure you want to logout from the session?\",\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderMenu = () => {\r\n    return (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleOnSignoutPressed}>Logout</MenuItem>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return \"Petshield Veterinary Clinic - \" + appbarTitle;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography>{renderTitle()}</Typography>\r\n          <div className={classes.grow}></div>\r\n\r\n          <Notifications />\r\n          <IconButton edge=\"end\" onClick={handleMenuOpen}>\r\n            <AccountCircle style={{ fontSize: \"2rem\" }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu()}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/house.7d774967.svg\";","export default __webpack_public_path__ + \"static/media/all_clients.2a3b6270.svg\";","export default __webpack_public_path__ + \"static/media/all_items.e153111f.svg\";","export default __webpack_public_path__ + \"static/media/appointments.f3506a0a.svg\";","export default __webpack_public_path__ + \"static/media/clients.b5a069e7.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.99dfeff1.svg\";","export default __webpack_public_path__ + \"static/media/inventory.c084951b.svg\";","export default __webpack_public_path__ + \"static/media/item_transactions.a4256305.svg\";","export default __webpack_public_path__ + \"static/media/payments.8026a3af.svg\";","export default __webpack_public_path__ + \"static/media/pet_queue.25ef2fa6.svg\";","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { drawerWidth } from \"../consts\";\r\nimport { ExpandLess, ExpandMore, Settings, Category } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"../assets/house.svg\";\r\nimport AllClientsIcon from \"../assets/all_clients.svg\";\r\nimport AllItemsIcon from \"../assets/all_items.svg\";\r\nimport AppointmentsIcon from \"../assets/appointments.svg\";\r\nimport ClientsIcon from \"../assets/clients.svg\";\r\nimport DashboardIcon from \"../assets/dashboard.svg\";\r\nimport InventoryIcon from \"../assets/inventory.svg\";\r\nimport ItemTransactionIcon from \"../assets/item_transactions.svg\";\r\nimport PetQueueIcon from \"../assets/pet_queue.svg\";\r\nimport PaymentsIcon from \"../assets/payments.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleDrawer } from \"../features/drawer/drawerSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#343434\",\r\n  },\r\n\r\n  nested: {\r\n    paddingLeft: `${theme.spacing(4)}`,\r\n  },\r\n  drawerIcon: {\r\n    width: \"34px\",\r\n    height: \"34px\",\r\n    fill: `${theme.palette.primary.main} !important`,\r\n  },\r\n}));\r\n\r\nexport const CustomDrawer = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isOpen } = useSelector((state) => state.drawer);\r\n  const [expandedItems, setExpandedItems] = useState({\r\n    home: false,\r\n    clients: false,\r\n    inventory: false,\r\n    admin: false,\r\n  });\r\n\r\n  const menuItems = [\r\n    {\r\n      label: \"Home\",\r\n      type: \"home\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, home: !expandedItems.home }),\r\n      icon: HomeIcon,\r\n      subItems: [\r\n        {\r\n          label: \"Dashboard\",\r\n          icon: DashboardIcon,\r\n          path: \"/home/dashboard\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Clients\",\r\n      type: \"clients\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, clients: !expandedItems.clients }),\r\n      icon: ClientsIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Clients\",\r\n          icon: AllClientsIcon,\r\n          path: \"/clients/all-clients\",\r\n        },\r\n        {\r\n          label: \"Payments\",\r\n          icon: PaymentsIcon,\r\n          path: \"/clients/payments\",\r\n        },\r\n        {\r\n          label: \"Appointments\",\r\n          icon: AppointmentsIcon,\r\n          path: \"/clients/appointments\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Inventory\",\r\n      type: \"inventory\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({\r\n          ...expandedItems,\r\n          inventory: !expandedItems.inventory,\r\n        }),\r\n      icon: InventoryIcon,\r\n      subItems: [\r\n        {\r\n          label: \"All Items\",\r\n          icon: AllItemsIcon,\r\n          path: \"/inventory/items\",\r\n        },\r\n        {\r\n          label: \"Item Transactions\",\r\n          icon: ItemTransactionIcon,\r\n          path: \"/inventory/sales\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Admin\",\r\n      type: \"admin\",\r\n      handleOnClick: () =>\r\n        setExpandedItems({ ...expandedItems, admin: !expandedItems.admin }),\r\n      mIcon: Settings,\r\n      subItems: [\r\n        {\r\n          label: \"Item Category\",\r\n          mIcon: Category,\r\n          path: \"/admin/item-categories\",\r\n        },\r\n        // {\r\n        //   label: \"Pet Queue\",\r\n        //   icon: PetQueueIcon,\r\n        //   path: \"/home/pet-queues\",\r\n        // },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const drawer = (\r\n    <>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((item) => {\r\n          return (\r\n            <React.Fragment key={item.label}>\r\n              <ListItem key={item.label} button onClick={item.handleOnClick}>\r\n                <ListItemIcon>\r\n                  {item.icon ? (\r\n                    <ReactSVG\r\n                      key={item.label}\r\n                      src={item.icon}\r\n                      beforeInjection={(svg) => {\r\n                        svg.classList.add(classes.drawerIcon);\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <item.mIcon color=\"primary\" size=\"lg\" />\r\n                  )}\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label}></ListItemText>\r\n                {expandedItems[item.type] ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse\r\n                in={expandedItems[item.type]}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <List component=\"div\">\r\n                  {item.subItems.map((subItem) => {\r\n                    return (\r\n                      <ListItem\r\n                        key={subItem.label}\r\n                        button\r\n                        component={Link}\r\n                        to={subItem.path}\r\n                        className={classes.nested}\r\n                      >\r\n                        <ListItemIcon>\r\n                          {subItem.icon ? (\r\n                            <ReactSVG\r\n                              key={subItem.label}\r\n                              src={subItem.icon}\r\n                              beforeInjection={(svg) => {\r\n                                svg.classList.add(classes.drawerIcon);\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <subItem.mIcon color=\"primary\" size=\"lg\" />\r\n                          )}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={subItem.label}></ListItemText>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(toggleDrawer());\r\n  };\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <>\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={isOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return renderContent();\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CustomAppBar } from \"./CustomAppBar\";\r\nimport { CustomDrawer } from \"./CustomDrawer\";\r\n\r\nconst PrivateLayout = ({ component: Component, ...restProps }) => {\r\n  // Get Authentication Reducer\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  if (Object.keys(user).length !== 0) {\r\n    return (\r\n      <Route\r\n        {...restProps}\r\n        render={(props) => (\r\n          <>\r\n            <CustomAppBar />\r\n            <CustomDrawer />\r\n            <Component {...props} />\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/auth/login\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-evenly\",\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      paddingBottom: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const handleShowPasswordPressed = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      id=\"loginForm\"\r\n      className={classes.root}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        size=\"small\"\r\n        helperText={!!errors.username ? \"This field is required!\" : \"\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        error={!!errors.username}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        size=\"small\"\r\n        helperText={!!errors.password ? \"This field is required!\" : \"\"}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        inputRef={register({\r\n          required: true,\r\n        })}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <IconButton onClick={handleShowPasswordPressed}>\r\n                {showPassword ? (\r\n                  <VisibilityOff color=\"secondary\" />\r\n                ) : (\r\n                  <Visibility color=\"secondary\" />\r\n                )}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        error={!!errors.password}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/login_background.102072f5.png\";","export default __webpack_public_path__ + \"static/media/logo.68ea1519.png\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress, Paper, Typography } from \"@material-ui/core\";\r\nimport LoginForm from \"./loginForm\";\r\nimport { logIn } from \"../authSlice\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport bg from \"../../../assets/login_background.png\";\r\nimport logo from \"../../../assets/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    background: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundImage: `url(${bg})`,\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      filter: \"blur(4px)\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      maxHeight: \"500px\",\r\n      maxWidth: \"500px\",\r\n      gridTemplate: \"1fr 1fr 1fr/ 1fr\",\r\n      placeContent: \"center\",\r\n      padding: \"1em\",\r\n      zIndex: 2,\r\n    },\r\n    loading: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      placeContent: \"center\",\r\n    },\r\n\r\n    centerItem: {\r\n      display: \"grid\",\r\n      placeSelf: \"center\",\r\n    },\r\n\r\n    logo: {\r\n      position: \"fixed\",\r\n      top: \"0\",\r\n      margin: \"1em auto\",\r\n      width: \"80px\",\r\n      height: \"80px\",\r\n      zIndex: 2,\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(logIn(data));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loading}>\r\n          <CircularProgress color=\"primary\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (Object.keys(user).length === 0) {\r\n      return (\r\n        <Paper variant={\"outlined\"} className={classes.container}>\r\n          <Typography\r\n            className={classes.centerItem}\r\n            align=\"center\"\r\n            variant={\"h5\"}\r\n          >\r\n            Petshield Veterinary Clinic\r\n          </Typography>\r\n          <div>\r\n            <LoginForm onSubmit={handleSubmit} />\r\n            <Button\r\n              color=\"primary\"\r\n              form=\"loginForm\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/home/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <img className={classes.logo} src={logo} alt=\"logo\"></img>\r\n      <div className={classes.background}></div>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import axios from \"./axios\";\r\n\r\nexport const getItemSalesStats = async (\r\n  branchName,\r\n  salesDate,\r\n  salesDateCateg\r\n) => {\r\n  const response = await axios.get(\r\n    `/stats/${branchName}/item-sales?salesDate=${salesDate}&salesDateCateg=${salesDateCateg}`\r\n  );\r\n\r\n  if (response.data.data) {\r\n    return response.data.data;\r\n  } else {\r\n    throw Error(response.data.error);\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getItemSalesStats as getItemSalesStatesFromApi } from \"../../../../api/stats\";\r\n\r\nlet initialState = {\r\n  isLoading: false,\r\n  stats: {},\r\n  error: null,\r\n};\r\nconst handleOnStart = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnError = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst homeSalesStatsSlice = createSlice({\r\n  name: \"homeSalesStats\",\r\n  initialState,\r\n  reducers: {\r\n    fetchItemSalesStatsStart: handleOnStart,\r\n    fetchItemSalesStatsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.stats = action.payload;\r\n    },\r\n    fetchItemSalesStatsFailure: handleOnError,\r\n  },\r\n});\r\n\r\nexport default homeSalesStatsSlice.reducer;\r\n\r\nexport const {\r\n  fetchItemSalesStatsFailure,\r\n  fetchItemSalesStatsStart,\r\n  fetchItemSalesStatsSuccess,\r\n} = homeSalesStatsSlice.actions;\r\n\r\nexport const fetchItemSalesStats = (salesDate, salesDateCateg) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { user } = getState().auth;\r\n\r\n  try {\r\n    dispatch(fetchItemSalesStatsStart());\r\n    const stats = await getItemSalesStatesFromApi(\r\n      user.branchName,\r\n      salesDate,\r\n      salesDateCateg\r\n    );\r\n    dispatch(fetchItemSalesStatsSuccess(stats));\r\n  } catch (error) {\r\n    dispatch(fetchItemSalesStatsFailure(error));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { fetchItemSalesStats } from \"./homeSalesStatsSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsDatePicker = ({\r\n  setSalesDateCateg,\r\n  salesDateCateg,\r\n  salesDate,\r\n  setSalesDate,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const datePickerViews = {\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const handleSalesDateChanged = (val) => {\r\n    setSalesDate(moment(val).format(\"MM-DD-YYYY\"));\r\n  };\r\n\r\n  const handleSalesDateCategChanged = ({ target: { value } }) => {\r\n    setSalesDateCateg(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemSalesStats(salesDate, salesDateCateg));\r\n  }, [dispatch, salesDate, salesDateCateg]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        value={salesDateCateg}\r\n        onChange={handleSalesDateCategChanged}\r\n        variant=\"outlined\"\r\n      >\r\n        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n        <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n      </Select>\r\n      <DatePicker\r\n        value={salesDate}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n        )}\r\n        views={datePickerViews[salesDateCateg]}\r\n        onChange={handleSalesDateChanged}\r\n      ></DatePicker>\r\n    </div>\r\n  );\r\n};\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { currencyFormatter } from \"../../../../../utils/formatter\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStatsToolip = ({ payload, active }) => {\r\n  const classes = useStyles();\r\n  if (active && payload) {\r\n    const title = payload[0].payload[\"name\"];\r\n    const value = payload[0].payload[\"sales\"];\r\n\r\n    const renderData = () => {\r\n      if (Object.keys(value).length !== 0) {\r\n        const filteredSales = Object.keys(value)\r\n          .filter((key) => key !== \"Net Sales\")\r\n          .map((key) => {\r\n            return (\r\n              <Typography key={key}>{`${key}: ${currencyFormatter(\r\n                value[key]\r\n              )}`}</Typography>\r\n            );\r\n          });\r\n        return (\r\n          <>\r\n            {filteredSales}\r\n            <Typography>\r\n              {`Net Sales: ${\r\n                value[\"Net Sales\"] !== undefined\r\n                  ? currencyFormatter(value[\"Net Sales\"])\r\n                  : 0\r\n              }`}\r\n            </Typography>\r\n          </>\r\n        );\r\n      }\r\n\r\n      return <Typography>No Sales</Typography>;\r\n    };\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {title}\r\n        </Typography>\r\n        <br />\r\n        {renderData()}\r\n      </Card>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  YAxis,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  Tooltip,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { HomeSalesStatsToolip } from \"./components/HomeSalesStatsTooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-evenly\",\r\n      flexDirection: \"column\",\r\n      gridGap: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        flexDirection: \"row\",\r\n      },\r\n    },\r\n    tooltip: {\r\n      backgroundColor: \"red\",\r\n    },\r\n  };\r\n});\r\nexport const HomeSalesStatsGraph = () => {\r\n  const classes = useStyles();\r\n  const { isLoading, stats } = useSelector((state) => state.homeSalesStats);\r\n  const [lineData, setLineData] = useState([]);\r\n  const [pieData, setPieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const pieColors = {\r\n      Grooming: \"#8884D8\",\r\n      \"Vet Sales\": \"#8CDEDC\",\r\n      \"Store Sales\": \"#B2ECE1\",\r\n      \"Blood Test\": \"#D295BF\",\r\n      default: \"#DE9151\",\r\n    };\r\n\r\n    if (Object.keys(stats).length !== 0) {\r\n      const data = stats.data.map((item) => {\r\n        return {\r\n          name: item.category,\r\n          sales: item.value,\r\n          netSales:\r\n            item.value[\"Net Sales\"] !== undefined ? item.value[\"Net Sales\"] : 0,\r\n        };\r\n      });\r\n\r\n      let pieMap = {};\r\n\r\n      for (let i = 0; i < stats.data.length; i++) {\r\n        if (Object.keys(stats.data[i].value).length !== 0) {\r\n          Object.keys(stats.data[i].value)\r\n            .filter((key) => key !== \"Net Sales\")\r\n            .forEach((key) => {\r\n              if (!pieMap[key]) {\r\n                pieMap[key] = 0;\r\n              }\r\n              pieMap[key] += stats.data[i].value[key];\r\n            });\r\n        }\r\n      }\r\n      const pieData = Object.keys(pieMap).map((key) => {\r\n        return {\r\n          name: key,\r\n          value: pieMap[key],\r\n          fill:\r\n            pieColors[key] !== undefined\r\n              ? pieColors[key]\r\n              : pieColors[\"default\"],\r\n        };\r\n      });\r\n\r\n      setPieData(pieData);\r\n      setLineData(data);\r\n    }\r\n  }, [stats, isLoading, setPieData, setLineData]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    if (lineData.length !== 0) {\r\n      return (\r\n        <>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <LineChart data={lineData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" type=\"category\" />\r\n              <YAxis type=\"number\" dataKey=\"netSales\" name=\"Net Sales\" />\r\n              <Tooltip content={<HomeSalesStatsToolip />} />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"netSales\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n          <ResponsiveContainer width={\"100%\"} height={400}>\r\n            <PieChart>\r\n              <Tooltip />\r\n              <Legend />\r\n              <Pie data={pieData} dataKey=\"value\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  return <div className={classes.root}>{renderContent()}</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { HomeSalesStatsDatePicker } from \"./HomeSalesStatsDatePicker\";\r\nimport { HomeSalesStatsGraph } from \"./HomeSalesStatsGraph\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n\r\n    title: {\r\n      margin: `${theme.spacing(2)} 0`,\r\n    },\r\n  };\r\n});\r\n\r\nexport const HomeSalesStats = () => {\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const [salesDateCateg, setSalesDateCateg] = useState(\"monthly\");\r\n  const [salesDate, setSalesDate] = useState(currentDate);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <HomeSalesStatsDatePicker\r\n        salesDate={salesDate}\r\n        setSalesDate={setSalesDate}\r\n        salesDateCateg={salesDateCateg}\r\n        setSalesDateCateg={setSalesDateCateg}\r\n      />\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        className={classes.title}\r\n      >{`${salesDateCateg.toUpperCase()} Sales`}</Typography>\r\n      <div>\r\n        <HomeSalesStatsGraph />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { HomeSalesStats } from \"./homeSalesStats/HomeSalesStats\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst HomeDashboard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <HomeSalesStats />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomeDashboard;\r\n","export default __webpack_public_path__ + \"static/media/consultations.524fbfbc.svg\";","export default __webpack_public_path__ + \"static/media/rx_icon.edf0143d.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Check,\r\n  LibraryBooksOutlined,\r\n  Person,\r\n  PostAdd,\r\n  Event,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    owner: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.owner}>Owner: Paolo</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.finish)}\r\n        >\r\n          <Check />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Event />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport ConsultationsIcon from \"../../../assets/consultations.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { ConsultationCard } from \"./ConsultationCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    consultationList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ConsultationsCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Consultations</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets to consult:{\" \"}\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={ConsultationsIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.consultationList}>\r\n          <ConsultationCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admitted.d82cca45.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, ButtonBase, Paper, Typography } from \"@material-ui/core\";\r\nimport { LibraryBooksOutlined, Person, PostAdd } from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    consultationInfoContainer: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(1),\r\n    },\r\n    consultationButtonsContainer: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n      padding: theme.spacing(1),\r\n      gridGap: \"0.3em\",\r\n    },\r\n    consultationButton: {\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    finish: {\r\n      border: \"1px solid green\",\r\n\r\n      color: \"green\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const AdmittanceCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.consultationInfoContainer}>\r\n        <Avatar className={classes.petAvatar}></Avatar>\r\n        <div>\r\n          <Typography variant=\"h6\">PetName</Typography>\r\n          <Typography className={classes.subTitle}>Owner: Paolo</Typography>\r\n          <Typography className={classes.subTitle}>Days admitted: 0</Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.consultationButtonsContainer}>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <LibraryBooksOutlined />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <Person />\r\n        </ButtonBase>\r\n        <ButtonBase className={classes.consultationButton}>\r\n          <PostAdd />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classNames(classes.consultationButton, classes.rxIcon)}\r\n        >\r\n          <img src={RxIcon} alt=\"rx\"></img>\r\n        </ButtonBase>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AdmittedIcon from \"../../../assets/admitted.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { AdmittanceCard } from \"./AdmittanceCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    icon: {\r\n      height: \"45px\",\r\n      width: \"45px\",\r\n      fill: \"white !important\",\r\n    },\r\n    title: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      marginBottom: \"1em\",\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n    },\r\n    admittancesList: {\r\n      marginTop: \"1em\",\r\n    },\r\n  };\r\n});\r\nexport const AdmittancesCard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.title}>\r\n          <div>\r\n            <Typography variant=\"h5\">Admitted</Typography>\r\n            <Typography className={classes.subTitle} variant=\"body1\">\r\n              Pets admitted:\r\n            </Typography>\r\n          </div>\r\n          <ReactSVG\r\n            src={AdmittedIcon}\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(classes.icon);\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.admittancesList}>\r\n          <AdmittanceCard />\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { ConsultationsCard } from \"./ConsultationsCard\";\r\nimport { AdmittancesCard } from \"./AdmittancesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    container: {\r\n      display: \"grid\",\r\n      gridTemplate: \"1fr / 1fr 1fr\",\r\n      gridGap: theme.spacing(3),\r\n    },\r\n  };\r\n});\r\n\r\nconst HomePetQueues = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.container}>\r\n        <ConsultationsCard />\r\n        <AdmittancesCard />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomePetQueues;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomeDashboard from \"./homeDashboard/HomeDashboard\";\r\nimport HomePetQueues from \"./homePetQueues/HomePetQueues\";\r\n\r\nconst HomePage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.url}/dashboard`} component={HomeDashboard} />\r\n      <Route exact path={`${match.url}/pet-queues`} component={HomePetQueues} />\r\n      <Redirect to={`${match.url}/dashboard`} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  ButtonBase,\r\n  Typography,\r\n  ListItem,\r\n  Collapse,\r\n  Paper,\r\n  Hidden,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport {\r\n  Person,\r\n  PostAdd,\r\n  AccountBalance,\r\n  Event,\r\n  EventNote,\r\n} from \"@material-ui/icons\";\r\nimport RxIcon from \"../../../assets/rx_icon.png\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#2f2f2f\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    infoContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      // padding: theme.spacing(1),\r\n    },\r\n    buttonsContainer: {\r\n      display: \"flex\",\r\n      gridGap: \"0.3em\",\r\n      justifyContent: \"space-evenly\",\r\n      padding: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"grid\",\r\n        gridTemplate: \"1fr 1fr / 1fr 1fr\",\r\n        padding: theme.spacing(1),\r\n        gridGap: \"0.3em\",\r\n      },\r\n    },\r\n    consultationButton: {\r\n      zIndex: \"10\",\r\n      padding: theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      borderColor: theme.palette.primary.main,\r\n      border: \"1px solid\",\r\n    },\r\n    petAvatar: {\r\n      height: theme.spacing(7),\r\n      width: theme.spacing(7),\r\n      marginRight: \"1em\",\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n      },\r\n    },\r\n    subTitle: {\r\n      opacity: \"0.6\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    rxIcon: {\r\n      border: \"1px solid black\",\r\n      backgroundColor: \"white\",\r\n      \"& img\": {\r\n        height: \"20px\",\r\n      },\r\n    },\r\n    clientMoreDetails: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientCard = ({ client, index }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnPaymentHistoryPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_TRANSACTIONS_MODAL\",\r\n        modalProps: {\r\n          index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddVeterinarianNotePressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_VETERINARIAN_NOTE_MODAL\",\r\n        modalProps: { index },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnAddAppointmentPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n          startDate: Date().toString(),\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleOnAppointmentsPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"CLIENT_APPOINTMENTS_MODAL\",\r\n        modalProps: {\r\n          clientIndex: index,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemPressed = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ListItem\r\n        button\r\n        className={classes.container}\r\n        onClick={handleOnItemPressed}\r\n      >\r\n        <div className={classes.infoContainer}>\r\n          <Hidden smDown>\r\n            <Avatar className={classes.petAvatar}></Avatar>\r\n          </Hidden>\r\n          <div>\r\n            <Typography variant=\"h6\">{`Pet Name: ${client.pet.petName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Owner: ${client.clientName}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Species: ${client.pet.species}`}</Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n            >{`Pet Breed: ${client.pet.petBreed}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Last Visit: ${moment(\r\n              client.lastVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n            <Typography className={classes.subTitle}>{`Next Visit: ${moment(\r\n              client.nextVisit\r\n            ).format(\"MM-DD-YYYY HH-MM-SS A\")}`}</Typography>\r\n          </div>\r\n        </div>\r\n        <Hidden smDown>\r\n          <div className={classes.buttonsContainer}>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnPaymentHistoryPressed}\r\n            >\r\n              <AccountBalance />\r\n            </ButtonBase>\r\n            <ButtonBase className={classes.consultationButton}>\r\n              <Person />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAddVeterinarianNotePressed}\r\n            >\r\n              <PostAdd />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAppointmentsPressed}\r\n            >\r\n              <EventNote />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAddAppointmentPressed}\r\n            >\r\n              <Event />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classNames(classes.consultationButton, classes.rxIcon)}\r\n            >\r\n              <img src={RxIcon} alt=\"rx\"></img>\r\n            </ButtonBase>\r\n          </div>\r\n        </Hidden>\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <Hidden smUp>\r\n          <Divider />\r\n          <div className={classes.buttonsContainer}>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnPaymentHistoryPressed}\r\n            >\r\n              <AccountBalance />\r\n            </ButtonBase>\r\n            <ButtonBase className={classes.consultationButton}>\r\n              <Person />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAddVeterinarianNotePressed}\r\n            >\r\n              <PostAdd />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAppointmentsPressed}\r\n            >\r\n              <EventNote />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classes.consultationButton}\r\n              onClick={handleOnAddAppointmentPressed}\r\n            >\r\n              <Event />\r\n            </ButtonBase>\r\n            <ButtonBase\r\n              className={classNames(classes.consultationButton, classes.rxIcon)}\r\n            >\r\n              <img src={RxIcon} alt=\"rx\"></img>\r\n            </ButtonBase>\r\n          </div>\r\n          <Divider />\r\n        </Hidden>\r\n        <div className={classes.clientMoreDetails}>\r\n          <Typography>{`Address: ${client.address}`}</Typography>\r\n          <Typography>{`Contact Number: ${client.contactNumber}`}</Typography>\r\n          <Typography>{`Email: ${client.email}`}</Typography>\r\n          <Typography>{`Veterinarian Note: ${client.veterinarianNote}`}</Typography>\r\n        </div>\r\n      </Collapse>\r\n    </Paper>\r\n  );\r\n};\r\n","import { List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ClientCard } from \"./ClientCard\";\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      minHeight: \"100%\",\r\n      overflowY: \"auto\",\r\n      overflowX: \"hidden\",\r\n      padding: `0 ${theme.spacing(2)}`,\r\n      paddingBottom: theme.spacing(5), // This is added in order to have space in the end of the list.\r\n    },\r\n  };\r\n});\r\nexport const ClientsAllClientsList = ({ clients }) => {\r\n  const classes = useStyles();\r\n\r\n  const renderContent = () => {\r\n    return Object.keys(clients).map((key) => (\r\n      <ClientCard key={clients[key].ID} client={clients[key]} index={key} />\r\n    ));\r\n  };\r\n\r\n  return <List className={classes.root}>{renderContent()}</List>;\r\n};\r\n","import { TextField, Button, InputAdornment, Hidden } from \"@material-ui/core\";\r\nimport { Add, Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { showModal } from \"../../modals/modalSlice\";\r\nimport { searchClients, fetchClients } from \"../clientsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      marginBottom: theme.spacing(2),\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientsAllClientsHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const handleOnAddClientPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_CLIENT_MODAL\",\r\n      })\r\n    );\r\n  };\r\n  const search = (value) => {\r\n    if (value !== \"\") {\r\n      dispatch(searchClients(value));\r\n    } else {\r\n      dispatch(fetchClients());\r\n    }\r\n  };\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleSearchClientChanged = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Hidden smUp>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Search\"\r\n          size=\"small\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Search color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handleSearchClientChanged}\r\n        ></TextField>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Search\"\r\n          size=\"small\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Search color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={handleSearchClientChanged}\r\n        ></TextField>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<Add />}\r\n          onClick={handleOnAddClientPressed}\r\n        >\r\n          Add Client\r\n        </Button>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress, Paper } from \"@material-ui/core\";\r\n\r\nimport { fetchClients } from \"../clientsSlice\";\r\nimport { ClientsAllClientsList } from \"./ClientsAllClientsList\";\r\nimport { ClientsAllClientsHeader } from \"./ClientsAllClientListHeader\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n      },\r\n    },\r\n    loadingIndicator: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAllClients = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { clients, isClientsLoading } = useSelector((state) => state.clients);\r\n  const [clientsSearchResult, setClientsSearchResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n  const renderContent = () => {\r\n    if (!isClientsLoading) {\r\n      return (\r\n        <>\r\n          <ClientsAllClientsList\r\n            clients={clientsSearchResult ? clientsSearchResult : clients}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ClientsAllClientsHeader\r\n        setClientResultsSearch={setClientsSearchResult}\r\n      />\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ClientsAllClients;\r\n","import { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, TextField, Button } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateAppointment, removeAppointment } from \"../../clientsSlice\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    icon: {\r\n      color: theme.palette.action.active,\r\n    },\r\n    textCenter: {\r\n      textAlign: \"center\",\r\n    },\r\n    commandButton: {\r\n      backgroundColor: \"rgba(255,255,255,0.65)\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n\r\n      justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      marginTop: theme.spacing(2),\r\n      width: \"100%\",\r\n      flexDirection: \"column\",\r\n      gap: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentTooltipHeader = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n\r\n  ...restProps\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleOnDeletePressed = () => {\r\n    const { appointment } = appointmentData;\r\n    dispatch(removeAppointment({ appointmentId: appointment.ID }));\r\n    setAppointmentVisible(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <AppointmentTooltip.Header\r\n      className={classes.header}\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <IconButton onClick={handleOnDeletePressed}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n      <IconButton onClick={() => setIsEditing(!isEditing)}>\r\n        <Edit color={isEditing ? \"primary\" : \"action\"} />\r\n      </IconButton>\r\n    </AppointmentTooltip.Header>\r\n  );\r\n};\r\n\r\nexport const ClientAppointmentTooltipContent = ({\r\n  children,\r\n  appointmentData,\r\n  setIsEditing,\r\n  isEditing,\r\n  setAppointmentVisible,\r\n  onAppointmentMetaChanged,\r\n  ...restProps\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, control } = useForm();\r\n  const { appointment } = appointmentData;\r\n\r\n  const onSubmit = (data) => {\r\n    const formattedDate = moment(data.date).toISOString();\r\n    const newAppointment = {\r\n      ...appointment,\r\n      date: formattedDate,\r\n      veterinarianNote: data.veterinarianNotes,\r\n    };\r\n    setAppointmentVisible(false);\r\n    dispatch(updateAppointment({ appointment: newAppointment }));\r\n  };\r\n\r\n  return (\r\n    <AppointmentTooltip.Content\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <form\r\n        className={classes.form}\r\n        id=\"updateAppointmentForm\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Controller\r\n          id=\"appointment-date\"\r\n          name=\"date\"\r\n          control={control}\r\n          defaultValue={moment(appointment.date).toDate()}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={(props) => (\r\n            <DatePicker\r\n              disabled={!isEditing}\r\n              renderInput={(props) => (\r\n                <TextField\r\n                  {...props}\r\n                  size=\"small\"\r\n                  label=\"Appointment Date\"\r\n                  readOnly={!isEditing}\r\n                />\r\n              )}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"veterinarianNotes\"\r\n          control={control}\r\n          defaultValue={appointment.veterinarianNote}\r\n          rules={{}}\r\n          render={(props) => (\r\n            <TextField\r\n              disabled={!isEditing}\r\n              label=\"Notes\"\r\n              multiline\r\n              size=\"small\"\r\n              rows={5}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        {isEditing ? (\r\n          <Button form=\"updateAppointmentForm\">Update Appointment</Button>\r\n        ) : null}\r\n      </form>\r\n    </AppointmentTooltip.Content>\r\n  );\r\n};\r\n","import { MonthView } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const MonthCell = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnCellPressed = () => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_APPOINTMENT_MODAL\",\r\n        modalProps: {\r\n          startDate: String(props.startDate),\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return <MonthView.TimeTableCell onClick={handleOnCellPressed} {...props} />;\r\n};\r\n","import { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport React from \"react\";\r\n\r\nclass ClientAppointment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      data,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      notificationState,\r\n      setNotificationState,\r\n    } = this.props;\r\n    if (notificationState) {\r\n      const { appointment } = notificationState;\r\n\r\n      if (Array.isArray(appointment)) {\r\n        if (appointment[0].ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      } else {\r\n        if (appointment.ID === data.id) {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: this.ref.current.parentElement.parentElement,\r\n            data,\r\n          });\r\n          setNotificationState(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      onClick,\r\n      classes,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChange,\r\n      location,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    return (\r\n      <Appointments.Appointment\r\n        ref={this.ref}\r\n        onClick={({ target }) => {\r\n          setAppointmentVisible(true);\r\n          onAppointmentMetaChange({\r\n            target: target.parentElement.parentElement,\r\n            data,\r\n          });\r\n        }}\r\n        {...restProps}\r\n      >\r\n        <div ref={this.ref}>{restProps.children}</div>\r\n      </Appointments.Appointment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientAppointment;\r\n// export const ClientAppointment = ({\r\n//   data,\r\n//   onClick,\r\n//   classes,\r\n//   setAppointmentVisible,\r\n//   onAppointmentMetaChange,\r\n//   location,\r\n//   ...restProps\r\n// }) => {\r\n//   useEffect(() => {}, [\r\n//     location,\r\n//     data,\r\n//     setAppointmentVisible,\r\n//     onAppointmentMetaChange,\r\n//   ]);\r\n\r\n//   return (\r\n//     <Appointments.Appointment\r\n//       onClick={({ target }) => {\r\n//         setAppointmentVisible(true);\r\n//         onAppointmentMetaChange({\r\n//           target: target.parentElement.parentElement,\r\n//           data,\r\n//         });\r\n//       }}\r\n//       {...restProps}\r\n//     />\r\n//   );\r\n// };\r\n","import { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  MonthView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport {\r\n  ClientAppointmentTooltipContent,\r\n  ClientAppointmentTooltipHeader,\r\n} from \"./ClientAppointmentTooltip\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MonthCell } from \"./ClientAppointmentsSchedulerMonthCell\";\r\nimport ClientAppointment from \"./ClientAppointment\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n      borderRadius: \"10px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    appointmentWrapper: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientAppointmentsScheduler = ({ data }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [appointmentVisible, setAppointmentVisible] = useState(false);\r\n  const [notificationState, setNotificationState] = useState(location.state);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [appointmentMeta, setAppointmentMeta] = useState({\r\n    target: null,\r\n    data: {},\r\n  });\r\n\r\n  const handleOnAppointmentMetaChanged = ({ data, target }) => {\r\n    setIsEditing(false);\r\n    setAppointmentMeta({ data, target });\r\n  };\r\n\r\n  const tooltipHeader = connectProps(ClientAppointmentTooltipHeader, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n    };\r\n  });\r\n  const tooltipContent = connectProps(ClientAppointmentTooltipContent, () => {\r\n    return {\r\n      setIsEditing,\r\n      isEditing,\r\n      setAppointmentVisible,\r\n      onAppointmentMetaChanged: handleOnAppointmentMetaChanged,\r\n    };\r\n  });\r\n\r\n  const appointment = connectProps(ClientAppointment, () => {\r\n    return {\r\n      classes,\r\n      setAppointmentVisible: setAppointmentVisible,\r\n      onAppointmentMetaChange: handleOnAppointmentMetaChanged,\r\n      notificationState,\r\n      setNotificationState,\r\n    };\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Scheduler height=\"auto\" data={data} className={classes.root}>\r\n        <ViewState />\r\n\r\n        <MonthView timeTableCellComponent={MonthCell} />\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <Appointments appointmentComponent={appointment} />\r\n        <AppointmentTooltip\r\n          headerComponent={tooltipHeader}\r\n          contentComponent={tooltipContent}\r\n          visible={appointmentVisible}\r\n          onVisibilityChange={(visible) => setAppointmentVisible(visible)}\r\n          appointmentMeta={appointmentMeta}\r\n          onAppointmentMetaChange={handleOnAppointmentMetaChanged}\r\n        />\r\n\r\n        <AppointmentForm />\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n};\r\n","import { ClientAppointmentsScheduler } from \"./ClientAppointmentsScheduler\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientAppointmentsSchedulerContainer = () => {\r\n  const { appointments } = useSelector((state) => state.clients);\r\n  const data = appointments.map((ap) => {\r\n    return {\r\n      id: ap.ID,\r\n      startDate: new Date(ap.date),\r\n      endDate: moment(new Date(ap.date)).add(2, \"hours\").toDate(),\r\n      title: `${ap.client.clientName} - ${ap.client.pet.petName} : ${ap.type}`,\r\n      client: ap.client,\r\n      appointment: ap,\r\n    };\r\n  });\r\n\r\n  return <ClientAppointmentsScheduler data={data} />;\r\n};\r\nexport default ClientAppointmentsSchedulerContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAppointments } from \"../clientsSlice\";\r\nimport ClientAppointmentsScheduler from \"./ClientAppointmentsScheduler/ClientAppointmentsSchedulerContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\nconst ClientsAppointments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isAppointmentsLoading } = useSelector((state) => state.clients);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAppointments());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isAppointmentsLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    return <ClientAppointmentsScheduler />;\r\n  };\r\n\r\n  return <Card className={classes.root}>{renderContent()}</Card>;\r\n};\r\n\r\nexport default ClientsAppointments;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  TextField,\r\n  Autocomplete,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n  setSelectedClient,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { isClientsLoading, clients } = useSelector((state) => state.clients);\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  const renderClientNameField = () => {\r\n    if (!showAddItemSaleRow) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Autocomplete\r\n        loading={isClientsLoading}\r\n        options={clients}\r\n        getOptionLabel={(option) => option.clientName}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            size=\"small\"\r\n            label=\"Client Name\"\r\n            variant=\"outlined\"\r\n            helperText=\"Enter client name here.\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {isClientsLoading ? (\r\n                    <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n        onChange={(_, data, reason) => {\r\n          if (reason === \"select-option\") {\r\n            setSelectedClient(data);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>{renderClientNameField()}</div>\r\n\r\n      <div>\r\n        <Hidden smDown>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddTransactionPressed}\r\n          >\r\n            {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n          </Button>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\n\r\nimport { addClientPayment, fetchClients } from \"../../clientsSlice\";\r\nimport {\r\n  searchItems,\r\n  clearItemsSearch,\r\n} from \"../../../inventory/inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: theme.spacing(1),\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  selectedClient,\r\n  setSelectedClient,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedClient({});\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addClientPayment(selectedClient.ID, selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>₱{Number(selectedItem.price).toFixed(2)}</TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            margin=\"dense\"\r\n            onChange={handleOnQuantityChange}\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>₱{Number(sales).toFixed(2)}</TableCell>\r\n        <TableCell>\r\n          {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n        </TableCell>\r\n        <TableCell>\r\n          {selectedItem.isIncentiveFixed\r\n            ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n            : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                2\r\n              )}`}\r\n        </TableCell>\r\n        <TableCell>₱{Number(netSales).toFixed(2)}</TableCell>\r\n        <TableCell>{selectedItem.category}</TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderItemField = () => {\r\n    if (Object.keys(selectedClient).length === 0) {\r\n      return \"Select a client first\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Product Name\"\r\n              size=\"small\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n        {selectedItem.name}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>{currentDate}</TableCell>\r\n      <TableCell>{selectedClient.clientName}</TableCell>\r\n      <TableCell>{renderItemField()}</TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ClientPaymentsTableHeader from \"./ClientPaymentsTableHeader\";\r\nimport { ClientPaymentsTableAddItemRow } from \"./ClientPaymentsTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ClientPaymentsTable = ({ data, columns }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ClientPaymentsTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n        setSelectedClient={setSelectedClient}\r\n        selectedClient={selectedClient}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ClientPaymentsTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              selectedClient={selectedClient}\r\n              setSelectedClient={setSelectedClient}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {cell.render(\"Cell\")}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ClientPaymentsTable } from \"./ClientPaymentsTable\";\r\nimport moment from \"moment\";\r\nimport { currencyFormatter } from \"../../../../utils/formatter\";\r\n\r\nconst ClientPaymentsTableContainer = ({ itemSales }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.client.clientName,\r\n        col3: itemSale.item.name,\r\n        col4: currencyFormatter(itemSale.item.price),\r\n        col5: itemSale.quantity,\r\n        col6: currencyFormatter(itemSale.sales),\r\n        col7: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col8: itemSale.item.isIncentiveFixed\r\n          ? currencyFormatter(itemSale.item.incentiveAmount)\r\n          : currencyFormatter(itemSale.incentives * itemSale.quantity),\r\n        col9: currencyFormatter(itemSale.netSales),\r\n        col10: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Client\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col9\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col10\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    itemSales,\r\n  };\r\n\r\n  return <ClientPaymentsTable {...stateToProps} />;\r\n};\r\n\r\nexport default ClientPaymentsTableContainer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Typography, ButtonBase } from \"@material-ui/core\";\r\nimport { showModal } from \"../../features/modals/modalSlice\";\r\nimport { currencyFormatter } from \"../../utils/formatter\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      height: \"150px\",\r\n      alignItems: \"center\",\r\n      padding: \"1em\",\r\n      backgroundColor: \"#1D1D1D\",\r\n      overflow: \"hidden\",\r\n      \"&::before\": {\r\n        content: '\" \"',\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: \"8px\",\r\n        width: \"50%\",\r\n        top: \"-3px\",\r\n        borderRadius: \"20px\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesCard = ({ title, value, dailySales }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSalesCardPressed = () => {\r\n    if (dailySales && Object.keys(dailySales).length !== 0) {\r\n      if (String(title).includes(\"Net Sales\")) {\r\n        dispatch(\r\n          showModal({\r\n            modalType: \"NET_SALES_BREAKDOWN_MODAL\",\r\n            modalProps: {\r\n              title,\r\n              dailySales,\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          showModal({\r\n            modalType: \"SALES_BREAKDOWN_MODAL\",\r\n            modalProps: {\r\n              title,\r\n              dailySales,\r\n            },\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonBase\r\n      className={classes.root}\r\n      elevation={0}\r\n      onClick={onSalesCardPressed}\r\n    >\r\n      <Typography style={{ fontWeight: \"bold\" }} align=\"center\">\r\n        {title}\r\n      </Typography>\r\n      <Typography>{currencyFormatter(value)}</Typography>\r\n    </ButtonBase>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Select, MenuItem, TextField, Hidden } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      flexWrap: \"wrap\",\r\n      gap: \"1em\",\r\n      marginBottom: theme.spacing(2),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        gap: \"0\",\r\n      },\r\n    },\r\n    picker: {\r\n      height: \"100% !important\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesDatePicker = ({\r\n  onSalesDateChanged,\r\n  onSalesDateCategChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n\r\n  const datePickerViews = {\r\n    daily: [\"date\"],\r\n    monthly: [\"month\", \"year\"],\r\n    yearly: [\"year\"],\r\n  };\r\n\r\n  const [selectedSalesDateCateg, setSelectedSalesDateCateg] = useState(\"daily\");\r\n  const [selectedSalesDate, setSelectedSalesDate] = useState(currentDate);\r\n\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    setSelectedSalesDateCateg(value);\r\n    onSalesDateCategChanged({\r\n      salesDate: selectedSalesDate,\r\n      salesDateCateg: value,\r\n    });\r\n  };\r\n\r\n  const handleOnSalesDateChanged = (date) => {\r\n    const formattedDate = date.format(\"MM-DD-YYYY\").toString();\r\n    setSelectedSalesDate(formattedDate);\r\n    onSalesDateChanged({\r\n      salesDate: formattedDate,\r\n      salesDateCateg: selectedSalesDateCateg,\r\n    });\r\n  };\r\n\r\n  const renderPicker = () => {\r\n    if (selectedSalesDateCateg === \"overall\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <DatePicker\r\n        value={selectedSalesDate}\r\n        views={datePickerViews[selectedSalesDateCateg]}\r\n        allowKeyboardControl={false}\r\n        renderInput={(params) => (\r\n          <>\r\n            <Hidden smUp>\r\n              <TextField\r\n                fullWidth\r\n                {...params}\r\n                helperText={\"\"}\r\n                variant=\"outlined\"\r\n              />\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              <TextField {...params} helperText={\"\"} variant=\"outlined\" />\r\n            </Hidden>\r\n          </>\r\n        )}\r\n        onChange={(value) => {\r\n          handleOnSalesDateChanged(value);\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Hidden smUp>\r\n        <Select\r\n          variant=\"outlined\"\r\n          value={selectedSalesDateCateg}\r\n          fullWidth\r\n          onChange={(e) => handleOnSalesDateCategChanged(e.target.value)}\r\n        >\r\n          <MenuItem value=\"overall\">All</MenuItem>\r\n          <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n          <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n          <MenuItem value=\"daily\">Daily</MenuItem>\r\n        </Select>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <Select\r\n          variant=\"outlined\"\r\n          value={selectedSalesDateCateg}\r\n          onChange={(e) => handleOnSalesDateCategChanged(e.target.value)}\r\n        >\r\n          <MenuItem value=\"overall\">All</MenuItem>\r\n          <MenuItem value=\"yearly\">Yearly</MenuItem>\r\n          <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n          <MenuItem value=\"daily\">Daily</MenuItem>\r\n        </Select>\r\n      </Hidden>\r\n      {renderPicker()}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SalesCard } from \"./SalesCard\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"grid\",\r\n      width: \"100%\",\r\n\r\n      gridGap: \"1.5em\",\r\n      paddingBottom: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        gridTemplate: \"1fr / 1fr 1fr 1fr 1fr 1fr 1fr\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport const SalesStats = ({ dailySales, metadata }) => {\r\n  const classes = useStyles();\r\n\r\n  const [miscSales, setMiscSales] = useState({\r\n    dailySales: [],\r\n    sales: 0,\r\n  });\r\n  const [bloodTestSales, setBloodTestSales] = useState(0);\r\n  const [groomingSales, setGroomingSales] = useState(0);\r\n  const [vetSales, setVetSales] = useState(0);\r\n  const [storeSales, setStoreSales] = useState(0);\r\n  const [netSales, setNetSales] = useState(0);\r\n  const [salesTitle, setSalesTitle] = useState(\"\");\r\n\r\n  const computeSales = useCallback(() => {\r\n    let totalSales = 0;\r\n    let totalNetSales = 0;\r\n    const miscSalesItems = [];\r\n    const salesItems = [];\r\n    Object.keys(dailySales).forEach((val) => {\r\n      if (val === \"Blood Test\") {\r\n        setBloodTestSales(dailySales[val].netSales);\r\n        totalNetSales += dailySales[val].netSales;\r\n        salesItems.push(dailySales[val].items);\r\n      } else if (val === \"Grooming\") {\r\n        setGroomingSales(dailySales[val].netSales);\r\n        totalNetSales += dailySales[val].netSales;\r\n        salesItems.push(dailySales[val].items);\r\n      } else if (val === \"Vet Sales\") {\r\n        setVetSales(dailySales[val].netSales);\r\n        totalNetSales += dailySales[val].netSales;\r\n        salesItems.push(dailySales[val].items);\r\n      } else if (val === \"Store Sales\") {\r\n        salesItems.push(dailySales[val].items);\r\n        totalNetSales += dailySales[val].netSales;\r\n        setStoreSales(dailySales[val].netSales);\r\n      } else {\r\n        salesItems.push(dailySales[val].items);\r\n        miscSalesItems.push(dailySales[val].items);\r\n        totalSales += dailySales[val].netSales;\r\n      }\r\n    });\r\n    setMiscSales({\r\n      sales: totalSales,\r\n    });\r\n    setNetSales(totalNetSales + totalSales);\r\n  }, [setMiscSales, setNetSales, dailySales]);\r\n\r\n  const getSalesTitle = useCallback(() => {\r\n    const title =\r\n      String(metadata.salesDateCateg[0]).toUpperCase() +\r\n      String(metadata.salesDateCateg).substring(\r\n        1,\r\n        metadata.salesDateCateg.length\r\n      );\r\n    setSalesTitle(title);\r\n  }, [setSalesTitle, metadata]);\r\n\r\n  useEffect(() => {\r\n    computeSales();\r\n    getSalesTitle();\r\n  }, [computeSales, getSalesTitle]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesCard\r\n        title={`${salesTitle} Sales`}\r\n        value={miscSales.sales}\r\n        dailySales={dailySales[\"Misc\"]}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Blood Test`}\r\n        value={bloodTestSales}\r\n        dailySales={dailySales[\"Blood Test\"]}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Grooming`}\r\n        value={groomingSales}\r\n        dailySales={dailySales[\"Grooming\"]}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Store Sales`}\r\n        value={storeSales}\r\n        dailySales={dailySales[\"Store Sales\"]}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Sales - Vet Sales`}\r\n        value={vetSales}\r\n        dailySales={dailySales[\"Vet Sales\"]}\r\n      />\r\n      <SalesCard\r\n        title={`${salesTitle} Net Sales `}\r\n        value={netSales}\r\n        dailySales={dailySales}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchAllClientPayments } from \"../clientsSlice\";\r\nimport ClientPaymentsTableContainer from \"./ClientPaymentsTable/ClientPaymentsTableContainer\";\r\n\r\nimport moment from \"moment\";\r\nimport { SalesStats, SalesDatePicker } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ClientPayments = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isPaymentsLoading, clientPayments, error } = useSelector(\r\n    (state) => state.clients\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n    dispatch(\r\n      fetchAllClientPayments({\r\n        salesDate: currentDate,\r\n        salesDateCateg: \"daily\",\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchAllClientPayments(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (Object.keys(clientPayments).length !== 0 && !isPaymentsLoading) {\r\n      return (\r\n        <>\r\n          <SalesStats\r\n            metadata={clientPayments.metadata}\r\n            dailySales={clientPayments.dailySales}\r\n          />\r\n          <ClientPaymentsTableContainer\r\n            itemSales={clientPayments.itemSales ? clientPayments.itemSales : []}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <div className={classes.loadingIndicator}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ClientsAllClients from \"./clientsAllClients/ClientsAllClients\";\r\nimport ClientsAppointments from \"./clientsAppointments/ClientsAppointments\";\r\nimport ClientPayments from \"./clientsPayments/ClientPayments\";\r\n\r\nconst ClientsPage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/all-clients`} component={ClientsAllClients} />\r\n\r\n      <Route\r\n        path={`${match.url}/appointments`}\r\n        component={ClientsAppointments}\r\n      />\r\n      <Route path={`${match.url}/payments`} component={ClientPayments} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ClientsPage;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      alignItems: \"center\",\r\n    },\r\n    buttonContainer: {\r\n      width: \"100%\",\r\n      \r\n    },\r\n  };\r\n});\r\nconst InventoryItemsTableFooter = ({\r\n  gotoPage,\r\n  nextPage,\r\n  previousPage,\r\n  canNextPage,\r\n  canPreviousPage,\r\n  pageCount,\r\n  pageSize,\r\n  pageIndex,\r\n  itemsCount,\r\n}) => {\r\n  const classes = useStyles();\r\n  const renderCurrPageItemCount = () => {\r\n    const currPageItemCount =\r\n      pageSize * (pageIndex + 1) >= itemsCount\r\n        ? itemsCount\r\n        : pageSize * (pageIndex + 1);\r\n\r\n    return (\r\n      <Typography>{`Showing ${currPageItemCount} out of ${itemsCount} items`}</Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {renderCurrPageItemCount()}\r\n      <div className={classes.buttonContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          FIRST\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          PREV\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          NEXT\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          LAST\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableFooter;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      alignItem: \"center\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      marginBottom: \"1em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItemsTableHeader = ({\r\n  setPageSize,\r\n  pageSize,\r\n  handleSearchItemChanged,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const showItemCountValues = [10, 20, 30, 40, 50];\r\n\r\n  const handleAddItemPressed = (_) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"ADD_ITEM_MODAL\",\r\n        modalProps: {},\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnItemCountChange = (e) => {\r\n    setPageSize(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.container}>\r\n        <div></div>\r\n        <Hidden smDown>\r\n          <Button\r\n            className={classes.addItemButton}\r\n            variant=\"outlined\"\r\n            endIcon={<AddIcon />}\r\n            onClick={handleAddItemPressed}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        </Hidden>\r\n      </div>\r\n      <div className={classes.container}>\r\n        <div className={classes.itemCount}>\r\n          <Typography>Show &nbsp;</Typography>\r\n          <Select value={pageSize} onChange={handleOnItemCountChange}>\r\n            {showItemCountValues.map((itemCount) => (\r\n              <MenuItem key={itemCount} value={itemCount}>\r\n                {itemCount}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <Typography>&nbsp; entries</Typography>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Search\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <Search color=\"primary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(e) => {\r\n              handleSearchItemChanged(e.target.value);\r\n            }}\r\n          ></TextField>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItemsTableHeader;\r\n","import React from \"react\";\r\nimport { useTable, usePagination, useSortBy, useFilters } from \"react-table\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport InventoryItemsTableFooter from \"./InventoryItemsTableFooter\";\r\nimport InventoryItemsTableHeader from \"./InventoryItemsTableHeader\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n\r\n      backgroundColor: \"#1d1d1d\",\r\n      padding: \"1.5em\",\r\n      overflowX: \"auto\",\r\n    },\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventoryItemsTable = ({ data, columns, items }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setFilter,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const getCellProps = (cellInfo) => {\r\n    if (cellInfo.value === \"Out of Stock\") {\r\n      return {\r\n        className: classes.outOfStock,\r\n      };\r\n    } else if (cellInfo.value === \"In Stock\") {\r\n      return {\r\n        className: classes.inStock,\r\n      };\r\n    } else if (cellInfo.value === \"Discounted\") {\r\n      return {\r\n        className: classes.itemDiscounted,\r\n      };\r\n    }\r\n    return {\r\n      className: \"\",\r\n    };\r\n  };\r\n\r\n  const renderCell = (cell) => {\r\n    if (cell.column.id === \"col5\") {\r\n      return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n    } else if (cell.column.id === \"col7\") {\r\n      const discountAmount =\r\n        cell.row.values.col6 > 0\r\n          ? (cell.row.values.col6 / 100) * cell.row.values.col5\r\n          : 0;\r\n      return (\r\n        <Typography>\r\n          {cell.render(\"Cell\")}\r\n          {` (${discountAmount.toFixed(2)})`}\r\n        </Typography>\r\n      );\r\n    } else if (cell.column.id === \"col6\") {\r\n      return <Typography>{cell.render(\"Cell\")}%</Typography>;\r\n    }\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleManageItemPress = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"MANAGE_ITEM_MODAL\",\r\n        modalProps: {\r\n          item: items[itemIndex],\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchItemChanged = (searchTerm) => {\r\n    setFilter(\"col1\", searchTerm);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventoryItemsTableHeader\r\n        pageSize={pageSize}\r\n        setPageSize={setPageSize}\r\n        handleSearchItemChanged={handleSearchItemChanged}\r\n      />\r\n      <Table {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <TableCell\r\n                  {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                >\r\n                  <div key={header.id} className={classes.tableHeader}>\r\n                    {header.render(\"Header\")}\r\n                    {header.isSorted ? (\r\n                      header.isSortedDesc ? (\r\n                        <ArrowDownwardIcon fontSize=\"small\" />\r\n                      ) : (\r\n                        <ArrowUpwardIcon fontSize=\"small\" />\r\n                      )\r\n                    ) : null}\r\n                  </div>\r\n                </TableCell>\r\n              ))}\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody>\r\n          {page.map((row, _) => {\r\n            prepareRow(row);\r\n            return (\r\n              <>\r\n                <TableRow key={row.id} {...row.getRowProps()}>\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <TableCell key={`col${index}`}>\r\n                        <div\r\n                          {...cell.getCellProps([\r\n                            {\r\n                              className: cell.column.className,\r\n                            },\r\n                            getCellProps(cell),\r\n                          ])}\r\n                        >\r\n                          {renderCell(cell)}\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell key={row.id}>\r\n                    <Button\r\n                      fullWidth\r\n                      endIcon={<EditIcon></EditIcon>}\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        handleManageItemPress(row.index);\r\n                      }}\r\n                    >\r\n                      Manage Item\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      <InventoryItemsTableFooter\r\n        canPreviousPage={canPreviousPage}\r\n        canNextPage={canNextPage}\r\n        previousPage={previousPage}\r\n        nextPage={nextPage}\r\n        gotoPage={gotoPage}\r\n        pageCount={pageCount}\r\n        pageSize={pageSize}\r\n        pageIndex={pageIndex}\r\n        itemsCount={rows.length}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { currencyFormatter } from \"../../../../utils/formatter\";\r\nimport { InventoryItemsTable } from \"./InventoryItemsTable\";\r\n\r\nconst InventoryItemsTableContainer = ({ items }) => {\r\n  const data = useMemo(() => {\r\n    return items.map((item) => {\r\n      let status = \"\";\r\n      const isDiscounted = item.discount > 0;\r\n      const discountAmount = isDiscounted\r\n        ? item.price * (item.discount / 100)\r\n        : 0;\r\n      // Check if the item is In Stock and if has discount\r\n      if (item.discount > 0 && item.inStock > 0) {\r\n        status = \"Discounted\";\r\n      } else if (item.discount === 0 && item.inStock > 0) {\r\n        status = \"In Stock\";\r\n      } else {\r\n        status = \"Out of Stock\";\r\n      }\r\n\r\n      return {\r\n        col1: item.name,\r\n        col2: item.category,\r\n        col3: item.inStock,\r\n        col4: status,\r\n        col5: currencyFormatter(item.price),\r\n        col6: item.discount,\r\n        col7: currencyFormatter(item.price - discountAmount),\r\n      };\r\n    });\r\n  }, [items]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Stock\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Original Price\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Discount\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Total Price\",\r\n        accessor: \"col7\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const mapStateToProps = {\r\n    data,\r\n    columns,\r\n    items,\r\n  };\r\n\r\n  return <InventoryItemsTable {...mapStateToProps} />;\r\n};\r\n\r\nexport default InventoryItemsTableContainer;\r\n","import { CircularProgress, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItems } from \"./inventoryItemsSlice\";\r\nimport InventoryItemsTableContainer from \"./InventoryItemsTable/InventoryItemsTableContainer\";\r\n\r\nimport { clearItemsSearch } from \"../inventorySearchSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n    },\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventoryItems = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, items, error } = useSelector(\r\n    (state) => state.inventoryItems\r\n  );\r\n  const { isLoading: isSearching, result } = useSelector(\r\n    (state) => state.inventorySearch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(clearItemsSearch());\r\n    dispatch(fetchItems());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading || isSearching) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <InventoryItemsTableContainer\r\n        items={result.length > 0 ? result : items}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InventoryItems;\r\n","import React from \"react\";\r\nimport { Button, Hidden } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySalesTableHeader = ({\r\n  toggleAddItemSaleRow,\r\n  showAddItemSaleRow,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemSaleRow(!showAddItemSaleRow);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n      <div>\r\n        <Hidden smDown>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddTransactionPressed}\r\n          >\r\n            {`${showAddItemSaleRow ? \"Cancel\" : \"Add\"}  Transaction`}\r\n          </Button>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySalesTableHeader;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  TextField,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Autocomplete,\r\n} from \"@material-ui/core\";\r\nimport { addItemSale } from \"../inventorySalesSlice\";\r\nimport { searchItems, clearItemsSearch } from \"../../inventorySearchSlice\";\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr / 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTableAddItemRow = ({\r\n  showAddItemSaleRow,\r\n  toggleAddItemSaleRow,\r\n  salesDate,\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { result, isLoading } = useSelector((state) => state.inventorySearch);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemSaleRow) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnQuantityChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value > 0 && value <= Number.parseInt(selectedItem.inStock)) {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n  const resetValues = () => {\r\n    setSelectedItem({});\r\n    setQuantity(1);\r\n  };\r\n\r\n  const onSubmitPressed = () => {\r\n    dispatch(addItemSale(selectedItem.ID, quantity));\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    resetValues();\r\n    dispatch(clearItemsSearch());\r\n    toggleAddItemSaleRow(false);\r\n  };\r\n\r\n  const renderItemDetails = () => {\r\n    // Compute Net Sales\r\n    let sales = selectedItem.price * quantity;\r\n\r\n    const incentiveAmount = selectedItem.isIncentiveFixed\r\n      ? Number(selectedItem.incentiveAmount).toFixed(2)\r\n      : Number(sales * (selectedItem.incentiveRate / 100)).toFixed(2);\r\n    const netSales = sales - incentiveAmount;\r\n\r\n    if (Object.keys(selectedItem).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableCell>\r\n          <Typography>₱{Number(selectedItem.price).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes.quantityCell}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={handleOnQuantityChange}\r\n            fullWidth\r\n          ></TextField>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(sales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {`${Number(selectedItem.incentiveRate).toFixed(2)}%`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>\r\n            {selectedItem.isIncentiveFixed\r\n              ? `₱${Number(selectedItem.incentiveAmount).toFixed(2)}`\r\n              : `₱${Number(sales * (selectedItem.incentiveRate / 100)).toFixed(\r\n                  2\r\n                )}`}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>₱{Number(netSales).toFixed(2)}</Typography>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Typography>{selectedItem.category}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <div className={classes.buttonRows}>\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"outlined\"\r\n              onClick={onSubmitPressed}\r\n            >\r\n              <Check />\r\n            </Button>\r\n            <Button\r\n              className={classes.cancelButton}\r\n              variant=\"outlined\"\r\n              onClick={onCancelPressed}\r\n            >\r\n              <Cancel />\r\n            </Button>\r\n          </div>\r\n        </TableCell>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const search = (searchTerm) => {\r\n    if (searchTerm === \"\") {\r\n      dispatch(clearItemsSearch());\r\n    } else {\r\n      dispatch(searchItems(searchTerm));\r\n    }\r\n  };\r\n\r\n  const debouncedSearch = debounce(search, 800);\r\n\r\n  const handleOnSearchTermChange = (e) => {\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <Typography>{salesDate}</Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Autocomplete\r\n          loading={isLoading}\r\n          options={result.filter((item) => item.inStock > 0)}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              label=\"Product Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleOnSearchTermChange}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {isLoading ? (\r\n                      <CircularProgress color=\"secondary\" size=\"1.5rem\" />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(_, data, reason) => {\r\n            if (reason === \"select-option\") {\r\n              setSelectedItem(data);\r\n            }\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {renderItemDetails()}\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport InventorySalesTableHeader from \"./InventorySalesTableHeader\";\r\nimport { InventorySalesTableAddItemRow } from \"./InventorySalesTableAddItemRow\";\r\nimport { showModal } from \"../../../modals/modalSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const InventorySalesTable = ({ data, columns, salesDate }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemSaleRow, toggleAddItemSaleRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemSaleDeleteButtonPressed = (itemIndex) => {\r\n    dispatch(\r\n      showModal({\r\n        modalType: \"DELETE_SALE_CONFIRMATION_MODAL\",\r\n        modalProps: {\r\n          title: \"Delete transaction?\",\r\n          message: \"Are you sure you want to delete this transaction?\",\r\n          itemIndex,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InventorySalesTableHeader\r\n        toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n        showAddItemSaleRow={showAddItemSaleRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <InventorySalesTableAddItemRow\r\n              showAddItemSaleRow={showAddItemSaleRow}\r\n              toggleAddItemSaleRow={toggleAddItemSaleRow}\r\n              salesDate={salesDate}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemSaleDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { InventorySalesTable } from \"./InventorySalesTable\";\r\nimport moment from \"moment\";\r\nimport { currencyFormatter } from \"../../../../utils/formatter\";\r\n\r\nconst InventorySalesTableContainer = ({ itemSales, salesDate }) => {\r\n  const data = useMemo(() => {\r\n    return itemSales.map((itemSale) => {\r\n      return {\r\n        col1: moment(itemSale.CreatedAt).format(\"L\"),\r\n        col2: itemSale.item ? itemSale.item.name : \"\",\r\n        col3: currencyFormatter(Number(itemSale.item.price)),\r\n        col4: itemSale.quantity,\r\n        col5: currencyFormatter(Number(itemSale.sales)),\r\n        col6: `${Number(itemSale.item.incentiveRate).toFixed(2)}%`,\r\n        col7: itemSale.item.isIncentiveFixed\r\n          ? currencyFormatter(Number(itemSale.item.incentiveAmount))\r\n          : currencyFormatter(Number(itemSale.incentives * itemSale.quantity)),\r\n        col8: currencyFormatter(Number(itemSale.netSales)),\r\n        col9: itemSale.item.category,\r\n      };\r\n    });\r\n  }, [itemSales]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"col1\",\r\n      },\r\n      {\r\n        Header: \"Product\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"col3\",\r\n      },\r\n      {\r\n        Header: \"Qty\",\r\n        accessor: \"col4\",\r\n      },\r\n      {\r\n        Header: \"Sales\",\r\n        accessor: \"col5\",\r\n      },\r\n      {\r\n        Header: \"Rate\",\r\n        accessor: \"col6\",\r\n      },\r\n      {\r\n        Header: \"Incentives\",\r\n        accessor: \"col7\",\r\n      },\r\n      {\r\n        Header: \"Net Sales\",\r\n        accessor: \"col8\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col9\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    salesDate,\r\n  };\r\n\r\n  return <InventorySalesTable {...stateToProps} />;\r\n};\r\n\r\nexport default InventorySalesTableContainer;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchItemSales } from \"./inventorySalesSlice\";\r\nimport InventorySalesTableContainer from \"./InventorySalesTable/InventorySalesTableContainer\";\r\nimport moment from \"moment\";\r\nimport { SalesDatePicker, SalesStats } from \"../../../components/sales\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst InventorySales = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const currentDate = moment(Date.now()).format(\"MM-DD-YYYY\");\r\n  const [salesDate, setSalesDate] = useState(currentDate);\r\n  const { isLoading, itemSales, dailySales, metadata, error } = useSelector(\r\n    (state) => state.inventorySales\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemSales({ salesDate: salesDate, salesDateCateg: \"daily\" }));\r\n  }, [dispatch, salesDate]);\r\n\r\n  const handleOnSalesDateChanged = (value) => {\r\n    setSalesDate(value.salesDate);\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n  const handleOnSalesDateCategChanged = (value) => {\r\n    dispatch(fetchItemSales(value));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return (\r\n      <>\r\n        <SalesStats metadata={metadata} dailySales={dailySales} />\r\n        <InventorySalesTableContainer\r\n          itemSales={itemSales}\r\n          salesDate={salesDate}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SalesDatePicker\r\n        onSalesDateCategChanged={handleOnSalesDateCategChanged}\r\n        onSalesDateChanged={handleOnSalesDateChanged}\r\n      />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySales;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport InventoryItems from \"./inventoryItems/InventoryItems\";\r\nimport InventorySales from \"./inventorySales/InventorySales\";\r\n\r\nconst InventoryPage = ({ match, ...restProps }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/items`} component={InventoryItems} />\r\n      <Route path={`${match.url}/sales`} component={InventorySales} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  LoadingModal,\r\n  ErrorModal,\r\n  SuccessModal,\r\n} from \"../../components/modals\";\r\n\r\nconst modalComponents = {\r\n  LOADING_MODAL: LoadingModal,\r\n  ERROR_MODAL: ErrorModal,\r\n  SUCCESS_MODAL: SuccessModal,\r\n};\r\n\r\nconst InfoModalManager = () => {\r\n  const { modalProps, modalType } = useSelector((state) => state.infoModals);\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modalComponents[modalType];\r\n  return <Modal isVisible={modalType !== \"\"} {...modalProps} />;\r\n};\r\n\r\nexport default InfoModalManager;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      gridGap: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      flexDirection: \"column\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    itemCount: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ItemCategoriesTableHeader = ({\r\n  toggleAddItemCategoryRow,\r\n  showAddItemCategoryRow,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleAddTransactionPressed = () => {\r\n    toggleAddItemCategoryRow(!showAddItemCategoryRow);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div></div>\r\n\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddTransactionPressed}\r\n        >\r\n          {`${showAddItemCategoryRow ? \"Cancel\" : \"Add\"}  Category`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemCategoriesTableHeader;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, TableCell, TableRow, Button } from \"@material-ui/core\";\r\nimport { addItemCategory } from \"../../../itemCategory/itemCategorySlice\";\r\n\r\nimport { Check, Cancel } from \"@material-ui/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { showInfoModal } from \"../../../modals/infoModalSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    loadingIndicator: {\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n    },\r\n    quantityCell: {},\r\n    buttonRows: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr / 1fr\",\r\n      gridGap: \"1em\",\r\n    },\r\n    submitButton: {\r\n      borderColor: \"green\",\r\n      color: \"green\",\r\n    },\r\n    cancelButton: {\r\n      borderColor: \"red\",\r\n      color: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ItemCategoriesTableAddItemRow = ({\r\n  showAddItemCategoryRow,\r\n  toggleAddItemCategoryRow,\r\n}) => {\r\n  const { categories } = useSelector((state) => state.itemCategories);\r\n  const { reset, handleSubmit, register, errors } = useForm({\r\n    defaultValues: {\r\n      name: \"\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Only show this row when the user pressed the add item button\r\n  if (!showAddItemCategoryRow) {\r\n    return null;\r\n  }\r\n\r\n  const onSubmitPressed = (values) => {\r\n    if (\r\n      !categories.find(\r\n        (categ) =>\r\n          String(categ.name).toLowerCase() === String(values.name).toLowerCase()\r\n      )\r\n    ) {\r\n      dispatch(addItemCategory(values));\r\n    } else {\r\n      dispatch(\r\n        showInfoModal({\r\n          modalType: \"ERROR_MODAL\",\r\n          modalProps: {\r\n            message: \"Existing Category\",\r\n            isInfoModal: true,\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    reset();\r\n    toggleAddItemCategoryRow(false);\r\n  };\r\n\r\n  const onCancelPressed = () => {\r\n    reset();\r\n    toggleAddItemCategoryRow(false);\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      <TableCell>\r\n        <form id=\"addItemCategoryForm\" onSubmit={handleSubmit(onSubmitPressed)}>\r\n          <TextField\r\n            fullWidth\r\n            name={\"name\"}\r\n            label=\"Category Name\"\r\n            inputRef={register({\r\n              required: true,\r\n            })}\r\n            error={!!errors.name}\r\n            helperText={!!errors.name ? \"Invalid Input\" : \"\"}\r\n          />\r\n        </form>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <div className={classes.buttonRows}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.submitButton}\r\n            form=\"addItemCategoryForm\"\r\n            type=\"submit\"\r\n          >\r\n            <Check />\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.cancelButton}\r\n            onClick={onCancelPressed}\r\n          >\r\n            <Cancel />\r\n          </Button>\r\n        </div>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport ItemCategoriesTableHeader from \"./ItemCategoriesTableHeader\";\r\nimport { ItemCategoriesTableAddItemRow } from \"./ItemCategoriesTableAddItemRow\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteItemCategory } from \"../../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: \"1.5em\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#1d1d1d\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n\r\n    showItemCountButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    showItemCountField: {\r\n      width: \"50px\",\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    pagination: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      paddingTop: \"1em\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    inStock: {\r\n      color: theme.palette.secondary.main,\r\n      border: \"2px solid red\",\r\n      borderColor: theme.palette.secondary.main,\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    itemDiscounted: {\r\n      color: blue[400],\r\n      border: \"2px solid red\",\r\n      borderColor: blue[400],\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    outOfStock: {\r\n      color: \"red\",\r\n      border: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n      padding: \"1em\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    deleteButton: {\r\n      borderColor: \"red\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const ItemCategoriesTable = ({ data, columns, categories }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [showAddItemCategoryRow, toggleAddItemCategoryRow] = useState(false);\r\n  const { getTableProps, headerGroups, prepareRow, rows } = useTable(\r\n    {\r\n      data,\r\n      columns,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const renderCell = (cell) => {\r\n    return <Typography>{cell.render(\"Cell\")}</Typography>;\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onItemCategoryDeleteButtonPressed = (itemIndex) => {\r\n    const itemCategory = categories[itemIndex];\r\n\r\n    dispatch(deleteItemCategory(itemCategory.ID));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <ItemCategoriesTableHeader\r\n        toggleAddItemCategoryRow={toggleAddItemCategoryRow}\r\n        showAddItemCategoryRow={showAddItemCategoryRow}\r\n      />\r\n      <TableContainer>\r\n        <Table {...getTableProps()} stickyHeader>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableCell\r\n                    {...header.getHeaderProps(header.getSortByToggleProps())}\r\n                  >\r\n                    <div key={header.id} className={classes.tableHeader}>\r\n                      {header.render(\"Header\")}\r\n                      {header.isSorted ? (\r\n                        header.isSortedDesc ? (\r\n                          <ArrowDownwardIcon fontSize=\"small\" />\r\n                        ) : (\r\n                          <ArrowUpwardIcon fontSize=\"small\" />\r\n                        )\r\n                      ) : null}\r\n                    </div>\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody className={classes.container}>\r\n            <ItemCategoriesTableAddItemRow\r\n              showAddItemCategoryRow={showAddItemCategoryRow}\r\n              toggleAddItemCategoryRow={toggleAddItemCategoryRow}\r\n            />\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, _) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <>\r\n                    <TableRow key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, index) => {\r\n                        return (\r\n                          <TableCell key={`col${index}`}>\r\n                            <div {...cell.getCellProps()}>\r\n                              {renderCell(cell)}\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <Button\r\n                          className={classes.deleteButton}\r\n                          variant=\"outlined\"\r\n                          onClick={() => {\r\n                            onItemCategoryDeleteButtonPressed(row.index);\r\n                          }}\r\n                        >\r\n                          <Delete color=\"error\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { ItemCategoriesTable } from \"./ItemCategoriesTable\";\r\nconst ItemCategoriesTableContainer = ({ categories }) => {\r\n  const data = useMemo(() => {\r\n    return categories.map((category) => {\r\n      return {\r\n        col1: category.name,\r\n      };\r\n    });\r\n  }, [categories]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"col1\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const stateToProps = {\r\n    data,\r\n    columns,\r\n    categories,\r\n  };\r\n\r\n  return <ItemCategoriesTable {...stateToProps} />;\r\n};\r\n\r\nexport default ItemCategoriesTableContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ItemCategoriesTableContainer from \"./ItemCategoriesTable/ItemCategoriesTableContainer\";\r\nimport { fetchItemCategories } from \"../../itemCategory/itemCategorySlice\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#121212\",\r\n      paddingTop: \"83px\",\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n\r\n    loadingIndicator: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst ItemCategories = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, categories, error } = useSelector(\r\n    (state) => state.itemCategories\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchItemCategories());\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIndicator}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return <div>An Error has occured!</div>;\r\n    }\r\n    return <ItemCategoriesTableContainer categories={categories} />;\r\n  };\r\n\r\n  return <div className={classes.root}>{renderContent()}</div>;\r\n};\r\n\r\nexport default ItemCategories;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ItemCategories from \"./ItemCategories/ItemCategories\";\r\n\r\nconst AdminPage = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/item-categories`} component={ItemCategories} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ModalManager from \"../features/modals/ModalManager\";\r\n\r\nimport PrivateLayout from \"../components/PrivateLayout\";\r\nimport LoginPage from \"../features/auth/login/loginPage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { checkAuth } from \"../features/auth/authSlice\";\r\n\r\nimport HomePage from \"../features/home/HomePage\";\r\nimport ClientsPage from \"../features/clients/ClientsPage\";\r\nimport InventoryPage from \"../features/inventory/InventoryPage\";\r\nimport InfoModalManager from \"../features/modals/InfoModalManager\";\r\nimport AdminPage from \"../features/admin/AdminPage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    padding: 0,\r\n    margin: 0,\r\n  }, // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  toastContainer: {\r\n    zIndex: \"1000000\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(checkAuth());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/auth/login\" component={LoginPage} />\r\n            <PrivateLayout path=\"/home\" component={HomePage} />\r\n            <PrivateLayout path=\"/clients\" component={ClientsPage} />\r\n            <PrivateLayout path=\"/inventory\" component={InventoryPage} />\r\n            <PrivateLayout path=\"/admin\" component={AdminPage} />\r\n            <Redirect from=\"/\" to=\"/home/dashboard\" />\r\n          </Switch>\r\n          <ModalManager />\r\n          <InfoModalManager />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  };\r\n  return renderContent();\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport inventoryItemsReducer from \"../features/inventory/inventoryItems/inventoryItemsSlice\";\r\nimport inventorySalesReducer from \"../features/inventory/inventorySales/inventorySalesSlice\";\r\nimport inventorySearchReducer from \"../features/inventory/inventorySearchSlice\";\r\nimport homeSalesStats from \"../features/home/homeDashboard/homeSalesStats/homeSalesStatsSlice\";\r\nimport modalsReducer from \"../features/modals/modalSlice\";\r\nimport infoModalsReducer from \"../features/modals/infoModalSlice\";\r\nimport authReducer from \"../features/auth/authSlice\";\r\nimport drawerReducer from \"../features/drawer/drawerSlice\";\r\nimport notificationsReducer from \"../features/notifications/notificationsSlice\";\r\nimport clientsReducer from \"../features/clients/clientsSlice\";\r\nimport itemCategoriesReducer from \"../features/itemCategory/itemCategorySlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  inventoryItems: inventoryItemsReducer,\r\n  inventorySales: inventorySalesReducer,\r\n  inventorySearch: inventorySearchReducer,\r\n  homeSalesStats: homeSalesStats,\r\n  modals: modalsReducer,\r\n  infoModals: infoModalsReducer,\r\n  auth: authReducer,\r\n  drawer: drawerReducer,\r\n  clients: clientsReducer,\r\n  notifications: notificationsReducer,\r\n  itemCategories: itemCategoriesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot){\r\n    module.hot.accept(\"./rootReducer\", () => {\r\n        const newRootReducer = require('./rootReducer');\r\n        store.replaceReducer(newRootReducer);\r\n    })\r\n}\r\n\r\nexport default store;","import { CssBaseline, StylesProvider, ThemeProvider } from \"@material-ui/core\";\r\nimport { LocalizationProvider } from \"@material-ui/lab\";\r\nimport AdapterMoment from \"@material-ui/lab/AdapterMoment\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./app/App\";\r\nimport store from \"./app/store\";\r\nimport { darkTheme } from \"./consts\";\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <CssBaseline />\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </LocalizationProvider>\r\n      </ThemeProvider>\r\n    </StylesProvider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrender();\r\n"],"sourceRoot":""}